Generation:
100

Phenotype:
'LINKS' if direction and velocity_y >= robot_pos_y or velocity_x <= robot_pos_x and intersect_centers_x > intersect_radius else 'LINKS' if direction and velocity_y >= intersect_centers_y or velocity_y > obstacle_y and robot_pos_y >= ( intersect_radius * velocity_y ) or hypot( intersect_radius , intersect_centers_x ) <= hypot( obstacle_y , velocity_x ) or not hypot( velocity_x , robot_pos_x ) >= ( obstacle_x * velocity_y ) else 'RECHTS' if robot_pos_x <= velocity_y and direction else 'LINKS' if ( ( obstacle_x * velocity_y ) > velocity_y ) and ( intersect_radius < obstacle_y or robot_pos_y > obstacle_x or velocity_x > obstacle_y and ( obstacle_x / robot_pos_y ) > ( velocity_y / robot_pos_x ) ) or direction else 'LINKS' if obstacle_x < velocity_x or intersect_centers_y < robot_pos_x and intersect_centers_x > intersect_radius or direction else 'RECHTS' if not direction and ( obstacle_y * obstacle_y ) < velocity_x or not robot_pos_y <= obstacle_y or hypot( robot_pos_y , intersect_centers_y ) <= hypot( velocity_y , velocity_y ) and ( -6.63 / ( velocity_y / velocity_x ) ) < ( hypot( obstacle_x , velocity_y ) / velocity_y ) and ( -0.70 - hypot( velocity_y , intersect_centers_x ) ) < ( hypot( robot_pos_y , velocity_x ) / ( obstacle_x - intersect_radius ) ) else 'RECHTS' if direction and robot_pos_x <= velocity_x or velocity_x >= velocity_y and robot_pos_x >= intersect_centers_y else 'LINKS'

Genotype:
[44305, 2212, 9078, 50842, 47358, 99184, 56763, 61811, 57749, 43026, 97291, 77094, 43348, 24858, 55447, 92725, 7125, 73658, 15155, 29582, 31705, 69176, 90057, 84395, 96940, 7277, 67839, 57760, 77362, 56661, 76521, 34170, 73431, 3396, 44575, 98336, 69827, 3729, 95149, 74636, 60969, 60969, 97291, 95428, 20998, 6894, 19002, 86335, 13452, 66968, 38935, 16642, 31705, 69176, 90057, 25683, 56275, 71169, 25986, 56315, 77251, 7920, 12935, 56115, 68003, 70484, 4154, 63375, 33662, 61690, 9730, 73545, 95590, 6765, 37944, 70623, 75945, 37703, 88380, 17289, 5451, 91653, 70245, 95242, 26425, 95927, 62958, 39940, 78420, 18328, 47423, 78380, 79394, 92180, 90457, 28394, 4154, 63375, 37920, 58930, 56275, 59901, 93458, 16620, 12385, 3996, 72548, 69972, 17788, 7920, 12943, 71275, 68065, 15, 61170, 591, 80228, 76313, 84861, 39782, 45400, 20637, 19556, 65459, 59464, 37022, 37566, 98422, 4154, 93005, 48423, 58930, 56275, 57228, 91938, 78470, 68181, 90680, 44151, 44151, 25090, 1310, 5553, 95591, 19350, 77555, 55831, 55425, 79807, 18154, 25278, 43208, 42510, 51659, 16158, 39450, 78573, 94355, 87130, 35295, 62438, 83140, 61898, 91938, 93725, 8428, 93333, 16763, 31079, 20290, 67179, 77871, 46300, 57635, 57210, 65019, 68660, 83697, 4259, 4865, 19105, 87190, 74292, 98924, 93538, 8178, 25957, 79519, 13782, 97291, 95428, 20998, 8769, 27072, 7670, 36156, 21715, 37880, 72203, 31705, 69176, 90057, 84395, 96940, 34597, 85987, 40130, 61747, 56661, 89390, 45495, 99144, 18786, 28750, 45290, 87190, 35929, 26342, 95149, 6073, 60969, 60969, 36758, 42920, 32541, 20996, 54199, 66330, 26842, 35778, 51410, 93064, 2011, 35905, 68558, 62958, 82633, 32997, 34093, 41645, 23192, 69513, 75700, 56191, 38823, 38823, 62958, 28125, 60443, 3348, 29445, 2798, 46300, 28054, 69513, 49523, 14200, 1077, 62100, 3336, 39966, 77991, 58289, 38321, 55910, 82999, 35396, 2076, 49053, 77871, 70099, 5200, 50064, 77871, 26705, 69251, 85987, 33869, 74888, 81880, 72840, 81425, 50064, 85559, 74275, 11265, 39966, 77991, 58289, 38321, 10387, 82999, 38230, 33957, 40390, 54389, 42713, 63010, 98466, 59410, 44649, 85987, 33869, 74888, 97800, 93617, 70745, 48704, 77871, 36144, 51495, 82740, 47277, 90320, 77663, 57438, 99184, 77071, 9728, 57749, 38440, 97291, 95678, 13200, 36456, 71384, 305, 26377, 58503, 60420, 9419, 31705, 69176, 59694, 94994, 27145, 89384, 88784, 81185, 84966, 7920, 69777, 55370, 99322, 85370, 46245, 72046, 6041, 51903, 3548, 99539, 92902, 5227, 27970, 67312, 91010, 41855, 52958, 52671, 88309, 62758, 49312, 54762, 71029, 4240, 5528, 97025, 93168, 8579, 61177, 23018, 82100, 21990, 15284, 89508, 62747, 91089, 72964, 95187, 47841, 42053, 11644, 54667, 37885, 95546, 15107, 96105, 49240, 11162, 39623, 98038, 4817, 21701, 13128, 45420, 37993, 58972, 19940, 6482, 18484, 81872, 23155, 96573, 46786, 49676, 14598, 45669, 29309, 45342, 96943, 76355, 64438, 88484, 56737, 52910, 87489, 97075, 1312, 9745, 59738, 18714, 83152, 23054, 52496, 84533, 79064, 24858, 7793, 29882, 76899, 81703, 3564, 76849, 41483, 76303, 16080, 39427, 14938, 43884, 7448, 77614, 80975, 37024, 75541, 19599, 13371, 25603, 95026, 11467, 84671, 62999, 92923]
Tree:
(<start> (<if_expr> (<expr> (<if_expr> (<expr> (<if_expr> (<expr> (<action> 'LINKS'))  if  (<direction_compound_expr> (<boolean_feature> direction)  and  (<bool_expr> (<bool_expr> (<bool_term> (<bool_factor> (<compare> (<arith_expr> (<numeric_feature> velocity_y))   (<comp_op> >=)   (<arith_expr> (<numeric_feature> robot_pos_y))))))  or  (<bool_term> (<bool_term> (<bool_factor> (<compare> (<arith_expr> (<numeric_feature> velocity_x))   (<comp_op> <=)   (<arith_expr> (<numeric_feature> robot_pos_x)))))  and  (<bool_factor> (<compare> (<arith_expr> (<numeric_feature> intersect_centers_x))   (<comp_op> >)   (<arith_expr> (<numeric_feature> intersect_radius)))))))  else  (<expr> (<action> 'LINKS'))))  if  (<direction_compound_expr> (<boolean_feature> direction)  and  (<bool_expr> (<bool_expr> (<bool_expr> (<bool_expr> (<bool_term> (<bool_factor> (<compare> (<arith_expr> (<numeric_feature> velocity_y))   (<comp_op> >=)   (<arith_expr> (<numeric_feature> intersect_centers_y))))))  or  (<bool_term> (<bool_term> (<bool_factor> (<compare> (<arith_expr> (<numeric_feature> velocity_y))   (<comp_op> >)   (<arith_expr> (<numeric_feature> obstacle_y)))))  and  (<bool_factor> (<compare> (<arith_expr> (<numeric_feature> robot_pos_y))   (<comp_op> >=)   (<arith_expr> (  (<arith_expr> (<numeric_feature> intersect_radius))   (<math_op> *)   (<arith_expr> (<numeric_feature> velocity_y))  ))))))  or  (<bool_term> (<bool_factor> (<compare> (<arith_expr> hypot(  (<arith_expr> (<numeric_feature> intersect_radius))  ,  (<arith_expr> (<numeric_feature> intersect_centers_x))  ))   (<comp_op> <=)   (<arith_expr> hypot(  (<arith_expr> (<numeric_feature> obstacle_y))  ,  (<arith_expr> (<numeric_feature> velocity_x))  ))))))  or  (<bool_term> (<bool_factor> not  (<bool_factor> (<compare> (<arith_expr> hypot(  (<arith_expr> (<numeric_feature> velocity_x))  ,  (<arith_expr> (<numeric_feature> robot_pos_x))  ))   (<comp_op> >=)   (<arith_expr> (  (<arith_expr> (<numeric_feature> obstacle_x))   (<math_op> *)   (<arith_expr> (<numeric_feature> velocity_y))  ))))))))  else  (<expr> (<if_expr> (<expr> (<action> 'RECHTS'))  if  (<direction_compound_expr> (<bool_expr> (<bool_term> (<bool_factor> (<compare> (<arith_expr> (<numeric_feature> robot_pos_x))   (<comp_op> <=)   (<arith_expr> (<numeric_feature> velocity_y))))))  and  (<boolean_feature> direction))  else  (<expr> (<action> 'LINKS'))))))  if  (<direction_compound_expr> (<bool_expr> (<bool_term> (<bool_term> (<bool_factor> (  (<bool_expr> (<bool_term> (<bool_factor> (<compare> (<arith_expr> (  (<arith_expr> (<numeric_feature> obstacle_x))   (<math_op> *)   (<arith_expr> (<numeric_feature> velocity_y))  ))   (<comp_op> >)   (<arith_expr> (<numeric_feature> velocity_y))))))  )))  and  (<bool_factor> (  (<bool_expr> (<bool_expr> (<bool_expr> (<bool_term> (<bool_factor> (<compare> (<arith_expr> (<numeric_feature> intersect_radius))   (<comp_op> <)   (<arith_expr> (<numeric_feature> obstacle_y))))))  or  (<bool_term> (<bool_factor> (<compare> (<arith_expr> (<numeric_feature> robot_pos_y))   (<comp_op> >)   (<arith_expr> (<numeric_feature> obstacle_x))))))  or  (<bool_term> (<bool_term> (<bool_factor> (<compare> (<arith_expr> (<numeric_feature> velocity_x))   (<comp_op> >)   (<arith_expr> (<numeric_feature> obstacle_y)))))  and  (<bool_factor> (<compare> (<arith_expr> (  (<arith_expr> (<numeric_feature> obstacle_x))   (<math_op> /)   (<arith_expr> (<numeric_feature> robot_pos_y))  ))   (<comp_op> >)   (<arith_expr> (  (<arith_expr> (<numeric_feature> velocity_y))   (<math_op> /)   (<arith_expr> (<numeric_feature> robot_pos_x))  ))))))  ))))  or  (<boolean_feature> direction))  else  (<expr> (<if_expr> (<expr> (<if_expr> (<expr> (<action> 'LINKS'))  if  (<direction_compound_expr> (<bool_expr> (<bool_expr> (<bool_term> (<bool_factor> (<compare> (<arith_expr> (<numeric_feature> obstacle_x))   (<comp_op> <)   (<arith_expr> (<numeric_feature> velocity_x))))))  or  (<bool_term> (<bool_term> (<bool_factor> (<compare> (<arith_expr> (<numeric_feature> intersect_centers_y))   (<comp_op> <)   (<arith_expr> (<numeric_feature> robot_pos_x)))))  and  (<bool_factor> (<compare> (<arith_expr> (<numeric_feature> intersect_centers_x))   (<comp_op> >)   (<arith_expr> (<numeric_feature> intersect_radius))))))  or  (<boolean_feature> direction))  else  (<expr> (<action> 'RECHTS'))))  if  (<direction_compound_expr> (<boolean_feature> not direction)  and  (<bool_expr> (<bool_expr> (<bool_expr> (<bool_term> (<bool_factor> (<compare> (<arith_expr> (  (<arith_expr> (<numeric_feature> obstacle_y))   (<math_op> *)   (<arith_expr> (<numeric_feature> obstacle_y))  ))   (<comp_op> <)   (<arith_expr> (<numeric_feature> velocity_x))))))  or  (<bool_term> (<bool_factor> not  (<bool_factor> (<compare> (<arith_expr> (<numeric_feature> robot_pos_y))   (<comp_op> <=)   (<arith_expr> (<numeric_feature> obstacle_y)))))))  or  (<bool_term> (<bool_term> (<bool_term> (<bool_factor> (<compare> (<arith_expr> hypot(  (<arith_expr> (<numeric_feature> robot_pos_y))  ,  (<arith_expr> (<numeric_feature> intersect_centers_y))  ))   (<comp_op> <=)   (<arith_expr> hypot(  (<arith_expr> (<numeric_feature> velocity_y))  ,  (<arith_expr> (<numeric_feature> velocity_y))  )))))  and  (<bool_factor> (<compare> (<arith_expr> (  (<arith_expr> (<number> (<maybe_sign> -) (<digit> 6) . (<digit> 6) (<digit> 3)))   (<math_op> /)   (<arith_expr> (  (<arith_expr> (<numeric_feature> velocity_y))   (<math_op> /)   (<arith_expr> (<numeric_feature> velocity_x))  ))  ))   (<comp_op> <)   (<arith_expr> (  (<arith_expr> hypot(  (<arith_expr> (<numeric_feature> obstacle_x))  ,  (<arith_expr> (<numeric_feature> velocity_y))  ))   (<math_op> /)   (<arith_expr> (<numeric_feature> velocity_y))  )))))  and  (<bool_factor> (<compare> (<arith_expr> (  (<arith_expr> (<number> (<maybe_sign> -) (<digit> 0) . (<digit> 7) (<digit> 0)))   (<math_op> -)   (<arith_expr> hypot(  (<arith_expr> (<numeric_feature> velocity_y))  ,  (<arith_expr> (<numeric_feature> intersect_centers_x))  ))  ))   (<comp_op> <)   (<arith_expr> (  (<arith_expr> hypot(  (<arith_expr> (<numeric_feature> robot_pos_y))  ,  (<arith_expr> (<numeric_feature> velocity_x))  ))   (<math_op> /)   (<arith_expr> (  (<arith_expr> (<numeric_feature> obstacle_x))   (<math_op> -)   (<arith_expr> (<numeric_feature> intersect_radius))  ))  )))))))  else  (<expr> (<if_expr> (<expr> (<action> 'RECHTS'))  if  (<direction_compound_expr> (<boolean_feature> direction)  and  (<bool_expr> (<bool_expr> (<bool_term> (<bool_factor> (<compare> (<arith_expr> (<numeric_feature> robot_pos_x))   (<comp_op> <=)   (<arith_expr> (<numeric_feature> velocity_x))))))  or  (<bool_term> (<bool_term> (<bool_factor> (<compare> (<arith_expr> (<numeric_feature> velocity_x))   (<comp_op> >=)   (<arith_expr> (<numeric_feature> velocity_y)))))  and  (<bool_factor> (<compare> (<arith_expr> (<numeric_feature> robot_pos_x))   (<comp_op> >=)   (<arith_expr> (<numeric_feature> intersect_centers_y)))))))  else  (<expr> (<action> 'LINKS'))))))))

Fitness:
4.44433001902566