Generation:
100

Phenotype:
'LINKS' if direction and velocity_y >= robot_pos_y or velocity_x <= robot_pos_x and intersect_centers_x > intersect_radius else 'LINKS' if direction and velocity_y > intersect_centers_y or velocity_y > obstacle_y and robot_pos_y > ( intersect_radius * velocity_y ) or not hypot( intersect_centers_x , velocity_x ) > ( obstacle_y * obstacle_y ) or not hypot( velocity_x , robot_pos_x ) >= ( obstacle_x * velocity_y ) else 'RECHTS' if robot_pos_x <= velocity_y and direction else 'LINKS' if ( robot_pos_y > velocity_y ) and ( obstacle_x <= velocity_x or velocity_y > obstacle_y and robot_pos_y > robot_pos_x or velocity_x > obstacle_y and ( obstacle_x / robot_pos_y ) > ( velocity_y / robot_pos_x ) ) or direction else 'LINKS' if obstacle_x < velocity_x or intersect_centers_y < robot_pos_x and intersect_centers_x >= intersect_radius or direction else 'RECHTS' if not direction and ( velocity_x * obstacle_x ) < velocity_x or not robot_pos_y <= obstacle_y or hypot( robot_pos_y , intersect_centers_y ) <= hypot( velocity_y , velocity_y ) and ( -6.63 / ( velocity_y / velocity_x ) ) < ( hypot( obstacle_x , obstacle_y ) / velocity_y ) and ( -0.76 - hypot( robot_pos_x , intersect_centers_x ) ) < ( hypot( velocity_x , velocity_x ) / ( obstacle_x - intersect_radius ) ) else 'RECHTS' if direction and robot_pos_x < velocity_x or velocity_x >= velocity_y and robot_pos_x >= robot_pos_y else 'LINKS'

Genotype:
[44305, 2212, 9078, 50842, 47358, 99184, 28635, 19253, 57749, 87190, 97291, 77094, 43348, 24858, 55447, 13240, 14487, 73658, 15155, 29582, 31705, 69176, 90057, 84395, 96940, 7277, 76809, 57760, 94651, 56661, 76521, 34170, 73431, 28140, 44575, 98336, 22471, 70645, 95149, 38440, 60969, 60969, 97291, 95428, 20998, 6894, 19002, 86335, 13452, 27024, 38935, 16642, 31705, 69176, 90057, 25683, 56275, 71169, 81318, 56315, 77251, 7920, 12935, 56115, 68003, 18786, 4154, 63375, 33662, 91246, 9730, 68136, 62958, 39940, 78420, 84338, 50238, 78480, 11610, 3320, 78197, 88620, 54199, 23375, 23971, 35778, 88975, 46273, 62958, 39940, 78420, 18328, 47423, 78380, 59612, 92180, 90457, 28394, 4154, 63375, 37920, 58930, 56275, 71169, 93458, 16620, 16911, 34332, 72548, 69972, 17788, 7920, 12943, 71275, 68065, 15, 61170, 591, 87190, 45337, 81935, 39782, 45400, 20637, 19556, 65459, 59464, 37022, 37566, 98422, 32755, 96155, 91938, 78470, 68181, 90680, 44151, 44151, 25090, 14420, 64083, 72275, 17465, 37920, 18069, 80510, 85694, 31705, 69176, 90057, 25683, 56275, 71169, 81318, 56315, 77251, 7920, 12935, 9460, 16181, 93558, 84920, 7639, 94355, 87130, 35295, 62438, 83140, 61898, 93558, 93725, 8428, 93333, 16763, 31079, 66605, 23385, 77871, 46300, 57635, 57210, 65019, 68660, 57876, 4259, 60020, 94588, 87190, 74292, 98924, 93538, 8178, 28635, 63865, 13782, 97291, 95428, 20998, 8769, 27072, 7670, 36156, 21715, 37880, 72203, 31705, 69176, 90057, 84395, 96940, 34597, 85987, 40130, 61747, 56661, 89390, 45495, 99144, 86786, 28750, 45290, 83644, 97255, 85154, 95149, 6073, 60969, 60969, 36758, 42920, 32541, 20996, 54199, 57815, 47975, 35778, 71365, 29946, 92533, 35905, 68558, 62958, 82633, 32997, 34093, 41645, 15209, 69513, 75700, 56191, 38823, 38823, 62958, 28125, 60443, 3348, 29445, 42506, 46300, 28054, 69513, 49523, 14200, 1077, 62100, 3336, 39966, 77991, 58289, 38321, 55910, 78805, 35396, 55206, 49053, 77871, 70099, 67720, 14649, 77871, 26705, 69251, 85987, 33869, 74888, 81880, 72840, 17575, 99022, 85559, 74275, 11265, 39966, 77991, 58289, 38321, 10387, 82999, 11780, 33957, 10906, 11057, 42713, 59200, 47788, 70160, 70290, 85987, 33869, 74888, 53670, 75533, 70745, 48704, 77871, 36144, 51495, 82740, 47277, 90320, 77663, 57438, 99184, 62355, 33352, 57749, 38440, 97291, 43138, 46280, 16158, 14510, 51955, 133, 61705, 33325, 77144, 31705, 69176, 59694, 94994, 27145, 89384, 66968, 81185, 84966, 7920, 69777, 55370, 90457, 85370, 46245, 92564, 6041, 10371, 3548, 99539, 92902, 5227, 27970, 67312, 91010, 41855, 52958, 52671, 88309, 62758, 49312, 54762, 71029, 4240, 5528, 97025, 93168, 8579, 61177, 23018, 82100, 21990, 15284, 89508, 62747, 91089, 72964, 95187, 47841, 42053, 11644, 54667, 37885, 95546, 15107, 96105, 49240, 11162, 39623, 98038, 4817, 21701, 13128, 45420, 37993, 58972, 19940, 6482, 18484, 81872, 23155, 96573, 46786, 49676, 14598, 45669, 29309, 45342, 96943, 76355, 64438, 88484, 56737, 52910, 87489, 97075, 1312, 9745, 59738, 18714, 83152, 23054, 52496, 84533, 79064, 24858, 7793, 29882, 76899, 81703, 3564, 76849, 41483, 76303, 16080, 39427, 14938, 43884, 7448, 77614, 80975, 37024, 75541, 19599, 13371, 25603, 95026, 11467, 84671, 62999, 92923]
Tree:
(<start> (<if_expr> (<expr> (<if_expr> (<expr> (<if_expr> (<expr> (<action> 'LINKS'))  if  (<direction_compound_expr> (<boolean_feature> direction)  and  (<bool_expr> (<bool_expr> (<bool_term> (<bool_factor> (<compare> (<arith_expr> (<numeric_feature> velocity_y))   (<comp_op> >=)   (<arith_expr> (<numeric_feature> robot_pos_y))))))  or  (<bool_term> (<bool_term> (<bool_factor> (<compare> (<arith_expr> (<numeric_feature> velocity_x))   (<comp_op> <=)   (<arith_expr> (<numeric_feature> robot_pos_x)))))  and  (<bool_factor> (<compare> (<arith_expr> (<numeric_feature> intersect_centers_x))   (<comp_op> >)   (<arith_expr> (<numeric_feature> intersect_radius)))))))  else  (<expr> (<action> 'LINKS'))))  if  (<direction_compound_expr> (<boolean_feature> direction)  and  (<bool_expr> (<bool_expr> (<bool_expr> (<bool_expr> (<bool_term> (<bool_factor> (<compare> (<arith_expr> (<numeric_feature> velocity_y))   (<comp_op> >)   (<arith_expr> (<numeric_feature> intersect_centers_y))))))  or  (<bool_term> (<bool_term> (<bool_factor> (<compare> (<arith_expr> (<numeric_feature> velocity_y))   (<comp_op> >)   (<arith_expr> (<numeric_feature> obstacle_y)))))  and  (<bool_factor> (<compare> (<arith_expr> (<numeric_feature> robot_pos_y))   (<comp_op> >)   (<arith_expr> (  (<arith_expr> (<numeric_feature> intersect_radius))   (<math_op> *)   (<arith_expr> (<numeric_feature> velocity_y))  ))))))  or  (<bool_term> (<bool_factor> not  (<bool_factor> (<compare> (<arith_expr> hypot(  (<arith_expr> (<numeric_feature> intersect_centers_x))  ,  (<arith_expr> (<numeric_feature> velocity_x))  ))   (<comp_op> >)   (<arith_expr> (  (<arith_expr> (<numeric_feature> obstacle_y))   (<math_op> *)   (<arith_expr> (<numeric_feature> obstacle_y))  )))))))  or  (<bool_term> (<bool_factor> not  (<bool_factor> (<compare> (<arith_expr> hypot(  (<arith_expr> (<numeric_feature> velocity_x))  ,  (<arith_expr> (<numeric_feature> robot_pos_x))  ))   (<comp_op> >=)   (<arith_expr> (  (<arith_expr> (<numeric_feature> obstacle_x))   (<math_op> *)   (<arith_expr> (<numeric_feature> velocity_y))  ))))))))  else  (<expr> (<if_expr> (<expr> (<action> 'RECHTS'))  if  (<direction_compound_expr> (<bool_expr> (<bool_term> (<bool_factor> (<compare> (<arith_expr> (<numeric_feature> robot_pos_x))   (<comp_op> <=)   (<arith_expr> (<numeric_feature> velocity_y))))))  and  (<boolean_feature> direction))  else  (<expr> (<action> 'LINKS'))))))  if  (<direction_compound_expr> (<bool_expr> (<bool_term> (<bool_term> (<bool_factor> (  (<bool_expr> (<bool_term> (<bool_factor> (<compare> (<arith_expr> (<numeric_feature> robot_pos_y))   (<comp_op> >)   (<arith_expr> (<numeric_feature> velocity_y))))))  )))  and  (<bool_factor> (  (<bool_expr> (<bool_expr> (<bool_expr> (<bool_term> (<bool_factor> (<compare> (<arith_expr> (<numeric_feature> obstacle_x))   (<comp_op> <=)   (<arith_expr> (<numeric_feature> velocity_x))))))  or  (<bool_term> (<bool_term> (<bool_factor> (<compare> (<arith_expr> (<numeric_feature> velocity_y))   (<comp_op> >)   (<arith_expr> (<numeric_feature> obstacle_y)))))  and  (<bool_factor> (<compare> (<arith_expr> (<numeric_feature> robot_pos_y))   (<comp_op> >)   (<arith_expr> (<numeric_feature> robot_pos_x))))))  or  (<bool_term> (<bool_term> (<bool_factor> (<compare> (<arith_expr> (<numeric_feature> velocity_x))   (<comp_op> >)   (<arith_expr> (<numeric_feature> obstacle_y)))))  and  (<bool_factor> (<compare> (<arith_expr> (  (<arith_expr> (<numeric_feature> obstacle_x))   (<math_op> /)   (<arith_expr> (<numeric_feature> robot_pos_y))  ))   (<comp_op> >)   (<arith_expr> (  (<arith_expr> (<numeric_feature> velocity_y))   (<math_op> /)   (<arith_expr> (<numeric_feature> robot_pos_x))  ))))))  ))))  or  (<boolean_feature> direction))  else  (<expr> (<if_expr> (<expr> (<if_expr> (<expr> (<action> 'LINKS'))  if  (<direction_compound_expr> (<bool_expr> (<bool_expr> (<bool_term> (<bool_factor> (<compare> (<arith_expr> (<numeric_feature> obstacle_x))   (<comp_op> <)   (<arith_expr> (<numeric_feature> velocity_x))))))  or  (<bool_term> (<bool_term> (<bool_factor> (<compare> (<arith_expr> (<numeric_feature> intersect_centers_y))   (<comp_op> <)   (<arith_expr> (<numeric_feature> robot_pos_x)))))  and  (<bool_factor> (<compare> (<arith_expr> (<numeric_feature> intersect_centers_x))   (<comp_op> >=)   (<arith_expr> (<numeric_feature> intersect_radius))))))  or  (<boolean_feature> direction))  else  (<expr> (<action> 'RECHTS'))))  if  (<direction_compound_expr> (<boolean_feature> not direction)  and  (<bool_expr> (<bool_expr> (<bool_expr> (<bool_term> (<bool_factor> (<compare> (<arith_expr> (  (<arith_expr> (<numeric_feature> velocity_x))   (<math_op> *)   (<arith_expr> (<numeric_feature> obstacle_x))  ))   (<comp_op> <)   (<arith_expr> (<numeric_feature> velocity_x))))))  or  (<bool_term> (<bool_factor> not  (<bool_factor> (<compare> (<arith_expr> (<numeric_feature> robot_pos_y))   (<comp_op> <=)   (<arith_expr> (<numeric_feature> obstacle_y)))))))  or  (<bool_term> (<bool_term> (<bool_term> (<bool_factor> (<compare> (<arith_expr> hypot(  (<arith_expr> (<numeric_feature> robot_pos_y))  ,  (<arith_expr> (<numeric_feature> intersect_centers_y))  ))   (<comp_op> <=)   (<arith_expr> hypot(  (<arith_expr> (<numeric_feature> velocity_y))  ,  (<arith_expr> (<numeric_feature> velocity_y))  )))))  and  (<bool_factor> (<compare> (<arith_expr> (  (<arith_expr> (<number> (<maybe_sign> -) (<digit> 6) . (<digit> 6) (<digit> 3)))   (<math_op> /)   (<arith_expr> (  (<arith_expr> (<numeric_feature> velocity_y))   (<math_op> /)   (<arith_expr> (<numeric_feature> velocity_x))  ))  ))   (<comp_op> <)   (<arith_expr> (  (<arith_expr> hypot(  (<arith_expr> (<numeric_feature> obstacle_x))  ,  (<arith_expr> (<numeric_feature> obstacle_y))  ))   (<math_op> /)   (<arith_expr> (<numeric_feature> velocity_y))  )))))  and  (<bool_factor> (<compare> (<arith_expr> (  (<arith_expr> (<number> (<maybe_sign> -) (<digit> 0) . (<digit> 7) (<digit> 6)))   (<math_op> -)   (<arith_expr> hypot(  (<arith_expr> (<numeric_feature> robot_pos_x))  ,  (<arith_expr> (<numeric_feature> intersect_centers_x))  ))  ))   (<comp_op> <)   (<arith_expr> (  (<arith_expr> hypot(  (<arith_expr> (<numeric_feature> velocity_x))  ,  (<arith_expr> (<numeric_feature> velocity_x))  ))   (<math_op> /)   (<arith_expr> (  (<arith_expr> (<numeric_feature> obstacle_x))   (<math_op> -)   (<arith_expr> (<numeric_feature> intersect_radius))  ))  )))))))  else  (<expr> (<if_expr> (<expr> (<action> 'RECHTS'))  if  (<direction_compound_expr> (<boolean_feature> direction)  and  (<bool_expr> (<bool_expr> (<bool_term> (<bool_factor> (<compare> (<arith_expr> (<numeric_feature> robot_pos_x))   (<comp_op> <)   (<arith_expr> (<numeric_feature> velocity_x))))))  or  (<bool_term> (<bool_term> (<bool_factor> (<compare> (<arith_expr> (<numeric_feature> velocity_x))   (<comp_op> >=)   (<arith_expr> (<numeric_feature> velocity_y)))))  and  (<bool_factor> (<compare> (<arith_expr> (<numeric_feature> robot_pos_x))   (<comp_op> >=)   (<arith_expr> (<numeric_feature> robot_pos_y)))))))  else  (<expr> (<action> 'LINKS'))))))))

Fitness:
4.568763674550982