Generation:
100

Phenotype:
'LINKS' if direction and intersect_centers_y > robot_pos_y or robot_pos_y > velocity_x and intersect_centers_x >= hypot( intersect_radius , velocity_y ) else 'LINKS' if direction and velocity_y >= intersect_centers_y or velocity_y > obstacle_y and robot_pos_y >= ( intersect_radius * velocity_y ) or hypot( intersect_radius , intersect_centers_x ) <= hypot( obstacle_y , velocity_x ) or not hypot( velocity_x , robot_pos_x ) >= ( obstacle_x * velocity_y ) else 'RECHTS' if robot_pos_x <= velocity_y and direction else 'LINKS' if ( ( obstacle_x * velocity_y ) > velocity_y ) and ( robot_pos_y > intersect_radius or intersect_centers_y == velocity_y or velocity_x >= obstacle_y and ( obstacle_x / robot_pos_y ) > ( intersect_centers_x / robot_pos_x ) and ( obstacle_x / robot_pos_y ) >= ( velocity_y / robot_pos_x ) ) or direction else 'LINKS' if obstacle_x < velocity_x or intersect_centers_y < robot_pos_x and intersect_centers_x > hypot( intersect_radius , velocity_y ) or direction else 'RECHTS' if not direction and ( obstacle_y * obstacle_y ) < velocity_x or not robot_pos_y <= obstacle_y or hypot( robot_pos_y , intersect_centers_y ) <= hypot( velocity_y , velocity_x ) and ( -6.81 / ( velocity_y / velocity_x ) ) < ( hypot( obstacle_x , obstacle_y ) / velocity_y ) and ( -0.79 - hypot( obstacle_y , intersect_radius ) ) < ( hypot( velocity_x , velocity_x ) / ( obstacle_x - intersect_radius ) ) else 'RECHTS' if direction and obstacle_x >= obstacle_x or velocity_x >= velocity_y and robot_pos_x >= intersect_centers_y else 'LINKS'

Genotype:
[44305, 2212, 9078, 50842, 47358, 99184, 56763, 61811, 57749, 58286, 97291, 77094, 43348, 24858, 55447, 32300, 1909, 70968, 15155, 29582, 31705, 69176, 73074, 93032, 14790, 3230, 92166, 15210, 54707, 56661, 76521, 34170, 81045, 25226, 70623, 75945, 37703, 8090, 16287, 457, 51239, 95149, 87190, 60969, 60969, 97291, 95428, 20998, 6894, 19002, 17345, 2175, 66968, 38935, 16642, 31705, 69176, 90057, 25683, 56275, 71169, 25986, 56315, 77251, 7920, 12935, 56115, 68003, 28394, 4154, 63375, 77654, 53330, 9730, 73545, 95590, 6765, 37944, 70623, 75945, 37703, 88380, 17289, 69513, 91653, 70245, 95242, 26425, 95927, 62958, 39940, 78420, 18328, 47423, 78380, 79394, 82130, 58030, 28394, 4154, 63375, 37920, 58930, 56275, 59901, 93458, 16620, 10883, 23598, 72548, 69972, 17788, 7920, 12943, 71275, 68065, 15, 61170, 591, 80228, 76313, 84861, 39782, 45400, 20637, 19556, 65459, 59464, 37022, 37566, 98422, 4154, 93005, 48423, 58930, 56275, 57228, 91938, 76125, 47949, 90680, 44151, 44151, 25090, 1310, 34032, 14801, 52455, 38690, 11268, 70575, 35939, 33494, 77979, 92620, 66070, 33715, 50656, 260, 91671, 94355, 94355, 87130, 35295, 62438, 40610, 62771, 28394, 93725, 8428, 93333, 16763, 31079, 20290, 67179, 77871, 46300, 57635, 57210, 65019, 86995, 2736, 4259, 4865, 19105, 93333, 16763, 31079, 20290, 67179, 8035, 46300, 57635, 25226, 65019, 86995, 44727, 4259, 4865, 19105, 58286, 74292, 98924, 93538, 8178, 86765, 4687, 13782, 97291, 95428, 20998, 8769, 27072, 7670, 36156, 21715, 37880, 72203, 31705, 69176, 90057, 84395, 96940, 34597, 85987, 40130, 61747, 56661, 76521, 34170, 73431, 3396, 70623, 75945, 37703, 88380, 46734, 87190, 35929, 23598, 95149, 6073, 60969, 60969, 36758, 42920, 32541, 20996, 54199, 66330, 26842, 43114, 51410, 93064, 21715, 35905, 64292, 62958, 82633, 32997, 34093, 41645, 85751, 69513, 75700, 56191, 38823, 38823, 62958, 28125, 60443, 3348, 29445, 54521, 46300, 28054, 69513, 49523, 14200, 1077, 62100, 56696, 39966, 77991, 58289, 38321, 55910, 22573, 35396, 63228, 2651, 77871, 70099, 5200, 50064, 77871, 26705, 69251, 85987, 33869, 74888, 81880, 72840, 5715, 92074, 85559, 74275, 11265, 39966, 77991, 58289, 38321, 10387, 82999, 38230, 33957, 73749, 54389, 42713, 60980, 62644, 59410, 51356, 85987, 33869, 74888, 97800, 79394, 70745, 48704, 77871, 36144, 51495, 82740, 47277, 90320, 77663, 57438, 99184, 77071, 18366, 57749, 38440, 97291, 95678, 13200, 75000, 44214, 54490, 66747, 82496, 28035, 29595, 31705, 69176, 59694, 94994, 27145, 89384, 88784, 81185, 84966, 7920, 69777, 55370, 99322, 85370, 46245, 16741, 6041, 61811, 3548, 99539, 92902, 5227, 27970, 67312, 91010, 41855, 52958, 52671, 88309, 62758, 49312, 54762, 71029, 4240, 5528, 97025, 93168, 8579, 61177, 23018, 82100, 21990, 15284, 89508, 62747, 91089, 72964, 95187, 47841, 42053, 11644, 54667, 37885, 95546, 15107, 96105, 49240, 11162, 39623, 98038, 4817, 21701, 13128, 45420, 37993, 58972, 19940, 6482, 18484, 81872, 23155, 96573, 46786, 49676, 14598, 45669, 29309, 45342, 96943, 76355, 64438, 88484, 56737, 52910, 87489, 97075, 1312, 9745, 59738, 18714, 83152, 23054, 52496, 84533, 79064, 24858, 7793, 29882, 76899, 81703, 3564, 76849, 41483, 76303, 16080, 39427, 14938, 43884, 7448, 77614, 80975, 37024, 75541, 19599, 13371, 25603, 95026, 11467, 84671, 62999, 92923]
Tree:
(<start> (<if_expr> (<expr> (<if_expr> (<expr> (<if_expr> (<expr> (<action> 'LINKS'))  if  (<direction_compound_expr> (<boolean_feature> direction)  and  (<bool_expr> (<bool_expr> (<bool_term> (<bool_factor> (<compare> (<arith_expr> (<numeric_feature> intersect_centers_y))   (<comp_op> >)   (<arith_expr> (<numeric_feature> robot_pos_y))))))  or  (<bool_term> (<bool_term> (<bool_factor> (<compare> (<arith_expr> (<numeric_feature> robot_pos_y))   (<comp_op> >)   (<arith_expr> (<numeric_feature> velocity_x)))))  and  (<bool_factor> (<compare> (<arith_expr> (<numeric_feature> intersect_centers_x))   (<comp_op> >=)   (<arith_expr> hypot(  (<arith_expr> (<numeric_feature> intersect_radius))  ,  (<arith_expr> (<numeric_feature> velocity_y))  )))))))  else  (<expr> (<action> 'LINKS'))))  if  (<direction_compound_expr> (<boolean_feature> direction)  and  (<bool_expr> (<bool_expr> (<bool_expr> (<bool_expr> (<bool_term> (<bool_factor> (<compare> (<arith_expr> (<numeric_feature> velocity_y))   (<comp_op> >=)   (<arith_expr> (<numeric_feature> intersect_centers_y))))))  or  (<bool_term> (<bool_term> (<bool_factor> (<compare> (<arith_expr> (<numeric_feature> velocity_y))   (<comp_op> >)   (<arith_expr> (<numeric_feature> obstacle_y)))))  and  (<bool_factor> (<compare> (<arith_expr> (<numeric_feature> robot_pos_y))   (<comp_op> >=)   (<arith_expr> (  (<arith_expr> (<numeric_feature> intersect_radius))   (<math_op> *)   (<arith_expr> (<numeric_feature> velocity_y))  ))))))  or  (<bool_term> (<bool_factor> (<compare> (<arith_expr> hypot(  (<arith_expr> (<numeric_feature> intersect_radius))  ,  (<arith_expr> (<numeric_feature> intersect_centers_x))  ))   (<comp_op> <=)   (<arith_expr> hypot(  (<arith_expr> (<numeric_feature> obstacle_y))  ,  (<arith_expr> (<numeric_feature> velocity_x))  ))))))  or  (<bool_term> (<bool_factor> not  (<bool_factor> (<compare> (<arith_expr> hypot(  (<arith_expr> (<numeric_feature> velocity_x))  ,  (<arith_expr> (<numeric_feature> robot_pos_x))  ))   (<comp_op> >=)   (<arith_expr> (  (<arith_expr> (<numeric_feature> obstacle_x))   (<math_op> *)   (<arith_expr> (<numeric_feature> velocity_y))  ))))))))  else  (<expr> (<if_expr> (<expr> (<action> 'RECHTS'))  if  (<direction_compound_expr> (<bool_expr> (<bool_term> (<bool_factor> (<compare> (<arith_expr> (<numeric_feature> robot_pos_x))   (<comp_op> <=)   (<arith_expr> (<numeric_feature> velocity_y))))))  and  (<boolean_feature> direction))  else  (<expr> (<action> 'LINKS'))))))  if  (<direction_compound_expr> (<bool_expr> (<bool_term> (<bool_term> (<bool_factor> (  (<bool_expr> (<bool_term> (<bool_factor> (<compare> (<arith_expr> (  (<arith_expr> (<numeric_feature> obstacle_x))   (<math_op> *)   (<arith_expr> (<numeric_feature> velocity_y))  ))   (<comp_op> >)   (<arith_expr> (<numeric_feature> velocity_y))))))  )))  and  (<bool_factor> (  (<bool_expr> (<bool_expr> (<bool_expr> (<bool_term> (<bool_factor> (<compare> (<arith_expr> (<numeric_feature> robot_pos_y))   (<comp_op> >)   (<arith_expr> (<numeric_feature> intersect_radius))))))  or  (<bool_term> (<bool_factor> (<compare> (<arith_expr> (<numeric_feature> intersect_centers_y))   (<comp_op> ==)   (<arith_expr> (<numeric_feature> velocity_y))))))  or  (<bool_term> (<bool_term> (<bool_term> (<bool_factor> (<compare> (<arith_expr> (<numeric_feature> velocity_x))   (<comp_op> >=)   (<arith_expr> (<numeric_feature> obstacle_y)))))  and  (<bool_factor> (<compare> (<arith_expr> (  (<arith_expr> (<numeric_feature> obstacle_x))   (<math_op> /)   (<arith_expr> (<numeric_feature> robot_pos_y))  ))   (<comp_op> >)   (<arith_expr> (  (<arith_expr> (<numeric_feature> intersect_centers_x))   (<math_op> /)   (<arith_expr> (<numeric_feature> robot_pos_x))  )))))  and  (<bool_factor> (<compare> (<arith_expr> (  (<arith_expr> (<numeric_feature> obstacle_x))   (<math_op> /)   (<arith_expr> (<numeric_feature> robot_pos_y))  ))   (<comp_op> >=)   (<arith_expr> (  (<arith_expr> (<numeric_feature> velocity_y))   (<math_op> /)   (<arith_expr> (<numeric_feature> robot_pos_x))  ))))))  ))))  or  (<boolean_feature> direction))  else  (<expr> (<if_expr> (<expr> (<if_expr> (<expr> (<action> 'LINKS'))  if  (<direction_compound_expr> (<bool_expr> (<bool_expr> (<bool_term> (<bool_factor> (<compare> (<arith_expr> (<numeric_feature> obstacle_x))   (<comp_op> <)   (<arith_expr> (<numeric_feature> velocity_x))))))  or  (<bool_term> (<bool_term> (<bool_factor> (<compare> (<arith_expr> (<numeric_feature> intersect_centers_y))   (<comp_op> <)   (<arith_expr> (<numeric_feature> robot_pos_x)))))  and  (<bool_factor> (<compare> (<arith_expr> (<numeric_feature> intersect_centers_x))   (<comp_op> >)   (<arith_expr> hypot(  (<arith_expr> (<numeric_feature> intersect_radius))  ,  (<arith_expr> (<numeric_feature> velocity_y))  ))))))  or  (<boolean_feature> direction))  else  (<expr> (<action> 'RECHTS'))))  if  (<direction_compound_expr> (<boolean_feature> not direction)  and  (<bool_expr> (<bool_expr> (<bool_expr> (<bool_term> (<bool_factor> (<compare> (<arith_expr> (  (<arith_expr> (<numeric_feature> obstacle_y))   (<math_op> *)   (<arith_expr> (<numeric_feature> obstacle_y))  ))   (<comp_op> <)   (<arith_expr> (<numeric_feature> velocity_x))))))  or  (<bool_term> (<bool_factor> not  (<bool_factor> (<compare> (<arith_expr> (<numeric_feature> robot_pos_y))   (<comp_op> <=)   (<arith_expr> (<numeric_feature> obstacle_y)))))))  or  (<bool_term> (<bool_term> (<bool_term> (<bool_factor> (<compare> (<arith_expr> hypot(  (<arith_expr> (<numeric_feature> robot_pos_y))  ,  (<arith_expr> (<numeric_feature> intersect_centers_y))  ))   (<comp_op> <=)   (<arith_expr> hypot(  (<arith_expr> (<numeric_feature> velocity_y))  ,  (<arith_expr> (<numeric_feature> velocity_x))  )))))  and  (<bool_factor> (<compare> (<arith_expr> (  (<arith_expr> (<number> (<maybe_sign> -) (<digit> 6) . (<digit> 8) (<digit> 1)))   (<math_op> /)   (<arith_expr> (  (<arith_expr> (<numeric_feature> velocity_y))   (<math_op> /)   (<arith_expr> (<numeric_feature> velocity_x))  ))  ))   (<comp_op> <)   (<arith_expr> (  (<arith_expr> hypot(  (<arith_expr> (<numeric_feature> obstacle_x))  ,  (<arith_expr> (<numeric_feature> obstacle_y))  ))   (<math_op> /)   (<arith_expr> (<numeric_feature> velocity_y))  )))))  and  (<bool_factor> (<compare> (<arith_expr> (  (<arith_expr> (<number> (<maybe_sign> -) (<digit> 0) . (<digit> 7) (<digit> 9)))   (<math_op> -)   (<arith_expr> hypot(  (<arith_expr> (<numeric_feature> obstacle_y))  ,  (<arith_expr> (<numeric_feature> intersect_radius))  ))  ))   (<comp_op> <)   (<arith_expr> (  (<arith_expr> hypot(  (<arith_expr> (<numeric_feature> velocity_x))  ,  (<arith_expr> (<numeric_feature> velocity_x))  ))   (<math_op> /)   (<arith_expr> (  (<arith_expr> (<numeric_feature> obstacle_x))   (<math_op> -)   (<arith_expr> (<numeric_feature> intersect_radius))  ))  )))))))  else  (<expr> (<if_expr> (<expr> (<action> 'RECHTS'))  if  (<direction_compound_expr> (<boolean_feature> direction)  and  (<bool_expr> (<bool_expr> (<bool_term> (<bool_factor> (<compare> (<arith_expr> (<numeric_feature> obstacle_x))   (<comp_op> >=)   (<arith_expr> (<numeric_feature> obstacle_x))))))  or  (<bool_term> (<bool_term> (<bool_factor> (<compare> (<arith_expr> (<numeric_feature> velocity_x))   (<comp_op> >=)   (<arith_expr> (<numeric_feature> velocity_y)))))  and  (<bool_factor> (<compare> (<arith_expr> (<numeric_feature> robot_pos_x))   (<comp_op> >=)   (<arith_expr> (<numeric_feature> intersect_centers_y)))))))  else  (<expr> (<action> 'LINKS'))))))))

Fitness:
4.287132801701181