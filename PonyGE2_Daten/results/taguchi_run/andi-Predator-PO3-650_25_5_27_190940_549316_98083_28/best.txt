Generation:
50

Phenotype:
'RECHTS' if not direction and ( hypot( intersect_radius , ( hypot( intersect_centers_x , intersect_centers_x ) - p_div( intersect_centers_y , velocity_y ) ) ) > ( obstacle_y * hypot( 6.19 , hypot( intersect_centers_x , velocity_x ) ) ) and not hypot( p_div( -2.23 , hypot( obstacle_x , intersect_centers_x ) ) , hypot( 9.87 , ( velocity_x - intersect_centers_y ) ) ) <= -1.88 or velocity_x < obstacle_x and not intersect_centers_y > velocity_y and p_div( hypot( velocity_y , obstacle_x ) , ( intersect_centers_y - intersect_centers_y ) ) < hypot( intersect_centers_x , ( intersect_centers_y + intersect_centers_y ) ) and not intersect_centers_y <= p_div( obstacle_y , velocity_x ) and ( intersect_radius == obstacle_y or intersect_radius != velocity_y and hypot( obstacle_y , intersect_centers_x ) != p_div( intersect_radius , intersect_centers_y ) ) and ( ( velocity_x + velocity_x ) <= 1.30 or intersect_centers_x <= obstacle_y and hypot( obstacle_y , intersect_radius ) >= ( obstacle_y * obstacle_y ) and ( 6.63 + hypot( obstacle_y , intersect_centers_x ) ) >= hypot( -1.03 , hypot( intersect_centers_y , intersect_centers_x ) ) ) ) and ( ( intersect_centers_x <= intersect_radius and not obstacle_x < intersect_radius or not velocity_x != obstacle_y and intersect_centers_x <= ( obstacle_y - p_div( intersect_radius , intersect_centers_y ) ) or ( intersect_centers_x * hypot( intersect_radius , obstacle_x ) ) > ( ( intersect_centers_y + intersect_centers_x ) - velocity_y ) and not -1.03 > hypot( intersect_radius , p_div( intersect_centers_x , intersect_centers_y ) ) ) ) else 'LINKS'

Genotype:
[28535, 15137, 53961, 94588, 83257, 96523, 7204, 53793, 50366, 6968, 90371, 99800, 50555, 91262, 1233, 95393, 99833, 67505, 9550, 2339, 17708, 99385, 8190, 18480, 89180, 38791, 85507, 76425, 57947, 38570, 13467, 14166, 72704, 96855, 43705, 39083, 50083, 21531, 2045, 61952, 52326, 27001, 88109, 73398, 98145, 97237, 32160, 53163, 79906, 92856, 30364, 74663, 96012, 84711, 91587, 77973, 85662, 84802, 88873, 34028, 73260, 1354, 14925, 8190, 30483, 6106, 77675, 95336, 12599, 52938, 39617, 60739, 20745, 32891, 78907, 55950, 62749, 66213, 94311, 72526, 85713, 27791, 55618, 82248, 36213, 58969, 9667, 24135, 59239, 8108, 63771, 6058, 96135, 78048, 42631, 44155, 89967, 32602, 77121, 74208, 62595, 82006, 33246, 55550, 11129, 72333, 9726, 58522, 84318, 69475, 49671, 26615, 21654, 61389, 75135, 1772, 65254, 11700, 27651, 39025, 918, 13720, 21371, 81589, 77780, 60474, 46008, 53445, 48147, 20698, 13671, 72199, 77440, 29912, 90189, 27837, 43915, 62318, 82210, 64923, 83240, 79045, 74822, 89920, 64458, 11326, 87395, 46153, 2992, 13915, 33051, 88527, 27512, 19029, 64249, 99220, 95559, 63737, 22450, 63881, 88437, 60046, 40833, 32230, 22180, 69130, 77308, 11777, 78617, 21920, 8976, 43160, 16794, 85247, 66217, 20240, 84494, 95289, 54476, 62174, 41605, 68087, 84849, 56455, 94575, 86385, 81546, 47919, 67252, 99171, 97263, 55320, 42189, 36755, 39524, 67482, 41063, 17455, 2317, 60477, 49645, 70571, 85773, 18414, 74623, 35510, 99754, 3420, 67748, 77300, 38244, 92205, 37041, 40580, 78970, 8131, 98301, 33916, 10734, 78071, 83427, 71250, 27976, 81896, 36623, 83028, 28158, 63885, 35809, 67885, 72177, 45236, 20938, 66781, 5601, 30987, 63081, 42650, 92083, 9513, 70125, 94823, 20630, 32130, 60986, 39184, 51540, 92582, 67515, 87673, 75038, 46829, 50968, 85854, 66670, 51185, 75103, 40155, 58720, 35975, 86947, 393, 73133, 61270, 2040, 38557, 19290, 42009, 63991, 8830, 8383, 51849, 42177, 3310, 55228, 55583, 55765, 91641, 81828, 34568, 10415, 10626, 75495, 45544, 90320, 1607, 77797, 98482, 68045, 90617, 38800, 30325, 53525, 2184, 60951, 63216, 36514, 63995, 44072, 74942, 83823, 73695, 29003, 20540, 64151, 38832, 40354, 42784, 75170, 63078, 82413, 35160, 5208, 78907, 340, 96886, 43273, 7512, 85687, 36766, 5601, 30987, 63081, 42650, 92083, 14166, 91198, 98165, 10880, 54887, 55915, 72744, 95040, 44339, 14345, 3695, 20609, 40665, 63436, 47081, 53950, 94409, 78615, 525, 80528, 18976, 85353, 65807, 52864, 38604, 17450, 10430, 44791, 77648, 18949, 95061, 63259, 96235, 8239, 23722, 5628, 85489, 24361, 15162, 88017, 97342, 33202, 22659, 60015, 5445, 68029, 73551, 64867, 53708, 4676, 6989, 84377, 85792, 78545, 57412, 81374, 75203, 48276, 18124, 31022, 99427, 37915, 85308, 92706, 96519, 70098, 29989, 18244, 44475, 38740, 5925, 69261, 10463, 28623, 83923, 52909, 35501, 41641, 13672, 65915, 15327, 80691, 14565, 64564, 22251, 81270, 34946, 51149, 56728, 26552, 61914, 70381, 59914, 58654, 44735, 64806, 54615, 64828, 5965, 31224, 56230, 40856, 62618, 1214, 65450, 58051, 84308, 58082, 25792, 13728, 61053, 41110, 35923, 15913, 18102, 22538, 64542, 80142, 96385, 21422, 48629, 12481, 69140, 22181, 96371, 57109, 32045, 25851, 55209, 78130, 949, 40358, 46035, 96314, 69182, 1677, 10992, 55993, 59598, 32280, 44605, 40551, 50441, 31324, 32024, 69809, 32441, 67944, 97649, 54057, 4673, 54419, 94026, 46164, 69140, 82177, 1590, 85073, 69705, 85628, 72450, 3659, 47303, 40765, 4897, 12608, 90486, 79583, 16192, 27712, 5343, 61264, 89646, 41697, 6961, 88348, 18745, 49501, 34103, 34651, 43021, 98839, 29972, 7144, 25382, 75196, 29575, 84715, 74, 7808, 95697, 92853, 92547, 99757, 7758, 1469, 97540, 59538, 68236, 48007, 64781, 97893, 2198, 33523, 42592, 60901, 25601, 12551, 34221, 10784, 84523, 85317, 52158, 2571, 1148, 36859, 39273, 3073, 50981, 5590, 52598, 2112, 89145, 68415, 93286, 66703, 74216, 31701, 35052, 19036, 67633, 24271, 57353, 40347, 3834, 68300, 74015, 27564, 12870, 31504, 94520, 64302, 23997, 99159, 51471, 40299, 15769, 6612, 94597, 36759, 26043, 10658, 98412, 94459, 15414, 74569, 26363, 16955, 22816, 45794, 5740, 70300, 19991, 90653, 56990, 66931, 74531, 61830, 11749, 15794, 67206, 63605, 46581, 39898, 9995, 24014, 57687, 31840, 16428, 80098, 69110, 64423, 31493, 29828]
Tree:
(<start> (<if_expr> (<expr> (<action> 'RECHTS'))  if  (<direction_compound_expr> (<boolean_feature> not direction)  and  (<bool_expr> (<bool_term> (<bool_term> (<bool_factor> (  (<bool_expr> (<bool_expr> (<bool_term> (<bool_term> (<bool_factor> (<compare> (<arith_expr> hypot(  (<arith_expr> (<numeric_feature> intersect_radius))  ,  (<arith_expr> (  (<arith_expr> hypot(  (<arith_expr> (<numeric_feature> intersect_centers_x))  ,  (<arith_expr> (<numeric_feature> intersect_centers_x))  ))   (<math_op> -)   (<arith_expr> p_div(  (<arith_expr> (<numeric_feature> intersect_centers_y))  ,  (<arith_expr> (<numeric_feature> velocity_y))  ))  ))  ))   (<comp_op> >)   (<arith_expr> (  (<arith_expr> (<numeric_feature> obstacle_y))   (<math_op> *)   (<arith_expr> hypot(  (<arith_expr> (<number> (<maybe_sign> ) (<digit> 6) . (<digit> 1) (<digit> 9)))  ,  (<arith_expr> hypot(  (<arith_expr> (<numeric_feature> intersect_centers_x))  ,  (<arith_expr> (<numeric_feature> velocity_x))  ))  ))  )))))  and  (<bool_factor> not  (<bool_factor> (<compare> (<arith_expr> hypot(  (<arith_expr> p_div(  (<arith_expr> (<number> (<maybe_sign> -) (<digit> 2) . (<digit> 2) (<digit> 3)))  ,  (<arith_expr> hypot(  (<arith_expr> (<numeric_feature> obstacle_x))  ,  (<arith_expr> (<numeric_feature> intersect_centers_x))  ))  ))  ,  (<arith_expr> hypot(  (<arith_expr> (<number> (<maybe_sign> ) (<digit> 9) . (<digit> 8) (<digit> 7)))  ,  (<arith_expr> (  (<arith_expr> (<numeric_feature> velocity_x))   (<math_op> -)   (<arith_expr> (<numeric_feature> intersect_centers_y))  ))  ))  ))   (<comp_op> <=)   (<arith_expr> (<number> (<maybe_sign> -) (<digit> 1) . (<digit> 8) (<digit> 8))))))))  or  (<bool_term> (<bool_term> (<bool_term> (<bool_term> (<bool_term> (<bool_term> (<bool_factor> (<compare> (<arith_expr> (<numeric_feature> velocity_x))   (<comp_op> <)   (<arith_expr> (<numeric_feature> obstacle_x)))))  and  (<bool_factor> not  (<bool_factor> (<compare> (<arith_expr> (<numeric_feature> intersect_centers_y))   (<comp_op> >)   (<arith_expr> (<numeric_feature> velocity_y))))))  and  (<bool_factor> (<compare> (<arith_expr> p_div(  (<arith_expr> hypot(  (<arith_expr> (<numeric_feature> velocity_y))  ,  (<arith_expr> (<numeric_feature> obstacle_x))  ))  ,  (<arith_expr> (  (<arith_expr> (<numeric_feature> intersect_centers_y))   (<math_op> -)   (<arith_expr> (<numeric_feature> intersect_centers_y))  ))  ))   (<comp_op> <)   (<arith_expr> hypot(  (<arith_expr> (<numeric_feature> intersect_centers_x))  ,  (<arith_expr> (  (<arith_expr> (<numeric_feature> intersect_centers_y))   (<math_op> +)   (<arith_expr> (<numeric_feature> intersect_centers_y))  ))  )))))  and  (<bool_factor> not  (<bool_factor> (<compare> (<arith_expr> (<numeric_feature> intersect_centers_y))   (<comp_op> <=)   (<arith_expr> p_div(  (<arith_expr> (<numeric_feature> obstacle_y))  ,  (<arith_expr> (<numeric_feature> velocity_x))  ))))))  and  (<bool_factor> (  (<bool_expr> (<bool_expr> (<bool_term> (<bool_factor> (<compare> (<arith_expr> (<numeric_feature> intersect_radius))   (<comp_op> ==)   (<arith_expr> (<numeric_feature> obstacle_y))))))  or  (<bool_term> (<bool_term> (<bool_factor> (<compare> (<arith_expr> (<numeric_feature> intersect_radius))   (<comp_op> !=)   (<arith_expr> (<numeric_feature> velocity_y)))))  and  (<bool_factor> (<compare> (<arith_expr> hypot(  (<arith_expr> (<numeric_feature> obstacle_y))  ,  (<arith_expr> (<numeric_feature> intersect_centers_x))  ))   (<comp_op> !=)   (<arith_expr> p_div(  (<arith_expr> (<numeric_feature> intersect_radius))  ,  (<arith_expr> (<numeric_feature> intersect_centers_y))  ))))))  )))  and  (<bool_factor> (  (<bool_expr> (<bool_expr> (<bool_term> (<bool_factor> (<compare> (<arith_expr> (  (<arith_expr> (<numeric_feature> velocity_x))   (<math_op> +)   (<arith_expr> (<numeric_feature> velocity_x))  ))   (<comp_op> <=)   (<arith_expr> (<number> (<maybe_sign> ) (<digit> 1) . (<digit> 3) (<digit> 0)))))))  or  (<bool_term> (<bool_term> (<bool_term> (<bool_factor> (<compare> (<arith_expr> (<numeric_feature> intersect_centers_x))   (<comp_op> <=)   (<arith_expr> (<numeric_feature> obstacle_y)))))  and  (<bool_factor> (<compare> (<arith_expr> hypot(  (<arith_expr> (<numeric_feature> obstacle_y))  ,  (<arith_expr> (<numeric_feature> intersect_radius))  ))   (<comp_op> >=)   (<arith_expr> (  (<arith_expr> (<numeric_feature> obstacle_y))   (<math_op> *)   (<arith_expr> (<numeric_feature> obstacle_y))  )))))  and  (<bool_factor> (<compare> (<arith_expr> (  (<arith_expr> (<number> (<maybe_sign> ) (<digit> 6) . (<digit> 6) (<digit> 3)))   (<math_op> +)   (<arith_expr> hypot(  (<arith_expr> (<numeric_feature> obstacle_y))  ,  (<arith_expr> (<numeric_feature> intersect_centers_x))  ))  ))   (<comp_op> >=)   (<arith_expr> hypot(  (<arith_expr> (<number> (<maybe_sign> -) (<digit> 1) . (<digit> 0) (<digit> 3)))  ,  (<arith_expr> hypot(  (<arith_expr> (<numeric_feature> intersect_centers_y))  ,  (<arith_expr> (<numeric_feature> intersect_centers_x))  ))  ))))))  ))))  )))  and  (<bool_factor> (  (<bool_expr> (<bool_term> (<bool_factor> (  (<bool_expr> (<bool_expr> (<bool_expr> (<bool_term> (<bool_term> (<bool_factor> (<compare> (<arith_expr> (<numeric_feature> intersect_centers_x))   (<comp_op> <=)   (<arith_expr> (<numeric_feature> intersect_radius)))))  and  (<bool_factor> not  (<bool_factor> (<compare> (<arith_expr> (<numeric_feature> obstacle_x))   (<comp_op> <)   (<arith_expr> (<numeric_feature> intersect_radius)))))))  or  (<bool_term> (<bool_term> (<bool_factor> not  (<bool_factor> (<compare> (<arith_expr> (<numeric_feature> velocity_x))   (<comp_op> !=)   (<arith_expr> (<numeric_feature> obstacle_y))))))  and  (<bool_factor> (<compare> (<arith_expr> (<numeric_feature> intersect_centers_x))   (<comp_op> <=)   (<arith_expr> (  (<arith_expr> (<numeric_feature> obstacle_y))   (<math_op> -)   (<arith_expr> p_div(  (<arith_expr> (<numeric_feature> intersect_radius))  ,  (<arith_expr> (<numeric_feature> intersect_centers_y))  ))  ))))))  or  (<bool_term> (<bool_term> (<bool_factor> (<compare> (<arith_expr> (  (<arith_expr> (<numeric_feature> intersect_centers_x))   (<math_op> *)   (<arith_expr> hypot(  (<arith_expr> (<numeric_feature> intersect_radius))  ,  (<arith_expr> (<numeric_feature> obstacle_x))  ))  ))   (<comp_op> >)   (<arith_expr> (  (<arith_expr> (  (<arith_expr> (<numeric_feature> intersect_centers_y))   (<math_op> +)   (<arith_expr> (<numeric_feature> intersect_centers_x))  ))   (<math_op> -)   (<arith_expr> (<numeric_feature> velocity_y))  )))))  and  (<bool_factor> not  (<bool_factor> (<compare> (<arith_expr> (<number> (<maybe_sign> -) (<digit> 1) . (<digit> 0) (<digit> 3)))   (<comp_op> >)   (<arith_expr> hypot(  (<arith_expr> (<numeric_feature> intersect_radius))  ,  (<arith_expr> p_div(  (<arith_expr> (<numeric_feature> intersect_centers_x))  ,  (<arith_expr> (<numeric_feature> intersect_centers_y))  ))  )))))))  ))))  )))))  else  (<expr> (<action> 'LINKS'))))

Fitness:
9.942144347660577