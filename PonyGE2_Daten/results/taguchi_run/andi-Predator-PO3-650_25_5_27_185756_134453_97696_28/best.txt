Generation:
50

Phenotype:
'LINKS' if direction and obstacle_y != obstacle_x and 9.66 != intersect_centers_y or not not obstacle_x <= velocity_x or not p_div( p_div( velocity_y , velocity_x ) , 5.67 ) >= -0.50 or not not intersect_centers_x > intersect_radius and ( intersect_centers_y == intersect_centers_y ) and ( velocity_y <= intersect_centers_y or velocity_x < intersect_centers_y ) or -1.63 >= p_div( p_div( p_div( intersect_radius , velocity_x ) , -1.68 ) , p_div( p_div( obstacle_x , hypot( intersect_radius , velocity_x ) ) , hypot( intersect_radius , velocity_x ) ) ) and ( not intersect_centers_x >= p_div( velocity_y , velocity_x ) ) else 'RECHTS' if not direction and intersect_centers_y < velocity_y else 'LINKS' if not direction and intersect_centers_x <= intersect_radius and not velocity_x > velocity_y or ( velocity_x < velocity_x ) else 'RECHTS' if not direction or obstacle_y < intersect_radius or intersect_centers_y <= obstacle_x and intersect_radius != ( intersect_centers_x * intersect_radius ) else 'RECHTS'

Genotype:
[24394, 78504, 23947, 36679, 35394, 69266, 53111, 10293, 99313, 21189, 16504, 4261, 19708, 40776, 94238, 51555, 36915, 2945, 96865, 14115, 95163, 61572, 77111, 5662, 77550, 30959, 32986, 13426, 58685, 60790, 88635, 7234, 44692, 92335, 28287, 4307, 99700, 87706, 64659, 44980, 97207, 58324, 64138, 13473, 86216, 10492, 28077, 53965, 12928, 30730, 1034, 70721, 55291, 88212, 47005, 13426, 98917, 68624, 60146, 5368, 28449, 6320, 21795, 80640, 2847, 99205, 77744, 67120, 81190, 51696, 19476, 8020, 77938, 29850, 40675, 85003, 39239, 16364, 98732, 8763, 93613, 39555, 88635, 94354, 71455, 73487, 86474, 97877, 91304, 68928, 45618, 21346, 93155, 59618, 72213, 39555, 88635, 94892, 86817, 79471, 7665, 46499, 82813, 68620, 63491, 54187, 83774, 44226, 56156, 39401, 47062, 28547, 7201, 51166, 89183, 67910, 39037, 92612, 86957, 43595, 32027, 80830, 52624, 37591, 23127, 52225, 48871, 13426, 77818, 78207, 19847, 75890, 2299, 70763, 15220, 10138, 80535, 39275, 70763, 15220, 10138, 80535, 39275, 96155, 68030, 74612, 35146, 71127, 45009, 67705, 77490, 8882, 28077, 53965, 12928, 30730, 1034, 17524, 9911, 84778, 67937, 73823, 3216, 36380, 52319, 67814, 68456, 19677, 15164, 24945, 94627, 65467, 91560, 52457, 53541, 28371, 66854, 65545, 49157, 12088, 30413, 94892, 58596, 72975, 39245, 95641, 54549, 70525, 34414, 68377, 56352, 98164, 89820, 50321, 22938, 34150, 61725, 77222, 66143, 29856, 14974, 46314, 91214, 66940, 46765, 71833, 66940, 46765, 65088, 61039, 93941, 88044, 94203, 151, 39781, 45400, 92890, 58836, 64837, 99560, 58160, 89149, 19135, 36780, 94611, 37706, 93609, 44305, 2765, 7939, 84369, 45250, 44775, 28788, 82817, 61525, 57528, 82811, 78059, 64650, 61810, 13250, 66380, 61665, 21131, 27792, 33103, 87117, 47891, 391, 24032, 40100, 73459, 24426, 49550, 33877, 2337, 3548, 79218, 34782, 21872, 36938, 78706, 66258, 37233, 52250, 34159, 19761, 66316, 18300, 99260, 71341, 51986, 80857, 84797, 79144, 791, 4726, 84103, 13913, 15632, 16157, 58768, 78064, 13980, 46662, 38222, 21219, 74571, 86129, 97110, 89457, 70922, 48186, 38518, 46577, 33345, 35144, 30901, 84692, 71488, 22143, 12195, 19084, 94928, 39720, 64442, 87193, 24397, 19811, 99269, 30850, 15907, 455, 51412, 40391, 87528, 5380, 81178, 34306, 95451, 14920, 8896, 7776, 16991, 40915, 41634, 68232, 14841, 90320, 20235, 97235, 265, 74754, 93887, 38188, 5541, 50445, 14847, 39419, 32595, 48127, 41236, 1309, 6762, 14950, 73037, 92836, 32050, 91375, 35307, 38588, 51827, 56006, 14075, 16356, 95541, 50134, 4108, 56434, 30565, 4402, 31768, 52215, 63595, 35504, 47153, 22020, 15123]
Tree:
(<start> (<if_expr> (<expr> (<action> 'LINKS'))  if  (<direction_compound_expr> (<boolean_feature> direction)  and  (<bool_expr> (<bool_expr> (<bool_expr> (<bool_expr> (<bool_expr> (<bool_term> (<bool_term> (<bool_factor> (<compare> (<arith_expr> (<numeric_feature> obstacle_y))   (<comp_op> !=)   (<arith_expr> (<numeric_feature> obstacle_x)))))  and  (<bool_factor> (<compare> (<arith_expr> (<number> (<maybe_sign> ) (<digit> 9) . (<digit> 6) (<digit> 6)))   (<comp_op> !=)   (<arith_expr> (<numeric_feature> intersect_centers_y))))))  or  (<bool_term> (<bool_factor> not  (<bool_factor> not  (<bool_factor> (<compare> (<arith_expr> (<numeric_feature> obstacle_x))   (<comp_op> <=)   (<arith_expr> (<numeric_feature> velocity_x))))))))  or  (<bool_term> (<bool_factor> not  (<bool_factor> (<compare> (<arith_expr> p_div(  (<arith_expr> p_div(  (<arith_expr> (<numeric_feature> velocity_y))  ,  (<arith_expr> (<numeric_feature> velocity_x))  ))  ,  (<arith_expr> (<number> (<maybe_sign> ) (<digit> 5) . (<digit> 6) (<digit> 7)))  ))   (<comp_op> >=)   (<arith_expr> (<number> (<maybe_sign> -) (<digit> 0) . (<digit> 5) (<digit> 0))))))))  or  (<bool_term> (<bool_term> (<bool_term> (<bool_factor> not  (<bool_factor> not  (<bool_factor> (<compare> (<arith_expr> (<numeric_feature> intersect_centers_x))   (<comp_op> >)   (<arith_expr> (<numeric_feature> intersect_radius)))))))  and  (<bool_factor> (  (<bool_expr> (<bool_term> (<bool_factor> (<compare> (<arith_expr> (<numeric_feature> intersect_centers_y))   (<comp_op> ==)   (<arith_expr> (<numeric_feature> intersect_centers_y))))))  )))  and  (<bool_factor> (  (<bool_expr> (<bool_expr> (<bool_term> (<bool_factor> (<compare> (<arith_expr> (<numeric_feature> velocity_y))   (<comp_op> <=)   (<arith_expr> (<numeric_feature> intersect_centers_y))))))  or  (<bool_term> (<bool_factor> (<compare> (<arith_expr> (<numeric_feature> velocity_x))   (<comp_op> <)   (<arith_expr> (<numeric_feature> intersect_centers_y))))))  ))))  or  (<bool_term> (<bool_term> (<bool_factor> (<compare> (<arith_expr> (<number> (<maybe_sign> -) (<digit> 1) . (<digit> 6) (<digit> 3)))   (<comp_op> >=)   (<arith_expr> p_div(  (<arith_expr> p_div(  (<arith_expr> p_div(  (<arith_expr> (<numeric_feature> intersect_radius))  ,  (<arith_expr> (<numeric_feature> velocity_x))  ))  ,  (<arith_expr> (<number> (<maybe_sign> -) (<digit> 1) . (<digit> 6) (<digit> 8)))  ))  ,  (<arith_expr> p_div(  (<arith_expr> p_div(  (<arith_expr> (<numeric_feature> obstacle_x))  ,  (<arith_expr> hypot(  (<arith_expr> (<numeric_feature> intersect_radius))  ,  (<arith_expr> (<numeric_feature> velocity_x))  ))  ))  ,  (<arith_expr> hypot(  (<arith_expr> (<numeric_feature> intersect_radius))  ,  (<arith_expr> (<numeric_feature> velocity_x))  ))  ))  )))))  and  (<bool_factor> (  (<bool_expr> (<bool_term> (<bool_factor> not  (<bool_factor> (<compare> (<arith_expr> (<numeric_feature> intersect_centers_x))   (<comp_op> >=)   (<arith_expr> p_div(  (<arith_expr> (<numeric_feature> velocity_y))  ,  (<arith_expr> (<numeric_feature> velocity_x))  )))))))  )))))  else  (<expr> (<if_expr> (<expr> (<if_expr> (<expr> (<action> 'RECHTS'))  if  (<direction_compound_expr> (<boolean_feature> not direction)  and  (<bool_expr> (<bool_term> (<bool_factor> (<compare> (<arith_expr> (<numeric_feature> intersect_centers_y))   (<comp_op> <)   (<arith_expr> (<numeric_feature> velocity_y)))))))  else  (<expr> (<action> 'LINKS'))))  if  (<direction_compound_expr> (<boolean_feature> not direction)  and  (<bool_expr> (<bool_expr> (<bool_term> (<bool_term> (<bool_factor> (<compare> (<arith_expr> (<numeric_feature> intersect_centers_x))   (<comp_op> <=)   (<arith_expr> (<numeric_feature> intersect_radius)))))  and  (<bool_factor> not  (<bool_factor> (<compare> (<arith_expr> (<numeric_feature> velocity_x))   (<comp_op> >)   (<arith_expr> (<numeric_feature> velocity_y)))))))  or  (<bool_term> (<bool_factor> (  (<bool_expr> (<bool_term> (<bool_factor> (<compare> (<arith_expr> (<numeric_feature> velocity_x))   (<comp_op> <)   (<arith_expr> (<numeric_feature> velocity_x))))))  )))))  else  (<expr> (<if_expr> (<expr> (<action> 'RECHTS'))  if  (<direction_compound_expr> (<boolean_feature> not direction)  or  (<bool_expr> (<bool_expr> (<bool_term> (<bool_factor> (<compare> (<arith_expr> (<numeric_feature> obstacle_y))   (<comp_op> <)   (<arith_expr> (<numeric_feature> intersect_radius))))))  or  (<bool_term> (<bool_term> (<bool_factor> (<compare> (<arith_expr> (<numeric_feature> intersect_centers_y))   (<comp_op> <=)   (<arith_expr> (<numeric_feature> obstacle_x)))))  and  (<bool_factor> (<compare> (<arith_expr> (<numeric_feature> intersect_radius))   (<comp_op> !=)   (<arith_expr> (  (<arith_expr> (<numeric_feature> intersect_centers_x))   (<math_op> *)   (<arith_expr> (<numeric_feature> intersect_radius))  )))))))  else  (<expr> (<action> 'RECHTS'))))))))

Fitness:
7.873818392777324