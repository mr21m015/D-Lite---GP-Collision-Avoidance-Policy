Generation:
50

Phenotype:
'LINKS' if ( not hypot( p_div( hypot( hypot( -2.20 , ( intersect_centers_x * obstacle_y ) ) , ( p_div( intersect_radius , velocity_x ) + p_div( intersect_centers_y , obstacle_x ) ) ) , intersect_radius ) , hypot( p_div( 7.31 , hypot( 2.60 , intersect_centers_y ) ) , intersect_centers_y ) ) <= -5.59 and not p_div( p_div( ( -0.40 + ( velocity_y + 7.18 ) ) , hypot( ( hypot( obstacle_y , p_div( intersect_centers_y , velocity_y ) ) * ( p_div( obstacle_x , obstacle_x ) - obstacle_y ) ) , 5.54 ) ) , ( obstacle_x - ( p_div( -9.41 , p_div( hypot( obstacle_x , intersect_centers_x ) , obstacle_y ) ) + ( intersect_centers_x + obstacle_y ) ) ) ) <= p_div( ( ( p_div( 5.09 , ( obstacle_x - intersect_centers_x ) ) + p_div( hypot( obstacle_y , velocity_x ) , hypot( velocity_x , intersect_centers_x ) ) ) - ( hypot( ( velocity_x + intersect_centers_x ) , velocity_x ) + p_div( velocity_x , hypot( velocity_x , obstacle_y ) ) ) ) , hypot( p_div( hypot( hypot( intersect_centers_x , -1.64 ) , 8.27 ) , 2.01 ) , hypot( intersect_centers_y , ( ( obstacle_x - velocity_x ) + ( hypot( obstacle_x , obstacle_x ) * hypot( obstacle_x , velocity_y ) ) ) ) ) ) or hypot( hypot( p_div( ( -0.18 - ( ( hypot( velocity_y , velocity_y ) - p_div( obstacle_y , intersect_centers_y ) ) - hypot( p_div( obstacle_y , obstacle_x ) , velocity_y ) ) ) , intersect_centers_x ) , ( 4.22 + -3.23 ) ) , 8.04 ) == ( ( ( p_div( hypot( velocity_x , -4.53 ) , p_div( velocity_y , velocity_x ) ) * ( p_div( velocity_y , p_div( 6.94 , velocity_y ) ) - p_div( intersect_radius , p_div( hypot( obstacle_x , obstacle_y ) , 4.75 ) ) ) ) + ( p_div( ( hypot( 8.38 , p_div( velocity_y , intersect_radius ) ) + ( hypot( velocity_x , velocity_y ) + obstacle_y ) ) , p_div( hypot( ( intersect_centers_y * intersect_centers_y ) , intersect_centers_y ) , hypot( p_div( intersect_radius , obstacle_y ) , -1.81 ) ) ) - ( ( hypot( ( intersect_centers_y - obstacle_y ) , ( intersect_centers_x - obstacle_x ) ) - 8.68 ) + hypot( 7.10 , hypot( ( obstacle_y * velocity_y ) , 0.45 ) ) ) ) ) - p_div( hypot( intersect_radius , -1.04 ) , hypot( p_div( p_div( hypot( p_div( intersect_centers_y , velocity_y ) , hypot( velocity_x , obstacle_y ) ) , hypot( velocity_y , intersect_radius ) ) , obstacle_x ) , ( intersect_centers_y * ( ( -2.56 - p_div( intersect_centers_x , intersect_centers_x ) ) - 5.07 ) ) ) ) ) and not ( p_div( ( p_div( p_div( ( hypot( velocity_y , velocity_x ) - hypot( intersect_centers_x , intersect_radius ) ) , ( p_div( intersect_radius , velocity_x ) - intersect_radius ) ) , p_div( hypot( obstacle_y , obstacle_x ) , obstacle_x ) ) * ( intersect_radius - hypot( ( obstacle_y + p_div( obstacle_y , velocity_x ) ) , hypot( p_div( intersect_centers_y , intersect_centers_x ) , -2.05 ) ) ) ) , ( ( -6.29 + intersect_centers_y ) * velocity_x ) ) - ( ( 1.04 * obstacle_y ) * -2.40 ) ) <= ( obstacle_y + intersect_centers_x ) ) or ( ( hypot( hypot( p_div( obstacle_x , p_div( p_div( velocity_x , hypot( hypot( -9.98 , p_div( obstacle_y , velocity_x ) ) , obstacle_y ) ) , ( hypot( p_div( velocity_y , hypot( velocity_x , obstacle_x ) ) , velocity_x ) + p_div( -6.99 , hypot( hypot( intersect_radius , obstacle_y ) , intersect_centers_y ) ) ) ) ) , intersect_centers_y ) , p_div( hypot( p_div( -2.98 , velocity_y ) , p_div( hypot( -3.46 , -2.04 ) , hypot( hypot( p_div( p_div( intersect_centers_y , velocity_x ) , p_div( velocity_x , intersect_centers_x ) ) , p_div( hypot( intersect_radius , intersect_centers_y ) , ( obstacle_x + velocity_y ) ) ) , hypot( 8.25 , p_div( -9.41 , 6.69 ) ) ) ) ) , 0.76 ) ) * obstacle_x ) <= obstacle_x ) or ( ( ( velocity_y + obstacle_x ) != hypot( intersect_centers_x , velocity_x ) or obstacle_y < obstacle_x and not intersect_centers_x >= velocity_x and p_div( ( intersect_radius + intersect_radius ) , p_div( obstacle_x , intersect_centers_x ) ) >= ( -6.13 - ( obstacle_y * velocity_x ) ) or ( velocity_x > velocity_y ) ) and hypot( hypot( -8.06 , -9.68 ) , -1.27 ) == intersect_centers_x ) and not ( ( not not velocity_y <= obstacle_x ) and -9.70 == intersect_centers_y or p_div( hypot( hypot( ( hypot( p_div( 3.41 , ( intersect_centers_x + velocity_x ) ) , hypot( p_div( velocity_y , intersect_centers_y ) , velocity_x ) ) - ( p_div( ( intersect_radius - intersect_centers_x ) , p_div( intersect_centers_y , intersect_centers_y ) ) * intersect_centers_y ) ) , p_div( hypot( -2.22 , intersect_radius ) , p_div( ( hypot( intersect_radius , velocity_x ) * p_div( obstacle_y , velocity_x ) ) , intersect_radius ) ) ) , 0.53 ) , ( ( hypot( hypot( -1.92 , hypot( hypot( velocity_y , velocity_y ) , hypot( obstacle_y , intersect_centers_y ) ) ) , -9.10 ) + ( ( ( p_div( intersect_centers_x , obstacle_y ) + ( intersect_radius - intersect_centers_y ) ) * p_div( hypot( intersect_radius , obstacle_x ) , hypot( intersect_centers_x , intersect_centers_x ) ) ) * p_div( p_div( p_div( obstacle_x , intersect_centers_x ) , p_div( intersect_centers_y , velocity_x ) ) , p_div( velocity_y , p_div( obstacle_x , intersect_radius ) ) ) ) ) * p_div( p_div( 9.44 , hypot( ( hypot( intersect_centers_x , intersect_radius ) - p_div( obstacle_x , velocity_x ) ) , p_div( ( intersect_centers_x - obstacle_x ) , 9.72 ) ) ) , velocity_y ) ) ) <= intersect_centers_x ) and -9.70 == intersect_centers_y and intersect_centers_x > p_div( velocity_y , -3.38 ) or direction else 'LINKS' if direction and ( hypot( p_div( intersect_centers_y , hypot( hypot( -8.21 , ( intersect_centers_y * velocity_x ) ) , 3.04 ) ) , 9.97 ) != -3.88 and not not p_div( -1.08 , -9.37 ) <= 3.02 and ( ( ( p_div( hypot( obstacle_y , p_div( -4.56 , ( obstacle_y - obstacle_x ) ) ) , -1.00 ) * hypot( hypot( ( 1.55 - hypot( intersect_radius , intersect_centers_y ) ) , velocity_x ) , ( 7.74 - p_div( p_div( velocity_x , obstacle_x ) , p_div( intersect_centers_y , velocity_y ) ) ) ) ) - p_div( obstacle_x , p_div( ( ( p_div( obstacle_x , velocity_y ) + intersect_centers_y ) + hypot( hypot( velocity_y , intersect_centers_y ) , -7.02 ) ) , 0.85 ) ) ) - obstacle_y ) >= ( hypot( obstacle_x , -7.85 ) - 1.80 ) and not hypot( p_div( 0.70 , p_div( ( ( -8.06 + ( -8.07 - hypot( velocity_y , intersect_centers_y ) ) ) + -8.24 ) , hypot( 2.09 , ( -2.39 - 4.85 ) ) ) ) , obstacle_y ) < ( hypot( p_div( hypot( velocity_y , hypot( obstacle_x , hypot( hypot( intersect_centers_x , intersect_centers_x ) , 1.77 ) ) ) , ( intersect_radius + p_div( hypot( hypot( intersect_centers_y , obstacle_y ) , ( velocity_y * obstacle_y ) ) , hypot( ( intersect_centers_x + intersect_centers_y ) , velocity_x ) ) ) ) , p_div( hypot( -6.27 , -0.94 ) , p_div( ( hypot( hypot( intersect_centers_y , obstacle_x ) , intersect_centers_x ) * p_div( hypot( obstacle_y , obstacle_y ) , intersect_centers_x ) ) , 7.22 ) ) ) + p_div( hypot( -8.92 , p_div( p_div( velocity_y , 4.62 ) , 1.02 ) ) , -4.16 ) ) or not ( ( ( hypot( intersect_centers_y , hypot( intersect_radius , intersect_centers_x ) ) + intersect_radius ) + -7.27 ) - ( ( p_div( p_div( obstacle_x , intersect_centers_x ) , 4.07 ) + ( ( velocity_y + velocity_y ) + ( intersect_centers_x * intersect_centers_y ) ) ) + p_div( intersect_centers_x , ( velocity_y - ( intersect_centers_x * obstacle_y ) ) ) ) ) <= hypot( p_div( 5.64 , hypot( ( 5.96 - velocity_x ) , p_div( p_div( velocity_x , intersect_radius ) , -4.48 ) ) ) , 6.94 ) and not obstacle_x <= 1.95 and not not velocity_y != obstacle_y and ( velocity_x <= velocity_x and not intersect_radius != intersect_radius and obstacle_y == p_div( obstacle_x , hypot( velocity_y , velocity_x ) ) or 6.33 != hypot( ( velocity_x - obstacle_y ) , ( obstacle_y + intersect_centers_y ) ) and ( intersect_centers_x < intersect_centers_x ) or ( obstacle_x <= obstacle_x ) and ( intersect_radius <= intersect_centers_y and obstacle_x < hypot( velocity_x , obstacle_x ) ) or ( p_div( intersect_centers_x , obstacle_y ) <= -9.51 and not not obstacle_y >= obstacle_x ) or hypot( ( -8.51 + -9.48 ) , hypot( ( ( ( obstacle_x - velocity_y ) - p_div( obstacle_y , intersect_centers_y ) ) * ( hypot( intersect_centers_y , intersect_radius ) + hypot( velocity_x , intersect_radius ) ) ) , 2.60 ) ) > intersect_centers_y and obstacle_y != p_div( ( p_div( obstacle_x , hypot( hypot( intersect_centers_y , p_div( velocity_x , obstacle_x ) ) , hypot( obstacle_x , p_div( velocity_y , intersect_centers_y ) ) ) ) - ( hypot( hypot( 9.78 , p_div( intersect_centers_x , intersect_centers_y ) ) , hypot( ( obstacle_y * velocity_y ) , p_div( obstacle_y , intersect_centers_y ) ) ) * hypot( p_div( ( velocity_y - intersect_centers_x ) , hypot( intersect_centers_x , intersect_centers_x ) ) , hypot( intersect_centers_x , ( obstacle_x * velocity_y ) ) ) ) ) , intersect_centers_y ) ) or not not ( not hypot( hypot( intersect_radius , 5.17 ) , hypot( ( velocity_x + hypot( obstacle_y , velocity_y ) ) , p_div( velocity_y , intersect_centers_y ) ) ) <= p_div( 0.86 , hypot( hypot( hypot( obstacle_x , intersect_centers_y ) , velocity_y ) , p_div( ( velocity_y * obstacle_x ) , obstacle_x ) ) ) ) ) and p_div( velocity_x , ( obstacle_y - -1.64 ) ) != 6.70 or hypot( intersect_centers_y , hypot( ( ( p_div( obstacle_x , -9.59 ) - -4.30 ) + velocity_x ) , ( ( velocity_x * hypot( ( hypot( 7.28 , p_div( ( ( -4.95 - intersect_centers_x ) + obstacle_y ) , p_div( -9.73 , hypot( velocity_y , -6.73 ) ) ) ) * ( intersect_centers_y + hypot( hypot( p_div( -5.77 , ( ( p_div( p_div( -0.07 , ( intersect_centers_y * intersect_centers_y ) ) , hypot( intersect_centers_y , ( intersect_centers_x + intersect_centers_y ) ) ) + hypot( hypot( -0.88 , obstacle_y ) , hypot( 5.00 , -5.94 ) ) ) + hypot( hypot( -9.39 , 4.14 ) , p_div( p_div( hypot( velocity_x , obstacle_y ) , obstacle_x ) , ( p_div( obstacle_y , velocity_x ) * ( velocity_x - obstacle_x ) ) ) ) ) ) , ( hypot( p_div( intersect_radius , obstacle_y ) , p_div( hypot( intersect_radius , hypot( obstacle_y , obstacle_y ) ) , p_div( ( intersect_radius + intersect_centers_y ) , obstacle_y ) ) ) - obstacle_x ) ) , -8.65 ) ) ) , hypot( hypot( ( p_div( 7.14 , hypot( p_div( 8.96 , ( p_div( -3.76 , hypot( intersect_centers_x , p_div( obstacle_y , obstacle_y ) ) ) - velocity_y ) ) , 8.29 ) ) - p_div( ( p_div( obstacle_x , ( hypot( obstacle_x , p_div( p_div( velocity_x , velocity_x ) , hypot( obstacle_x , intersect_radius ) ) ) - -5.90 ) ) + ( velocity_x * hypot( hypot( intersect_centers_y , ( hypot( intersect_centers_x , obstacle_y ) * ( obstacle_y - intersect_radius ) ) ) , obstacle_y ) ) ) , p_div( ( hypot( p_div( 0.13 , hypot( ( velocity_y * intersect_centers_y ) , -5.50 ) ) , 4.05 ) + p_div( 6.06 , p_div( p_div( velocity_y , obstacle_y ) , p_div( velocity_y , p_div( intersect_radius , velocity_y ) ) ) ) ) , ( intersect_centers_y * -8.34 ) ) ) ) , ( p_div( ( ( obstacle_x * hypot( ( intersect_centers_y - hypot( hypot( obstacle_x , obstacle_x ) , ( obstacle_y - velocity_x ) ) ) , 7.89 ) ) + obstacle_y ) , p_div( intersect_radius , p_div( velocity_y , -5.38 ) ) ) + hypot( hypot( intersect_centers_x , 5.63 ) , hypot( 6.48 , hypot( ( hypot( obstacle_y , obstacle_y ) + obstacle_x ) , intersect_centers_y ) ) ) ) ) , ( obstacle_y - p_div( 9.16 , -2.38 ) ) ) ) ) + intersect_radius ) ) ) <= 5.36 else 'RECHTS' if not direction and not ( not ( velocity_x < velocity_x ) ) or not not -3.77 < p_div( hypot( p_div( p_div( ( obstacle_y + intersect_radius ) , -7.96 ) , -0.23 ) , ( intersect_centers_y + ( ( intersect_radius * intersect_radius ) * -3.04 ) ) ) , velocity_y ) and p_div( 4.49 , obstacle_y ) < velocity_x else 'RECHTS' if direction and ( p_div( hypot( ( -1.25 * -7.48 ) , p_div( intersect_centers_y , hypot( intersect_centers_x , -9.80 ) ) ) , intersect_centers_y ) + intersect_radius ) > hypot( hypot( 6.52 , hypot( intersect_centers_x , hypot( hypot( 4.22 , 4.69 ) , obstacle_x ) ) ) , hypot( 9.26 , ( hypot( hypot( ( intersect_centers_x - obstacle_y ) , hypot( obstacle_x , intersect_centers_x ) ) , ( p_div( obstacle_y , velocity_y ) + intersect_centers_x ) ) - velocity_x ) ) ) and not not -2.41 < ( obstacle_y - hypot( 2.85 , p_div( p_div( -9.12 , hypot( velocity_y , intersect_centers_x ) ) , p_div( -2.85 , hypot( obstacle_x , velocity_y ) ) ) ) ) or not not p_div( p_div( hypot( -0.47 , p_div( obstacle_x , obstacle_y ) ) , ( hypot( obstacle_x , intersect_radius ) * hypot( obstacle_y , intersect_radius ) ) ) , p_div( -2.52 , p_div( p_div( velocity_x , obstacle_y ) , -0.27 ) ) ) >= 0.64 and hypot( velocity_y , intersect_centers_x ) != ( p_div( p_div( -9.92 , obstacle_y ) , hypot( hypot( ( velocity_y - -1.15 ) , p_div( hypot( -0.44 , p_div( obstacle_y , intersect_radius ) ) , ( ( intersect_centers_y + intersect_radius ) + velocity_x ) ) ) , hypot( intersect_centers_x , -6.77 ) ) ) * velocity_x ) and obstacle_y <= -8.02 or not not ( ( obstacle_x <= intersect_radius ) and ( obstacle_y - p_div( -7.53 , ( ( obstacle_y - velocity_x ) + intersect_radius ) ) ) <= ( hypot( hypot( velocity_y , 4.59 ) , p_div( intersect_centers_x , ( obstacle_y + velocity_x ) ) ) + intersect_radius ) ) or 3.04 <= p_div( 8.99 , hypot( 2.76 , ( -8.85 - hypot( -9.78 , hypot( p_div( p_div( p_div( ( p_div( intersect_centers_y , velocity_y ) + ( intersect_centers_x * intersect_centers_x ) ) , hypot( hypot( obstacle_x , velocity_x ) , ( intersect_centers_x * obstacle_y ) ) ) , ( ( intersect_centers_x - 0.15 ) + p_div( p_div( obstacle_y , intersect_radius ) , intersect_centers_y ) ) ) , 8.83 ) , p_div( intersect_centers_y , p_div( -6.15 , hypot( p_div( obstacle_x , velocity_y ) , p_div( ( obstacle_y + obstacle_x ) , hypot( obstacle_y , obstacle_y ) ) ) ) ) ) ) ) ) ) else 'RECHTS' if ( not hypot( 3.17 , hypot( p_div( 7.31 , hypot( 2.60 , intersect_centers_y ) ) , intersect_centers_y ) ) <= -5.59 and not p_div( p_div( ( -0.40 + ( velocity_y + 7.18 ) ) , hypot( ( hypot( obstacle_y , p_div( intersect_centers_y , velocity_x ) ) * ( p_div( obstacle_x , obstacle_x ) - obstacle_y ) ) , 5.54 ) ) , ( obstacle_x - ( p_div( -6.76 , p_div( hypot( intersect_centers_x , intersect_centers_x ) , intersect_radius ) ) + ( intersect_centers_x + obstacle_y ) ) ) ) <= p_div( 4.86 , hypot( p_div( hypot( p_div( intersect_radius , velocity_x ) , 8.22 ) , ( p_div( velocity_y , obstacle_y ) - -0.34 ) ) , hypot( intersect_centers_y , ( ( obstacle_x - velocity_x ) + ( hypot( obstacle_x , obstacle_x ) * hypot( obstacle_x , velocity_y ) ) ) ) ) ) or hypot( hypot( p_div( ( -0.18 - ( ( hypot( velocity_y , velocity_y ) - p_div( obstacle_y , intersect_centers_y ) ) - hypot( p_div( obstacle_y , obstacle_x ) , velocity_y ) ) ) , intersect_centers_x ) , ( 4.22 + -3.23 ) ) , 8.04 ) == ( ( ( p_div( hypot( velocity_x , -4.53 ) , p_div( velocity_y , velocity_x ) ) * ( p_div( velocity_y , p_div( -0.81 , velocity_y ) ) - p_div( intersect_radius , p_div( hypot( obstacle_x , obstacle_y ) , 4.75 ) ) ) ) + ( p_div( ( hypot( 8.38 , p_div( velocity_y , intersect_radius ) ) + ( velocity_y + obstacle_y ) ) , p_div( hypot( ( intersect_centers_y * intersect_centers_y ) , intersect_centers_y ) , hypot( p_div( intersect_radius , intersect_centers_y ) , -1.81 ) ) ) - ( ( hypot( ( intersect_centers_y - obstacle_y ) , ( intersect_centers_x - obstacle_x ) ) - 8.68 ) + hypot( 7.10 , hypot( ( obstacle_y * velocity_y ) , 0.45 ) ) ) ) ) + p_div( hypot( intersect_radius , -1.04 ) , hypot( velocity_x , ( intersect_centers_y * ( ( -2.56 - p_div( intersect_centers_x , intersect_centers_x ) ) - 5.07 ) ) ) ) ) and not ( p_div( ( p_div( p_div( ( hypot( velocity_y , velocity_x ) - hypot( intersect_centers_x , intersect_radius ) ) , ( p_div( intersect_radius , velocity_x ) - intersect_radius ) ) , p_div( hypot( obstacle_y , obstacle_x ) , obstacle_x ) ) * ( intersect_radius - hypot( ( obstacle_y + p_div( obstacle_y , velocity_x ) ) , hypot( p_div( intersect_centers_x , intersect_centers_x ) , -2.05 ) ) ) ) , ( ( -6.29 + intersect_centers_y ) * hypot( ( p_div( ( obstacle_y * velocity_y ) , 6.10 ) - -7.10 ) , ( hypot( obstacle_x , -7.76 ) + ( p_div( intersect_centers_y , intersect_centers_x ) + p_div( intersect_centers_x , obstacle_y ) ) ) ) ) ) - ( ( 1.04 * obstacle_y ) * -2.40 ) ) <= ( obstacle_y + intersect_centers_x ) ) or ( ( hypot( hypot( p_div( obstacle_x , p_div( p_div( velocity_x , hypot( hypot( -9.98 , p_div( obstacle_y , velocity_x ) ) , obstacle_y ) ) , ( hypot( p_div( velocity_y , hypot( velocity_x , obstacle_x ) ) , velocity_x ) + p_div( -6.99 , hypot( hypot( intersect_radius , obstacle_y ) , intersect_centers_y ) ) ) ) ) , intersect_centers_y ) , p_div( hypot( p_div( -2.98 , velocity_y ) , p_div( hypot( -3.46 , -2.04 ) , hypot( hypot( p_div( p_div( intersect_centers_y , velocity_x ) , p_div( velocity_x , intersect_centers_x ) ) , p_div( hypot( intersect_radius , intersect_centers_y ) , ( obstacle_x + intersect_centers_x ) ) ) , hypot( 8.25 , p_div( -9.41 , 6.69 ) ) ) ) ) , 0.76 ) ) * obstacle_x ) <= obstacle_x ) or ( ( ( velocity_y + obstacle_x ) != hypot( intersect_centers_x , velocity_x ) or obstacle_y < obstacle_x and not intersect_centers_x >= velocity_x and p_div( ( intersect_radius + intersect_radius ) , p_div( obstacle_x , intersect_centers_x ) ) >= ( -6.13 - ( obstacle_y * velocity_x ) ) or ( velocity_x > velocity_y ) ) and hypot( hypot( -5.10 , -9.68 ) , -4.47 ) == intersect_centers_x ) and not ( ( not not velocity_y <= obstacle_x ) and velocity_x > hypot( p_div( p_div( ( -5.30 * -2.36 ) , obstacle_y ) , intersect_centers_x ) , ( hypot( -9.79 , p_div( ( ( obstacle_y - obstacle_y ) - p_div( velocity_x , intersect_centers_x ) ) , ( p_div( intersect_centers_x , intersect_centers_x ) - p_div( obstacle_x , intersect_radius ) ) ) ) - ( p_div( p_div( ( intersect_centers_x * velocity_y ) , 7.11 ) , p_div( ( velocity_y - obstacle_x ) , -0.82 ) ) + intersect_centers_y ) ) ) or p_div( hypot( hypot( ( hypot( p_div( 3.41 , ( intersect_centers_x + velocity_x ) ) , hypot( p_div( intersect_centers_y , intersect_centers_y ) , velocity_x ) ) - ( p_div( ( intersect_radius - intersect_centers_x ) , p_div( intersect_centers_y , intersect_centers_y ) ) * intersect_centers_y ) ) , p_div( hypot( -2.22 , intersect_radius ) , p_div( ( hypot( intersect_radius , velocity_x ) * p_div( obstacle_y , velocity_x ) ) , intersect_radius ) ) ) , 0.53 ) , ( ( hypot( hypot( -1.96 , hypot( hypot( velocity_y , velocity_y ) , hypot( obstacle_y , intersect_centers_y ) ) ) , -9.10 ) + ( ( ( p_div( intersect_centers_x , obstacle_y ) + ( intersect_radius - intersect_centers_y ) ) * p_div( hypot( intersect_radius , obstacle_x ) , hypot( intersect_centers_x , intersect_centers_x ) ) ) * p_div( p_div( p_div( obstacle_x , intersect_centers_x ) , p_div( intersect_centers_y , velocity_x ) ) , p_div( velocity_y , p_div( obstacle_x , intersect_radius ) ) ) ) ) * p_div( p_div( 9.40 , hypot( ( hypot( intersect_centers_x , intersect_radius ) - p_div( obstacle_x , velocity_x ) ) , p_div( ( intersect_centers_y - obstacle_x ) , 9.72 ) ) ) , velocity_y ) ) ) <= intersect_centers_x ) and -9.70 == intersect_centers_y and ( ( hypot( hypot( p_div( obstacle_x , p_div( p_div( velocity_x , hypot( hypot( -9.98 , p_div( obstacle_y , velocity_x ) ) , obstacle_y ) ) , ( hypot( p_div( velocity_y , hypot( velocity_x , obstacle_x ) ) , velocity_x ) + p_div( -6.99 , hypot( hypot( intersect_radius , obstacle_y ) , intersect_centers_y ) ) ) ) ) , intersect_centers_y ) , p_div( hypot( p_div( -2.98 , velocity_y ) , p_div( hypot( -3.46 , -2.04 ) , hypot( hypot( p_div( p_div( intersect_centers_y , velocity_x ) , p_div( velocity_x , intersect_centers_x ) ) , p_div( hypot( intersect_radius , intersect_centers_y ) , ( obstacle_x + intersect_centers_x ) ) ) , hypot( 8.25 , p_div( -9.41 , 6.69 ) ) ) ) ) , 0.76 ) ) * obstacle_x ) <= obstacle_x or not not ( not hypot( hypot( intersect_radius , 5.17 ) , hypot( ( -2.43 + hypot( obstacle_y , velocity_y ) ) , p_div( velocity_y , intersect_centers_y ) ) ) <= p_div( 0.06 , hypot( hypot( hypot( obstacle_x , intersect_centers_y ) , velocity_y ) , p_div( ( velocity_y * obstacle_x ) , obstacle_x ) ) ) ) ) or direction else 'LINKS' if not hypot( 9.86 , 0.43 ) >= hypot( -5.88 , p_div( -4.11 , p_div( 7.51 , -2.89 ) ) ) and not direction else 'LINKS'

Genotype:
[75571, 99660, 6010, 65699, 32911, 50057, 49578, 60869, 85039, 56322, 57242, 48458, 3419, 60312, 19581, 42958, 60370, 63828, 73084, 44423, 29717, 27973, 76988, 80571, 81962, 34869, 49852, 34542, 91490, 98039, 67240, 19677, 12374, 25300, 19233, 31119, 89387, 19635, 42240, 73150, 89969, 72783, 83412, 33775, 18789, 38575, 54127, 5180, 79585, 95043, 45762, 49661, 87360, 42888, 25677, 87563, 48001, 69138, 44246, 57800, 7850, 19982, 70806, 97060, 86595, 96454, 28455, 1821, 87951, 35276, 22007, 98293, 73445, 66385, 3549, 33115, 19770, 29922, 2937, 53112, 48519, 17916, 55688, 64163, 92270, 51934, 44880, 47565, 36834, 46705, 90180, 83688, 11411, 64493, 53206, 85337, 98671, 81428, 70238, 30289, 14438, 46225, 86678, 52712, 84890, 72038, 99950, 69320, 49025, 33959, 4062, 65310, 67455, 64715, 14850, 60742, 3825, 98613, 94006, 93037, 46236, 15415, 5915, 18884, 41059, 17795, 26456, 32530, 97549, 12152, 73566, 68572, 55241, 17609, 86394, 32171, 85802, 6018, 18570, 46175, 40940, 55797, 90795, 14529, 34164, 40219, 9495, 56959, 57372, 52985, 84165, 37773, 47077, 42839, 40894, 98627, 16281, 42962, 76908, 25105, 61730, 15099, 55179, 39545, 98087, 2716, 92170, 33530, 74775, 38257, 46978, 95505, 13801, 74085, 96682, 73118, 83675, 90851, 62440, 66500, 56866, 79504, 53328, 4904, 18295, 72686, 70182, 58640, 52360, 89390, 1111, 25839, 8567, 48570, 70943, 56278, 92160, 94638, 19615, 28081, 14773, 3277, 98893, 95698, 46810, 42462, 35661, 18664, 95259, 98331, 32246, 94074, 32551, 14179, 18620, 17408, 13602, 98847, 67531, 53689, 57764, 36232, 42390, 68451, 39738, 33690, 64793, 83919, 4274, 18230, 76296, 51325, 39505, 95324, 95832, 40244, 8698, 6880, 49710, 92480, 65880, 82913, 48028, 80750, 12911, 89640, 85329, 35525, 5798, 50961, 85713, 78168, 16108, 42192, 98279, 47986, 49116, 51717, 94180, 71551, 80258, 94111, 32274, 25274, 7678, 81065, 93568, 25400, 98888, 39553, 80632, 63520, 36894, 57665, 19363, 60838, 12993, 35612, 73605, 59728, 840, 16411, 82950, 58673, 4055, 38248, 70049, 97646, 48631, 33012, 33334, 97732, 94102, 5913, 31111, 53694, 73651, 69673, 48192, 64733, 79751, 42875, 19434, 73328, 71450, 9694, 51250, 50379, 7434, 74134, 59282, 24983, 3460, 46513, 81641, 97153, 41081, 77574, 81265, 76183, 12607, 9365, 66786, 2840, 93910, 17681, 91894, 62527, 42530, 64217, 85492, 31861, 98137, 60220, 53776, 49309, 49194, 38435, 89347, 66295, 35927, 50405, 73670, 6162, 52643, 15980, 53343, 77390, 50369, 30096, 6021, 11828, 71134, 72247, 6065, 98355, 19434, 88862, 80349, 8848, 87961, 71380, 97234, 78318, 77093, 75518, 53207, 81870, 37764, 23530, 23214, 87318, 78764, 7568, 98340, 65700, 22065, 34236, 14700, 93025, 42935, 62832, 49513, 18679, 53975, 34161, 33449, 50195, 22282, 3505, 69308, 7038, 24337, 44785, 54028, 4775, 36404, 21166, 65649, 88563, 39971, 15508, 89401, 67618, 28354, 82844, 11193, 53674, 32075, 73802, 51805, 51650, 50733, 34944, 18165, 9219, 43273, 9420, 51936, 44851, 38071, 70627, 30622, 92378, 16876, 26138, 85746, 1973, 12296, 41877, 79426, 13347, 57671, 64160, 15218, 2589, 99785, 43656, 2183, 8520, 21335, 62286, 86036, 34766, 36080, 8404, 54635, 77185, 97877, 94713, 21365, 14583, 93816, 93545, 91545, 39871, 25740, 66234, 46233, 70652, 43222, 96408, 28722, 78130, 93234, 61875, 43147, 7753, 39035, 44329, 64030, 36761, 40758, 62560, 87331, 50060, 11328, 76905, 20464, 36559, 87605, 9178, 83930, 25829, 96234, 41176, 92688, 63607, 41732, 26255, 39436, 42145, 86332, 41330, 71351, 53725, 84616, 61468, 98386, 47326, 91534, 8175, 56350, 63077, 12580, 62910, 64643, 64894, 90912, 47879, 7102, 44912, 78754, 393, 48860, 74927, 18130, 65931, 12427, 98438, 38750, 34006, 23405, 53342, 67419, 21387, 35200, 87327, 49655, 91222, 65662, 82590, 79718, 90392, 96338, 25400, 99481, 8560, 84885, 55055, 14577, 37835, 63004, 63500, 86837, 71110, 73208, 25034, 40070, 80931, 64407, 14782, 95180, 96856, 17590, 84313, 64648, 26387, 86295, 57716, 49390, 83510, 986, 21863, 14613, 71692, 51040, 59645, 53029, 15544, 98986, 25654, 1081, 43446, 43702, 69769, 26352, 34580, 88992, 94058, 45645, 32296, 70600, 46459, 46294, 67961, 54999, 87124, 13141, 67070, 21924, 77813, 49755, 82275, 47909, 85506, 4268, 38485, 80522, 75754, 33200, 61383, 72259, 51530, 4967, 90324, 58640, 76797, 50012, 88253, 47844, 87848, 83022, 85223, 29494, 94223, 99883, 53227, 32490, 51201, 73387, 45727, 17430, 29832, 82858, 80893, 71181, 51500, 11167, 87609, 72509, 3728, 18557, 54255, 90444, 96015, 85139, 13460, 93524, 83339, 99968, 2087, 92215, 94982, 8623, 11615, 27179, 67850, 11756, 31920, 18163, 16812, 11247, 29596, 41964, 96565, 43996, 77239, 77509, 44758, 50508, 16950, 98653, 72805, 36292, 12670, 92821, 53850, 56246, 54647, 77468, 75152, 6436, 87187, 71169, 15422, 17009, 52238, 87505, 68725, 26227, 72728, 53146, 41631, 25105, 77443, 68974, 52476, 48166, 47779, 50677, 20692, 7880, 61864, 34088, 60133, 41437, 55367, 46275, 23318, 48645, 70033, 44217, 10650, 22615, 97260, 92386, 11142, 24153, 86395, 43269, 58430, 12587, 98884, 13115, 1732, 79719, 38860, 99742, 11978, 39521, 87707, 82002, 43458, 8212, 81585, 66882, 30891, 87261, 43367, 57909, 23374, 43201, 53391, 78490, 79396, 28536, 39976, 63069, 16221, 41024, 86386, 54200, 26067, 22446, 75686, 66190, 30131, 62775, 93500, 41646, 95635, 25643, 24639, 22414, 82100, 81326, 65983, 7766, 86855, 76471, 5601, 70972, 39764, 5550, 83539, 56159, 43955, 31177, 29628, 92775, 42367, 13709, 78568, 41300, 80360, 39090, 98383, 46739, 71065, 32666, 95649, 42389, 76750, 39995, 33151, 43330, 23628, 42586, 14028, 54522, 12655, 16254, 34766, 72370, 48312, 98640, 44272, 4522, 38669, 30585, 32559, 94281, 71295, 93599, 88157, 31075, 39763, 68010, 94591, 55664, 77959, 76536, 39615, 89655, 84566, 31081, 92213, 31675, 33669, 40065, 64642, 80585, 37625, 37000, 5294, 37817, 61542, 89690, 34470, 40375, 21800, 14488, 62178, 61100, 9218, 23682, 59451, 40498, 71773, 10221, 66620, 87091, 40698, 59000, 35896, 61396, 54253, 22847, 44949, 24796, 93778, 29306, 17134, 16691, 40331, 60822, 22197, 6892, 78130, 23037, 92176, 34115, 41613, 3580, 65131, 13912, 38318, 39166, 95458, 43981, 72874, 73959, 98099, 90630, 57035, 47691, 63080, 59188, 51498, 81517, 24011, 71133, 24833, 58569, 11407, 34570, 47572, 26175, 65143, 14744, 73092, 26365, 45022, 76563, 50673, 41744, 19453, 74482, 85411, 68358, 89940, 40383, 28214, 46781, 37649, 15310, 66661, 42462, 94985, 95660, 65403, 26552, 12890, 57357, 90705, 54601, 17070, 26836, 2341, 31349, 92822, 66099, 90415, 63863, 8446, 22655, 60942, 11862, 55395, 83805, 72420, 22513, 86030, 27710, 88509, 28652, 5538, 73591, 7292, 55631, 60272, 65932, 24672, 43095, 86669, 74412, 10969, 74893, 32085, 44522, 21400, 70341, 97028, 69027, 56315, 87581, 76370, 10442, 99310, 76841, 28276, 21804, 4836, 31010, 32045, 29193, 94499, 84789, 90503, 23763, 75926, 21054, 2791, 95481, 53499, 46412, 86553, 70088, 42015, 24793, 85415, 91783, 98878, 7305, 91634, 45620, 2815, 81356, 17047, 96475, 33439, 75411, 91410, 76269, 60559, 16794, 68054, 34657, 44435, 23604, 41400, 78936, 13719, 98079, 36790, 16872, 54376, 15805, 63897, 54530, 67677, 51808, 15605, 72991, 37870, 25210, 35683, 7375, 22680, 53170, 26250, 57266, 37597, 45522, 60512, 56930, 14416, 51830, 2898, 38807, 36050, 50289, 66165, 33255, 51682, 11345, 8350, 92767, 86645, 23439, 685, 18482, 37802, 78242, 72662, 58211, 41752, 81732, 53219, 26684, 82554, 58733, 67719, 67418, 48200, 16765, 83160, 25363, 29332, 84212, 60575, 20576, 24150, 21040, 85362, 90804, 54820, 31626, 83035, 65010, 30789, 87711, 99166, 2392, 87299, 29897, 82042, 58675, 5361, 93393, 49405, 75313, 51498, 81517, 24011, 71133, 24833, 58569, 11407, 34570, 47572, 26175, 65143, 45996, 43733, 98100, 14700, 23454, 6997, 64230, 38471, 20856, 53768, 10207, 68183, 57143, 46758, 48688, 83119, 73985, 82465, 48688, 16777, 43692, 78243, 57950, 61721, 20711, 78867, 66568, 90513, 1493, 25059, 87314, 43029, 84327, 48713, 4622, 92725, 70715, 70888, 56883, 84431, 98574, 91925, 72638, 79492, 13041, 83109, 90350, 41847, 42995, 59450, 17442, 98631, 81086, 25460, 75023, 72620, 84194, 59301, 89917, 32708, 31959, 78289, 73087, 26909, 75541, 90636, 95125, 23453, 34138, 15418, 78715, 15268, 2418, 62609, 81732, 3336, 71072, 80433, 321, 57140, 49328, 52111, 68009, 45959, 48119, 68133, 93877, 57825, 20436, 63676, 53890, 21583, 27420, 94772, 97647, 85751, 76299, 42419, 83169, 49122, 67588, 37275, 23531, 69042, 47096, 56922, 66341, 78904, 57435, 25256, 72529, 64190, 10882, 36694, 66885, 41009, 71786, 99558, 16147, 14231, 38060, 62230, 6515, 64013, 88093, 63439, 23181, 57433, 67306, 30681, 57915, 80055, 20221, 25748, 98040, 89959, 20820, 70099, 63515, 37077, 4889, 52941, 68923, 49006, 2967, 91007, 57144, 68089, 78957, 53312, 84110, 30049, 87250, 55898, 16347, 48785, 74978, 67490, 72743, 36475, 69962, 16135, 10713, 48527, 86239, 19944, 32042, 7280, 56409, 95460, 66912, 11463, 23705, 16171, 5304, 65808, 8118, 66115, 40998, 92670, 57653, 66951, 12859, 42993, 90347, 13710, 9932, 61091, 59024, 15518, 81360, 29818, 90705, 16297, 37185, 67757, 84914, 58869, 26223, 63455, 1130, 79696, 11817, 54737, 50287, 98638, 90095, 82933, 24676, 9130, 89180, 35461, 48118, 85270, 26413, 44529, 96924, 83458, 52032, 87326, 21645, 44118, 23270, 6677, 19170, 36192, 99974, 69134, 8991, 66620, 87091, 40698, 59000, 35896, 72780, 49939, 6726, 80212, 20145, 72998, 11010, 93327, 30433, 98558, 48530, 38667, 89570, 80641, 61236, 19641, 38876, 80511, 59698, 9762, 90534, 59458, 75321, 92422, 59560, 30942, 67610, 32739, 69609, 61291, 81627, 21065, 13072, 11153, 50279, 80257, 72646, 26046, 82052, 34884, 80248, 76055, 3940, 66574, 94915, 10449, 1948, 24412, 80128, 11635, 13012, 71768, 71595, 57648, 77213, 33888, 21370, 79884, 46435, 93597, 54976, 86098, 37610, 36861, 47627, 60617, 18569, 16335, 37095, 78633, 23827, 73248, 95018, 14680, 37318, 30420, 23615, 63329, 59990, 23610, 782, 59485, 20556, 55308, 60944, 31680, 99603, 48774, 84390, 37654, 40510, 34466, 95657, 68718, 69251, 59165, 47167, 88616, 77902, 14127, 43511, 90073, 70961, 70100, 18039, 67884, 81887, 59474, 78858, 12988, 15015, 99002, 79200, 38468, 61135, 525, 69680, 11327, 90358, 25460, 19226, 70610, 61870, 85060, 37009, 43871, 54764, 71608, 7627, 18882, 9252, 60723, 6192, 21888, 11536, 7216, 8019, 1138, 64459, 35002, 37807, 6087, 57040, 3009, 37566, 57803, 7678, 67554, 146, 2732, 13611, 71520, 86602, 6791, 50920, 67282, 75241, 987, 18475, 58064, 24571, 66316, 8769, 17591, 26445, 78484, 74209, 58734, 99453, 37559, 31344, 25229, 24628, 75045, 32264, 66938, 34915, 1241, 44350, 65156, 61938, 93630, 9697, 61764, 39161, 4588, 87923, 18187, 33452, 64697, 91510, 18509, 82154, 12327, 92027, 81960, 62674, 55820, 54593, 5846, 9713, 87530, 11714, 7910, 26917, 49329, 2989, 66674, 14445, 57238, 44391, 38910, 22588, 58713, 85714, 40370, 26481, 25637, 56855, 8121, 39036, 70242, 43615, 63189, 53519, 81335, 36140, 32275, 78064, 68520, 67613, 77639, 74880, 70011, 16731, 30493, 80617, 73386, 38246, 51834, 27035, 93256, 53294, 68953, 74879, 30181, 67211, 90004, 63295, 81759, 20256, 75649, 11330, 94638, 58672, 62357, 350, 75969, 70655, 37424, 5151, 23387, 30635, 96714, 50014, 56238, 23976, 98137, 60220, 53776, 49309, 49194, 3379, 32346, 11978, 37910, 87482, 30759, 68006, 60639, 51126, 62091, 62759, 19635, 54793, 40222, 86550, 64399, 29855, 64952, 86141, 26625, 88967, 9878, 48855, 17139, 61733, 97445, 76158, 80057, 77519, 89918, 81261, 79706, 89645, 25478, 40743, 80555, 17925, 26983, 77067, 81472, 53615, 32279, 77819, 21810, 6400, 19503, 2826, 40010, 86286, 73582, 35582, 92510, 41457, 79668, 76870, 69096, 92935, 50713, 34907, 6668, 96807, 6377, 62726, 5020, 73300, 30496, 97383, 61823, 5135, 60883, 47959, 20985, 85594, 34387, 19995, 66322, 4029, 97630, 92971, 76872, 43375, 96909, 34142, 48540, 69514, 71577, 33525, 65865, 5033, 79693, 34745, 65870, 41139, 42724, 86345, 86032, 58290, 33981, 52462, 71460, 43739, 45675, 60080, 82036, 79847, 48512, 78205, 42338, 49926, 61261, 81515, 65606, 36249, 27955, 75923, 18855, 72421, 63750, 53952, 29047, 20053, 70890, 38463, 97700, 60924, 8500, 39878, 7210, 65805, 52742, 66087, 2234, 51117, 56225, 6321, 79010, 42536, 65781, 77911, 66696, 56027, 21499, 12735, 13901, 50665, 29143, 96951, 92904, 16280, 81897, 72086, 33485, 35829, 47245, 91808, 4890, 14408, 64338, 28799, 2776, 46272, 67099, 5268, 46425, 7511, 4890, 54366, 25262, 15449, 53409, 17654, 25528, 66563, 88889, 58564, 6759, 88795, 71914, 86260, 54525, 87940, 62080, 99322, 94025, 35844, 64485, 49260, 44036, 29439, 47368, 77180, 33958, 30740, 92192, 39678, 72778, 40315, 39471, 89950, 19980, 58541, 57800, 7850, 19982, 70806, 97060, 34068, 60710, 61713, 63846, 16631, 35580, 26443, 84983, 82482, 64284, 54997, 27260, 79803, 86698, 43153, 5415, 50541, 99652, 48535, 7334, 53895, 46812, 10333, 30075, 15704, 91152, 75510, 99189, 74840, 89496, 27289, 55034, 44318, 58313, 27521, 78761, 53826, 62369, 87407, 87198, 5972, 12070, 80304, 74135, 61580, 7888, 99244, 32535, 30986, 56489, 20625, 65792, 26657, 82825, 19177, 92765, 86577, 26669, 79633, 56772, 29334, 27990, 42531, 58690, 42590, 15785, 1948, 25645, 32564, 88990, 43337, 93438, 29200, 38843, 54679, 92545, 77752, 88490, 58845, 53234, 23315, 26384, 76962, 80905, 23956, 51041, 57022, 95344, 27520, 69363, 41805, 49803, 72233, 7240, 39888, 92716, 70703, 27364, 38685, 51621, 65957, 51788, 28924, 11415, 43412, 81870, 10993, 1125, 23055, 69060, 67668, 37747, 98745, 99126, 64245, 16549, 41769, 33387, 45536, 67371, 35236, 57510, 83488, 25736, 59713, 54163, 22693, 33660, 52797, 65560, 9031, 75080, 82186, 90507, 42989, 68405, 21727, 32495, 79055, 59804, 73520, 77990, 65058, 67037, 567, 20285, 30413, 62939, 78005, 58083, 90112, 56756, 2452, 36157, 49451, 17526, 8084, 96833, 44236, 98546, 56952, 46306, 40567, 15210, 55602, 59727, 15503, 27843, 10590, 70155, 89438, 65444, 73119, 73877, 97640, 63934, 48561, 69254, 28967, 29859, 28125, 30339, 56917, 71371, 98178, 60847, 54094, 84263, 60040, 4596, 28445, 51189, 32764, 57154, 24785, 36244, 14771, 41868, 41359, 10673, 47271, 99936, 49198, 59127, 42422, 34858, 95272, 13909, 68089, 36016, 90670, 69747, 82554, 76419, 68095, 94033, 43020, 67487, 69477, 60135, 58209, 77592, 66741, 28302, 5521, 14329, 35007, 49483, 2403, 4005, 69453, 34441, 71600, 2651, 90406, 27497, 31143, 30860, 93849, 20980, 92709, 2394, 99408, 41948, 54572, 48746, 45778, 35539, 48335, 1887, 41767, 85314, 65439, 66007, 20222, 48891, 82700, 7649, 67320, 29110, 61447, 73214, 4645, 80011, 51770, 3270, 95999, 9868, 91555, 19517, 78489, 96180, 62741, 30525, 42485, 35792, 93177, 91728, 37503, 57906, 87956, 78527, 29270, 38238, 34618, 38025, 73231, 57508, 96961, 85327, 97722, 85445, 18280, 36750, 86231, 15666, 40361, 68875, 79929, 51614, 16422, 23683, 50393, 71171, 91103, 21477, 42959, 31853, 75579, 4231, 57095, 55336, 53054, 42521, 13014, 58342, 66397, 67968, 66780, 75878, 87610, 88526, 92845, 57018, 36514, 81432, 48555, 92747, 37260, 46254, 94082, 62539, 57380, 45386, 77032, 51515, 42157, 6029, 6103, 83837, 52470, 16935, 49590, 4981, 44952, 16893, 41880, 85983, 35748, 67090, 56914, 18335, 64705, 24117, 28299, 29010, 37144, 78468, 96755, 28477, 41645, 51923, 91030, 6335, 6835, 79426, 28992, 89441, 52278, 80476, 87945, 63998, 90648, 10264, 4722, 5816, 48247, 34540, 74457, 1791, 73694, 72948, 6167, 15561, 19822, 142, 148, 92569, 95056, 46564, 41077, 17116, 89586, 86597, 9833, 27347, 16316, 91113, 14355, 20034, 58107, 96260, 63809, 96810, 68436, 30091, 32110, 67829, 26511, 46779, 26140, 84978, 98162, 14949, 77794, 35962, 93149, 19117, 43140, 81280, 24669, 59108, 57015, 13009, 57587, 9477, 96700, 1874, 90060, 8062, 71343, 68640, 28955, 63480, 63317, 12784, 38276, 61750, 88891, 72515, 8259, 50770, 46182, 53134, 72915, 7418, 62525, 8058, 29163, 68295, 71898, 37619, 82653, 14925, 49385, 97150, 1019, 36227, 6929, 90315, 71614, 29980, 45255, 91982, 16675, 29229, 11127, 48884, 64858, 25427, 66531, 50012, 1498, 67000, 13681, 78973, 39153, 89949, 69835, 23393, 80513, 96740, 42428, 98016, 37613, 57597, 59765, 72265, 89370, 69711, 50889, 47102, 30914, 12310, 55035, 92562, 10652, 64116, 50277, 52208, 27896, 86850, 94286, 62082, 38692, 88930, 67339, 75850, 98319, 86017, 66175, 52555, 33497, 2630, 86977, 68240, 95787, 81009, 95890, 63813, 29195, 50236, 40837, 55463, 61818, 12523, 37844, 90349, 73597, 8779, 54074, 49295, 98122, 98771, 63068, 32214, 44360, 7372, 42889, 9743, 37973, 61910, 96617, 17745, 15550, 37599, 61580, 36488, 37240, 24540, 75682, 96651, 32662, 89466, 81187, 53898, 5809, 74328, 59870, 55360, 58687, 78550, 99962, 75212, 97975, 56321, 17851, 62208, 35073, 41865, 61413, 48718, 78105, 73698, 58428, 30175, 90139, 34631, 34645, 60188, 42885, 15886, 3013, 86638, 98051, 54032, 76208, 81676, 87744, 64138, 77653, 91324, 16463, 82845, 81960, 80110, 4722, 79827, 71790, 53322, 85985, 68132, 77274, 26850, 75590, 26443, 90042, 94576, 99563, 99216, 39629, 76941, 30626, 6726, 88103, 77903, 29492, 49553, 54368, 28143, 70630, 34946, 31773, 9056, 56021, 11414, 81345, 35843, 14006, 25786, 89563, 43706, 51266, 71674, 24011, 21633, 37716, 56073, 96031, 70295, 52282, 44310, 14401, 42011, 79664, 32040, 94171, 12632, 43686, 59916, 53163, 1839, 21860, 71321, 98383, 56965, 88408, 49099, 42926, 70255, 56434, 17034, 69291, 56636, 5440, 78821, 63293, 84417, 58727, 43429, 53347, 86818, 88722, 2547, 70924, 94280, 25148, 1023, 1915, 23599, 19576, 9435, 61851, 11347, 60929, 87046, 61326, 80230, 69403, 36080, 93242, 43973, 84229, 24680, 890, 9900, 75144, 47939, 47700, 72221, 22373, 2755, 43514, 55340, 38291, 87731, 48011, 9193, 14990, 58304, 72185, 6362, 23292, 68592, 76107, 69766, 82361, 4474, 73064, 67154, 56919, 27160, 48248, 93757, 60370, 78461, 94245, 9128, 24221, 60202, 5281, 43097, 78415, 6202, 46551, 14550, 99447, 74167, 76129, 43782, 10513, 4174, 89856, 32369, 6887, 17711, 882, 95505, 68450, 44096, 76288, 57745, 47297, 72634, 17368, 66182, 76780, 54167, 56293, 78210, 15610, 13866, 50131, 88193, 47459, 25478, 45690, 98700, 19041, 85593, 8525, 9354, 4854, 66793, 89403, 79571, 62382, 14320, 1336, 36025, 87762, 72093, 43970, 92274, 15893, 92488, 81466, 10959, 39342, 19234, 51932, 8442, 45876, 59166, 73866, 71164, 11566, 63769, 91850, 67693, 36053, 22156, 25076, 24622, 42379, 97092, 46676, 53259, 83383, 55228, 90954, 3370, 77301, 73480, 78035, 58713, 43643, 30870, 93943, 85760, 12040, 28104, 13167, 75070, 84095, 44100, 61515, 43029, 11865, 52318, 90196, 19865, 46191, 86794, 9172, 59760, 9787, 25431, 37589, 31693, 78752, 42794, 14051, 45295, 3484, 97130, 72139, 12931, 61223, 86326, 83438, 80948, 49632, 19538, 74205, 95127, 27742, 85796, 48126, 31041, 46219, 56551, 28092, 53468, 57545, 69019, 19895, 85036, 99337, 20676, 45408, 11961, 84942, 6108, 78785, 628, 72205, 42416, 67920, 64826, 34161, 48489, 76860, 26086, 95791, 29100, 75542, 43712, 51312, 47948, 95331, 33044, 64819, 39500, 17584, 19267, 38662, 68585, 21640, 16060, 61912, 13454, 63703, 74255, 17293, 575, 51718, 68984, 18378, 25500, 87392, 84055, 38558, 45432, 40641, 66504, 33561, 64022, 90935, 96802, 70327, 82442, 84505, 31379, 26120, 46477, 66411, 84684, 65529, 73930, 75792, 52187, 71420, 27111, 98931, 86366, 59600, 37416, 78684, 86169, 19059, 49938, 91995, 80933, 75575, 30506, 15785, 33079, 1662, 30267, 80506, 1032, 63253, 9119, 34509, 60852, 84150, 66616, 52163, 54968, 14509, 70020, 59373, 92512, 2041, 16168, 77097, 30991, 55221, 77575, 40597, 97963, 15426, 20544, 68079, 97880, 18734, 14384, 47607, 84215, 16265, 29515, 42184, 12009, 97914, 41855, 8835, 37944, 11780, 64815, 31884, 28540, 44980, 53978, 91215, 44086, 84171, 15776, 61761, 95596, 82217, 16387, 17945, 50105, 44833, 37515, 45827, 81915, 37426, 54519, 75596, 66651, 62167, 74378, 7030, 54052, 47180, 97960, 23860, 18077, 74922, 16861, 29402, 8324, 84468, 10180, 10725, 36968, 33795, 6023, 77205, 40580, 91443, 48507, 87828, 10569, 15445, 7221, 1684, 38197, 75126, 97229, 76749, 58097, 11635, 33003, 83464, 72604, 41695, 10217, 69790, 66460, 83599, 48687, 49370, 60671, 49917, 17189, 78278, 93783, 25430, 77573, 43836, 50212, 78398, 35144, 68315, 66619, 64572, 64110, 49714, 79349, 54050, 74855, 29640, 98860, 6641, 31092, 83790, 34239, 69372, 62340, 73609, 24791, 63971, 5650, 45593, 77630, 31724, 6561, 91852, 73046, 91161, 68598, 41598, 52389, 77289, 32373, 33171, 75999, 15766, 29102, 46037, 24356, 5549, 6601, 48882, 91385, 64978, 8978, 495, 42952, 9608, 25791, 14752, 10331, 89429, 67347, 33518, 18203, 23022, 17122, 19482, 35344, 46937, 80165, 15233, 38565, 25045, 87444, 52444, 24870, 43610, 63644, 60135, 10213, 87373, 54378, 93990, 7108, 80375, 43923, 74184, 98140, 16114, 90386, 1030, 9188, 20484, 44529, 21150, 58170, 23185, 35391, 67499, 96128, 53250, 70261, 85, 80904, 62817, 77557, 24860, 58034, 30465, 23417, 88590, 73641, 16996, 46143, 97990, 17318, 43408, 94543, 45467, 4390, 77148, 40502, 8416, 18203, 90927, 29066, 27111, 98725, 19638, 3672, 90215, 67217, 82270, 33340, 37597, 10374, 2960, 86244, 22770, 845, 77752, 30148, 30020, 8418, 15645, 92579, 94245, 9128, 49578, 60869, 85039, 56322, 57242, 48458, 3419, 60312, 19581, 42958, 60370, 63828, 73084, 44423, 35316, 20253, 56556, 65833, 91841, 68257, 95043, 45762, 49661, 87360, 42888, 25677, 87563, 48001, 69138, 44246, 57800, 7850, 19982, 70806, 97060, 86595, 96454, 28455, 1821, 87951, 35276, 22007, 98293, 73445, 66385, 3549, 33115, 19770, 29922, 2937, 53112, 48519, 17916, 55688, 64163, 92270, 51934, 44880, 47565, 36834, 46705, 90180, 83688, 11411, 64493, 53206, 85337, 98671, 81428, 70238, 30289, 14438, 46225, 86678, 52712, 84890, 72038, 99950, 94547, 49025, 33959, 4062, 65310, 67455, 64715, 14850, 60742, 3825, 98613, 94006, 93037, 46236, 15415, 5915, 18884, 41059, 17795, 26456, 32530, 97549, 12152, 73566, 49222, 36775, 59316, 76677, 28716, 85802, 6018, 45790, 87129, 40940, 55797, 90795, 72732, 34164, 40219, 9495, 56959, 57372, 52985, 84165, 37773, 47077, 78931, 85207, 28100, 38724, 5948, 20106, 14773, 3277, 98893, 12677, 1100, 15556, 66905, 43125, 32551, 14179, 18620, 17408, 13602, 39122, 40579, 34322, 6260, 61375, 11355, 65195, 11323, 20126, 77148, 9683, 57510, 2283, 73334, 39738, 33690, 64793, 83919, 4274, 18230, 76296, 51325, 39505, 95324, 95832, 40244, 8698, 6880, 49710, 92480, 65880, 82913, 48028, 80750, 12911, 89640, 85329, 35525, 5798, 50961, 85713, 78168, 16108, 42192, 98279, 47986, 49116, 51717, 94180, 71551, 80258, 94111, 32274, 25274, 7678, 81065, 93568, 25400, 98888, 39553, 80632, 63520, 36894, 57665, 19363, 60838, 12993, 35612, 73605, 59728, 840, 16411, 82950, 58673, 4055, 38248, 70049, 97646, 48631, 33012, 33334, 97732, 94102, 5913, 31111, 53694, 73651, 69673, 48192, 64733, 79751, 42875, 19434, 73328, 71450, 9694, 51250, 50379, 7434, 74134, 59282, 24983, 3460, 46513, 81641, 97153, 41081, 77574, 81265, 76183, 12607, 9365, 66786, 2840, 93910, 17681, 91894, 62527, 42530, 64217, 85492, 31861, 62967, 68811, 94370, 99488, 8871, 38435, 89347, 66295, 35927, 50405, 73670, 6162, 52643, 15980, 53343, 77390, 50369, 30096, 6021, 11828, 71134, 72247, 6065, 98355, 19434, 88862, 80349, 8848, 87961, 71380, 97234, 78318, 77093, 75518, 53207, 81870, 37764, 23530, 23214, 87318, 78764, 15085, 25353, 14700, 93025, 42935, 62832, 49513, 18679, 53975, 34161, 33449, 50195, 22282, 3505, 69308, 7038, 24337, 44785, 54028, 59055, 70267, 21166, 65649, 88563, 39971, 15508, 89401, 67618, 28354, 82844, 11193, 53674, 32075, 73802, 51805, 51650, 50733, 34944, 18165, 9219, 43273, 9420, 51936, 44851, 38071, 70627, 30622, 92378, 16876, 26138, 85746, 1973, 12296, 41877, 79426, 13347, 57671, 64160, 15218, 2589, 99785, 43656, 2183, 8520, 21335, 62286, 86036, 34766, 36080, 8404, 54635, 21498, 97877, 94713, 21365, 14583, 93816, 93545, 91545, 39871, 25740, 66234, 46233, 54715, 62907, 36559, 87605, 9178, 83930, 25829, 96234, 41176, 92688, 63607, 41732, 26255, 39436, 42145, 86332, 41330, 71351, 53725, 84616, 61468, 98386, 47326, 91534, 8175, 56350, 63077, 12580, 62910, 64643, 64894, 90912, 47879, 7102, 44912, 78754, 393, 48860, 74927, 18130, 65931, 12427, 98438, 38750, 34006, 23405, 53342, 67419, 21387, 35200, 87327, 49655, 91222, 65662, 82590, 79718, 90392, 96338, 25400, 99481, 8560, 84885, 55055, 14577, 37835, 63004, 63500, 86837, 71110, 73208, 25034, 40070, 80931, 64407, 14782, 95180, 96856, 17590, 84313, 64648, 26387, 86295, 50400, 49390, 83510, 986, 21863, 14613, 71692, 51040, 59645, 53029, 15544, 98986, 25654, 1081, 43446, 43702, 69769, 26352, 34580, 88992, 94058, 15578, 83899, 90272, 53809, 41925, 66693, 1289, 10315, 95486, 61161, 46079, 6634, 11856, 6371, 9100, 68344, 22801, 47191, 4447, 20857, 9801, 40480, 12079, 52628, 85640, 87293, 51716, 999, 24163, 14807, 28207, 43126, 52869, 65474, 14997, 81255, 45599, 63665, 80731, 73722, 94807, 80880, 3381, 97725, 38644, 70600, 46459, 46294, 67961, 54999, 87124, 13141, 67070, 21924, 77813, 49755, 82275, 47909, 85506, 4268, 38485, 80522, 75754, 33200, 61383, 72259, 51530, 4967, 90324, 58640, 76797, 50012, 88253, 47844, 87848, 83022, 85223, 29494, 94223, 99883, 53227, 32490, 51201, 73387, 45727, 17430, 29832, 82858, 80893, 71181, 51500, 11167, 87609, 72509, 3728, 18557, 54255, 90444, 96015, 85139, 13460, 93524, 83339, 99968, 2087, 92215, 94982, 8623, 11615, 27179, 67850, 11756, 31920, 18163, 16812, 11247, 29596, 41964, 96565, 43996, 77239, 77509, 44758, 50508, 16950, 98653, 72805, 36292, 12670, 92821, 53850, 56246, 54647, 77468, 75152, 6436, 87187, 71169, 15422, 17009, 52238, 87505, 68725, 26227, 72728, 53146, 41631, 25105, 77443, 68974, 52476, 48166, 47779, 50677, 20692, 7880, 61864, 34088, 60133, 41437, 55367, 46275, 23318, 48645, 70033, 44217, 10650, 22615, 97260, 92386, 11142, 24153, 86395, 43269, 58430, 12587, 98884, 13115, 1732, 79719, 12360, 15673, 11978, 39521, 87707, 82002, 43458, 8212, 81585, 66882, 30891, 87261, 43367, 57909, 23374, 43201, 53391, 78490, 79396, 28536, 39976, 63069, 16221, 41024, 86386, 54200, 26067, 22446, 75686, 66190, 30131, 62775, 93500, 41646, 95635, 25643, 24639, 22414, 82100, 81326, 65983, 7766, 86855, 76471, 5601, 70972, 39764, 5550, 83539, 56159, 43955, 31177, 29628, 92775, 42367, 13709, 78568, 41300, 80360, 39090, 98383, 46739, 71065, 32666, 95649, 42389, 76750, 39995, 33151, 43330, 23628, 42586, 14028, 54522, 12655, 16254, 34766, 72370, 48312, 98640, 44272, 4522, 38669, 30585, 32559, 94281, 71295, 93599, 88157, 31075, 39763, 68010, 94591, 55664, 77959, 76536, 39615, 89655, 84566, 31081, 92213, 31675, 33669, 40065, 64642, 80585, 37625, 37000, 5294, 37817, 61542, 89690, 34470, 40375, 21800, 14488, 62178, 61100, 9218, 23682, 59451, 40498, 71773, 10221, 25952, 87035, 65405, 88101, 86290, 61396, 54253, 22847, 44949, 24796, 93778, 29306, 2869, 22965, 65744, 59414, 9767, 6892, 78130, 23037, 92176, 34115, 41613, 3580, 65131, 13912, 38318, 39166, 95458, 43981, 72874, 73959, 98099, 90630, 57035, 47691, 63080, 59188, 46914, 449, 59805, 1447, 67614, 34508, 26067, 25377, 89134, 31641, 41407, 19085, 42765, 80883, 2320, 73553, 84011, 54206, 24129, 48082, 37053, 616, 5950, 81001, 98675, 44898, 29759, 85328, 2981, 536, 56849, 52899, 58067, 84439, 4172, 63429, 82804, 38730, 56200, 57820, 48005, 81869, 12535, 97007, 25740, 44119, 12750, 5922, 23969, 55452, 2895, 47075, 43920, 76755, 4594, 30507, 55865, 84997, 3575, 91072, 23692, 19854, 6187, 72222, 93149, 77555, 62335, 95261, 61825, 11542, 51371, 57982, 33050, 96787, 18601, 61581, 17037, 61449, 50415, 22882, 37909, 59830, 13436, 65321, 62770, 2695, 840, 57858, 39632, 40356, 28365, 53523, 14744, 73092, 26365, 45022, 76563, 50673, 41744, 19453, 74482, 85411, 68358, 89940, 40383, 28214, 46781, 37649, 15310, 66661, 42462, 94985, 95660, 65403, 26552, 71235, 69945, 90705, 54601, 17070, 26836, 2341, 31349, 92822, 66099, 90415, 63863, 8446, 22655, 60942, 11862, 55395, 83805, 72420, 22513, 86030, 27710, 88509, 28652, 5538, 73591, 7292, 55631, 60272, 65932, 24672, 43095, 86669, 74412, 10969, 74893, 32085, 44522, 21400, 70341, 97028, 69027, 56315, 87581, 76370, 10442, 99310, 76841, 28276, 21804, 4836, 31010, 32045, 29193, 94499, 84789, 90503, 23763, 75926, 21054, 2791, 95481, 53499, 10606, 86553, 70088, 42015, 24793, 85415, 91783, 98878, 7305, 91634, 45620, 2815, 81356, 17047, 96475, 33439, 75411, 91410, 76269, 60559, 16794, 68054, 34657, 44435, 23604, 41400, 78936, 13719, 98079, 36790, 16872, 54376, 15805, 63897, 54530, 67677, 51808, 15605, 72991, 37870, 25210, 35683, 7375, 22680, 53170, 26250, 57266, 37597, 45522, 60512, 56930, 14416, 51830, 2898, 38807, 36050, 50289, 66165, 33255, 51682, 11345, 8350, 92767, 86645, 23439, 685, 18482, 37802, 78242, 72662, 58211, 41752, 81732, 53219, 26684, 69330, 58733, 67719, 67418, 48200, 16765, 83160, 25363, 29332, 84212, 60575, 20576, 24150, 21040, 85362, 90804, 54820, 50247, 83035, 65010, 30789, 87711, 99166, 2392, 87299, 29897, 82042, 58675, 5361, 93393, 49405, 75313, 51498, 81517, 24011, 71133, 24833, 58569, 11407, 34570, 47572, 26175, 65143, 61721, 20711, 47844, 87848, 83022, 85223, 29494, 94223, 99883, 53227, 32490, 51201, 73387, 45727, 17430, 29832, 82858, 80893, 71181, 51500, 11167, 87609, 72509, 3728, 18557, 54255, 90444, 96015, 85139, 13460, 93524, 83339, 99968, 2087, 92215, 94982, 8623, 11615, 27179, 67850, 11756, 31920, 18163, 16812, 11247, 29596, 41964, 96565, 43996, 77239, 77509, 44758, 50508, 16950, 98653, 72805, 36292, 12670, 92821, 53850, 56246, 54647, 77468, 75152, 6436, 87187, 71169, 15422, 17009, 52238, 87505, 68725, 26227, 72728, 53146, 41631, 25105, 77443, 68974, 52476, 48166, 47779, 50677, 20692, 7880, 61864, 34088, 60133, 41437, 55367, 46275, 23318, 48645, 70033, 44217, 10650, 22615, 97260, 92386, 11142, 24153, 86395, 43269, 58430, 12587, 98884, 13115, 1732, 79719, 12360, 15673, 11978, 39521, 87707, 82002, 43458, 8212, 81585, 66882, 30891, 87261, 43367, 57909, 23374, 43201, 53391, 78490, 79396, 28536, 39976, 63069, 16221, 41024, 86386, 54200, 26067, 22446, 75686, 66190, 30131, 62775, 93500, 41646, 76962, 80905, 23956, 51041, 57022, 95344, 27520, 69363, 41805, 49803, 72233, 7240, 39888, 92716, 70703, 27364, 38685, 51621, 65957, 51788, 28924, 43381, 6265, 83869, 68072, 40744, 33573, 81870, 10993, 1125, 23055, 69060, 67668, 37747, 98745, 99126, 64245, 16549, 41769, 33387, 45536, 67371, 35236, 57510, 110, 25736, 59713, 54163, 22693, 33660, 52797, 65560, 9031, 75080, 82186, 90507, 42989, 68405, 21727, 32495, 79055, 59804, 73520, 77990, 48688, 87612, 98204, 44825, 51565, 68604, 78200, 17118, 34942, 57714, 21064, 38353, 78621, 82893, 86952, 44929, 37488, 19796, 74236, 26269, 4560, 1730, 63574, 8463, 62702, 83723, 42661, 76942, 73651, 38285, 47698, 7328, 29397, 57131, 35660, 45255, 83604, 71641, 70041, 68297, 31146, 47820, 61460, 30887, 43335, 58991, 36501, 79282, 53117, 86442, 78478, 80679, 99133, 64067, 73985, 90193, 19387, 71079, 20145, 69342, 26014, 74351, 29045, 83200, 66276, 48928, 69302, 87035, 87312, 657, 24135, 38829, 19965, 60747, 83757, 21798, 41684, 98120, 99133, 70772, 67159, 5855, 3037, 60532, 33194, 38915, 67886, 58616, 40859, 44998, 65892, 42328, 71994, 46754, 40800, 99927, 45779, 5353, 24019, 22664, 9813, 71323, 93940, 36938, 33018, 85326, 23419, 99218, 11633, 98574, 79338, 95619, 99069, 84922, 55523, 23961, 44929, 56664, 27835, 8694, 74728, 85591, 62449, 60842, 74185, 75949, 30494, 59866, 8113, 22700, 97992, 33425, 61089, 18934, 96395, 46080, 98324, 66009, 16914, 7750, 10705, 25090, 6135, 65924, 2008, 63995, 14823, 52692, 16241, 77815, 24166, 66734, 58894, 53440, 71590, 14680, 34083, 84092, 32671, 33407, 72139, 50923, 21046, 71381, 22673, 22852, 40822, 49596, 30562, 96220, 7293, 11715, 42606, 24174, 44998, 24906, 2005, 86570, 3528, 58372, 17816, 11873, 85866, 6486, 17328, 28476, 10073, 31365, 41931, 34346, 86441, 79043, 74827, 23191, 83699, 12310, 16286, 93162, 81179, 18613, 21993, 85532, 40796, 95887, 97627, 65566, 66946, 39631, 74146, 88837, 96686, 66126, 19059, 86587, 28427, 87742, 76887, 71280, 44387, 74540, 35368, 92901, 3265, 80968, 5664, 26629, 47037, 72817, 90949, 61848, 7259, 23692, 76469, 65342, 7760, 97339, 43366, 13889, 52932, 11673, 40149, 87728, 76255, 93411, 74373, 72337, 66898, 7964, 77366, 54215, 53793, 37466, 26106, 5356, 62414, 2974, 46365, 57266, 51450, 97831, 62546, 7893, 38260, 40240, 59980, 60863, 43817, 75458, 72522, 42291, 31731, 34511, 53912, 32586, 24624, 59744, 82078, 7890, 90052, 22232, 42880, 51181, 80442, 69531, 41606, 97107, 11177, 99870, 39752, 56244, 11728, 7950, 50770, 49038, 51618, 74036, 3581, 70068, 22344, 67260, 33399, 94790, 63675, 60280, 38735, 11716, 99176, 40641, 6203, 67983, 3357, 37949, 11957, 45639, 60035, 16885, 98111, 17851, 9823, 32158, 55416, 78700, 59829, 12441, 17573, 92091, 70178, 56937, 42189, 57466, 91735, 13655, 77157, 51831, 10163, 86906, 96981, 19469, 58658, 92731, 32365, 45497, 12614, 73, 83068, 9370, 78417, 13533, 76677, 28329, 14878, 46551, 79059, 23502, 29793, 34313, 64039, 31132, 84966, 55221, 67949, 3705, 48079, 98230, 57727, 60564, 56011, 35537, 61129, 49646, 18541, 92255, 89915, 77846, 25687, 59299, 89632, 19859, 96804, 82916, 76215, 30253, 82279, 63053, 89466, 61775, 33613, 92624, 22298, 69328, 85387, 48817, 19223, 15765, 12170, 91021, 71946, 13446, 69681, 45186, 1241, 36855, 52381, 2543, 74650, 71518, 25917, 8869, 48942, 37774, 97596, 77575, 69840, 67239, 95682, 28660, 23533, 43940, 98617, 54564, 43049, 38099, 48005, 5362, 61955, 28251, 83772, 3280, 47498, 26786, 32314, 82081, 4124, 97859, 40710, 15413, 41046, 53094, 42901, 14242, 73716, 99813, 6122, 2426, 68889, 91016, 52167, 16231, 30480, 51621, 78597, 53701, 86323, 98186, 22649, 59465, 46343, 84299, 3590, 68779, 79416, 99655, 57427, 76890, 50561, 438, 35747, 3362, 20831, 79346, 60092, 71988, 9114, 33286, 76819, 94419, 18977, 54845, 53670, 59124, 70274, 60169, 64813, 43510, 63878, 13963, 74709, 7906, 1095, 53327, 62495, 48226, 47237, 4292, 47079, 55807, 54565, 80595, 75704, 25126, 33239, 12950, 81291, 58888, 21456, 50508, 19355, 85582, 80266, 78303, 76285, 24800, 97118, 12723, 18999, 62007, 14556, 82739, 31062, 53768, 84581, 65494, 4490, 21057, 6530, 55871, 63866, 48565, 80314, 77400, 85030, 46146, 46898, 26459, 16273, 69111, 29439, 51554, 56564, 19010, 64442, 84474, 5964, 25699, 70952, 2853, 7370, 57646, 87127, 6660, 14463, 31091, 83058, 91591, 94599, 94117, 87026, 40678, 84517, 52450, 25410, 3596, 96575, 58488, 57795, 27582, 25256, 86043, 11917, 8354, 62590, 58421, 6150, 60149, 58005, 96031, 94667, 26986, 22668, 19737, 28885, 15948, 27760, 55572, 92495, 87482, 42374, 27140, 2233, 37490, 39067, 80333, 21515, 82936, 18296, 59585, 70986, 99560, 66556, 59888, 91265, 91140, 25918, 1608, 38872, 81979, 17590, 98556, 30796, 18252, 18763, 41738, 90969, 28602, 92649, 64970, 53888, 8953, 73074, 62103, 74421, 75827, 23335, 7709, 61501, 72464, 19344, 28542, 1906, 87052, 79334, 52078, 24374, 67160, 26204, 18112, 64823, 18561, 91692, 50898, 56129, 96427, 4229, 63538, 70788, 21396, 3923, 50323, 52554, 41833, 38146, 7435, 86875, 77568, 91934, 58972, 25895, 37309, 43951, 51470, 28996, 77338, 72957, 51297, 46910, 25173, 64766, 55636, 5887, 6525, 10825, 51372, 8093, 48275, 81693, 47955, 18585, 15776, 10443, 82010, 62626, 74929, 89786, 83572, 53097, 11440, 62738, 28717, 10281, 14638, 79775, 35268, 24131, 85100, 33470, 85946, 76096, 95742, 75585, 51883, 77310, 29934, 9436, 70782, 3718, 55767, 53144, 84857, 20782, 43789, 18328, 71594, 22266, 87193, 15830, 75015, 40296, 48825, 79385, 59840, 1876, 427, 35130, 10974, 92902, 85806, 24605, 42887, 81585, 99778, 73204, 64960, 47918, 88858, 57139, 30298, 53483, 92811, 80723, 10123, 40249, 11684, 96496, 80282, 37481, 62339, 96442, 10639, 4038, 4419, 20424, 18801, 997, 29267, 61105, 40514, 16990, 43257, 2379, 13045, 48190, 27932, 70852, 29584, 89338, 54394, 77331, 76253, 38566, 1004, 25334, 7296, 34747, 72379, 37833, 96138, 35477, 90445, 23465, 67498, 3936, 77062, 47876, 76321, 79014, 61675, 83922, 19084, 97153, 62483, 93914, 71481, 26073, 79596, 45955, 46175, 60593, 68800, 49895, 83802, 1369, 3799, 40087, 42891, 12136, 66156, 66095, 60213, 61063, 71601, 89764, 24067, 56171, 86614, 28475, 41296, 52443, 68609, 34804, 79300, 20272, 8337, 73058, 46396, 17996, 92145, 79392, 98132, 21722, 481, 76874, 64971, 79591, 19398, 69827, 14399, 77235, 6374, 53308, 24177, 97892, 20694, 57530, 56894, 49747, 697, 63747, 38529, 63998, 18139, 66564, 5851, 46115, 64064, 27153, 39857, 31946, 44615, 52902, 86807, 95909, 21732, 38345, 47792, 28721, 26011, 91316, 91505, 12239, 60428, 81412, 99585, 19176, 41664, 11896, 81971, 91086, 20453, 40828, 5634, 34816, 32384, 91990, 63233, 86585, 49814, 52253, 72251, 35555, 12452, 91113, 11383, 43926, 32081, 80240, 52564, 85745, 31725, 91982, 38467, 42875, 3015, 63277, 69801, 66849, 75729, 57169, 10150, 4838, 41280, 59413, 45546, 28716, 74864, 69605, 12047, 45448, 45124, 60230, 97683, 96712, 71063, 3666, 28832, 46841, 18292, 87423, 60989, 473, 64744, 5811, 29602, 7164, 79730, 7914, 14873, 1616, 77836, 75918, 52045, 6879, 61904, 96004, 2856, 63645, 15118, 29743, 30891, 74661, 75831, 50827, 84519, 32006, 2487, 64458, 46146, 45345, 91037, 68596, 67836, 59300, 61942, 88785, 40476, 62827, 51067, 77488, 55561, 64545, 80680, 97953, 80622, 3805, 45988, 71981, 18210, 14839, 53428, 32112, 73536, 49977, 37145, 16394, 59927, 68647, 86773, 31647, 256, 94347, 64804, 78065, 26138, 13668, 12268, 33656, 4962, 36977, 31146, 31929, 31474, 53853, 9166, 61977, 26171, 45800, 16810, 18169, 94523, 86280, 11421, 48301, 47136, 26098, 10283, 20996, 98919, 59800, 50669, 69596, 24913, 80422, 85617, 57049, 61275, 35797, 32992, 5693, 88361, 8533, 36001, 99290, 9394, 80511, 32990, 97698, 88419, 89259, 3437, 13744, 80660, 30829, 16837, 78571, 47831, 13046, 49779, 88877, 27375, 1893, 37025, 74550, 74234, 10049, 77233, 4182, 23252, 10913, 39740, 95770, 11197, 11329, 36528, 95976, 28598, 34981, 77381, 63910, 92865, 48457, 7554, 73280, 35336, 77711, 30325, 52498, 9998, 23982, 26676, 17175, 52034, 844, 89433, 33563, 57868, 72222, 62386, 69285, 87844, 63097, 28438, 6508, 24724, 18012, 54884, 65945, 55261, 75991, 9012, 88195, 34295, 63187, 91751, 57063, 66957, 59569, 39943, 73170, 45052, 13832, 17216, 6400, 4840, 66606, 49376, 59800, 53951, 3549, 66214, 30770, 54599, 58891, 97657, 93223, 60874, 58442, 1299, 49186, 46687, 14740, 84457, 36447, 13646, 47067, 19131, 43014, 20775, 18619, 62199, 38475, 65220, 51527, 97556, 8794, 77393, 1508, 56259, 90240, 18194, 54099, 35754, 32039, 42360, 46373, 39674, 38630, 89318, 39473, 79052, 15361, 22269, 61834, 28902, 8292, 78181, 38151, 36150, 92007, 93324, 52373, 70601, 44698, 99832, 1254, 89462, 61845, 81956, 97000, 80506, 27479, 80673, 42383, 49500, 46105, 48167, 67379, 91147, 56939, 40861, 18129, 89583, 14578, 37908, 39144, 99390, 3668, 15986, 8391, 244, 31036, 74888, 59029, 11995, 74736, 3307, 60945, 54127, 87722, 28438, 87660, 65443, 89176, 17085, 17622, 56582, 85637, 80134, 11708, 39806, 32536, 16001, 79226, 72915, 82716, 68090, 45029, 60925, 11879, 17625, 73400, 64631, 39412, 65240, 20647, 73094, 88420, 60434, 9244, 65072, 6893, 70916, 95449, 25188, 93460, 3003, 73937, 89549, 39432, 72713, 11830, 30779, 75085, 28819, 22180, 15106, 27913, 26964, 32588, 90232, 72049, 36620, 60856, 58817, 5526, 26087, 18017, 16189, 14444, 3616, 85973, 10120, 65055, 9707, 14206, 68594, 16363, 8162, 71209, 31418, 21487, 2636, 72880, 67178, 27891, 23978, 93454, 17656, 86675, 48479, 92540, 49220, 7310, 21495, 90416, 10365, 79406, 12781, 95329, 23204, 17066, 52915, 47384, 24595, 94838, 62782, 83599, 75788, 68288, 79882, 63244, 4128, 27982, 68721, 26134, 7801, 96843, 106, 42986, 30089, 82264, 97132, 52823, 94725, 40279, 65020, 75526, 71913, 29749, 88459, 28029, 75651, 74219, 26375, 26805, 62280, 81549, 78683, 23447, 55703, 84742, 94637, 67996, 21073, 1607, 10407, 68235, 17584, 99926, 13387, 43893, 80040, 44805, 99440, 78390, 30990, 21267, 34445, 45979, 67529, 33810, 92925, 8733, 24970, 46573, 96045, 4849, 52110, 59314, 13461, 40250, 43948, 85734, 96617, 67208, 64844, 18417, 11907, 17902, 79590, 27740, 35195, 84736, 45302, 85958, 88766, 18891, 35738, 23764, 60562, 85913, 34683, 11971, 74516, 76123, 59494, 52621, 12550, 59190, 12004, 51987, 26724, 7718, 73374, 52872, 13905, 27893, 8447, 18586, 82508, 88298, 57070, 59316, 95585, 30816, 3493, 35411, 3021, 13485, 52554, 8495, 55201, 2415, 66448, 80059, 77961, 11893, 91274, 68452, 46725, 79805, 86226, 86967, 38150, 59482, 56692, 78000, 67548, 26693, 3490, 37710, 41331, 20516, 80665, 50219, 35570, 2133, 88570, 42987, 83139, 55436, 60816, 36031, 31323, 80837, 24711, 16420, 93214, 78957, 32638, 15201, 96164, 65588, 96798, 97839, 44750, 94196, 14328, 47762, 63817, 83352, 1269, 4849, 45995, 24908, 85925, 16924, 74102, 1908, 6362, 38698, 98958, 11840, 5241, 32201, 92441, 60239, 32570, 42804, 47661, 28458, 68217, 74407, 5804, 33613, 94152, 47704, 5306, 62164, 72838, 13546, 75077, 82958, 80980, 6072, 20491, 86747, 68944, 79189, 7807, 95499, 79352, 26397, 92539, 58144, 6162, 27329, 51429, 48688, 33920, 75050, 40606, 61963, 18741, 83334, 96829, 64933, 64222, 24594, 96616, 90454, 33216, 13736, 42498, 11827, 29682, 41921, 60039, 27508, 93878, 20966, 77823, 75437, 51708, 84210, 70177, 34352, 54194, 97118, 58900, 43544, 8017, 88870, 83048, 99700, 86076, 39109, 48479, 11168, 38154, 62174, 5431, 3786, 47351, 53632, 71574, 88206, 27442, 55838, 15541, 63473, 77738, 21927, 80182, 58709, 46786, 12876, 6655, 99248, 32507, 78187, 41485, 32894, 67646, 40866, 99306, 56717, 67905, 79628, 12865, 63614, 91013, 60150, 37386, 65106, 46381, 85177, 51340, 32065, 84844, 64015, 87087, 79682, 85008, 37876, 35475, 25632, 52850, 61997, 76257, 43954, 50761, 67536, 80723, 77927, 2661, 15155, 77657, 3593, 81355, 4102, 84638, 71882, 83031, 95460, 42784, 63678, 9544, 85828, 54010, 58874, 64919, 12564, 47384, 81973, 40240, 71779, 48383, 65874, 40556, 51234, 37696, 69073, 43850, 5778, 91580, 26466, 52669, 20001, 92050, 53541, 16162, 23529, 1049, 89024, 6925, 6069, 69418, 451, 50028, 90506, 48775, 58300, 82502, 38764, 14646, 44213, 76290, 55807, 70001, 75518, 71754, 4642, 97551, 45581, 77299, 21622, 60579, 72692, 72049, 74527, 69585, 65495, 95447, 11568, 12889, 3389, 96338, 80305, 92030, 61354, 13332, 66273, 40506, 83925, 66927, 45431, 45445, 1729, 41411, 96866, 14124, 59253, 89318, 63576, 89049, 47045, 49906, 93341, 2984, 37907, 25389, 39578, 3624, 61653, 51088, 50903, 32790, 1431, 44828, 63922, 53775, 37316, 64257, 51923, 84668, 27953, 90068, 82561, 68082, 72168, 9409, 52298, 77677, 40755, 35513, 80148, 97560, 58556, 70591, 95739, 92720, 85183, 75038, 71874, 52329, 69385, 42862, 40959, 99787, 52137, 69915, 74246, 92066, 87625, 72619, 92847, 2248, 33901, 208, 33719, 58564, 8222, 71634, 26420, 52396, 54012, 5300, 16589, 2637, 35734, 3920, 50109, 44235, 1559, 23003, 2271, 9358, 31378, 47538, 21280, 45413, 51245, 10666, 56229, 44412, 31179, 45290, 84679, 12954, 79401, 64806, 22896, 65896, 25672, 1800, 89945, 12686, 32127, 27772, 57154, 70847, 88469, 37668, 29695, 15492, 65579, 18336, 68571, 42712, 28753, 20281, 8419, 71603, 32042, 90866, 84721, 86973, 7050, 66273, 3943, 85971, 19074, 55091, 8267, 83961, 26107, 95733, 54709, 73230, 21540, 52033, 70427, 64500, 9164, 88587, 75285, 20792, 23180, 98820, 10989, 46796, 82518, 21555, 52066, 34023, 23403, 56977, 966, 52156, 54676, 99185, 12249, 99413, 87070, 76560, 47002, 27680, 72000, 6739, 37146, 65386, 27491, 53723, 99431, 96030, 21967, 42277, 91223, 31224, 81950, 22404, 7933, 51781, 54080, 7418, 73011, 16478, 21599, 87769, 80715, 98835, 92890, 89473, 7955, 35302, 96051, 74558, 66269, 33687, 71261, 97418, 96997, 20754, 85090, 1608, 58565, 34416, 23635, 21162, 79088, 83103, 69957, 15058, 83498, 96418, 9157, 27083, 52076, 72901, 45480, 5851, 72370, 72604, 65424, 87075, 19782, 27670, 15784, 20325, 68927, 26844, 81235, 36078, 21863, 29413, 66570, 43476, 47239, 62200, 80677, 96631, 79684, 71575]
Tree:
(<start> (<if_expr> (<expr> (<if_expr> (<expr> (<action> 'LINKS'))  if  (<direction_compound_expr> (<bool_expr> (<bool_expr> (<bool_expr> (<bool_term> (<bool_factor> (  (<bool_expr> (<bool_expr> (<bool_term> (<bool_term> (<bool_factor> not  (<bool_factor> (<compare> (<arith_expr> hypot(  (<arith_expr> p_div(  (<arith_expr> hypot(  (<arith_expr> hypot(  (<arith_expr> (<number> (<maybe_sign> -) (<digit> 2) . (<digit> 2) (<digit> 0)))  ,  (<arith_expr> (  (<arith_expr> (<numeric_feature> intersect_centers_x))   (<math_op> *)   (<arith_expr> (<numeric_feature> obstacle_y))  ))  ))  ,  (<arith_expr> (  (<arith_expr> p_div(  (<arith_expr> (<numeric_feature> intersect_radius))  ,  (<arith_expr> (<numeric_feature> velocity_x))  ))   (<math_op> +)   (<arith_expr> p_div(  (<arith_expr> (<numeric_feature> intersect_centers_y))  ,  (<arith_expr> (<numeric_feature> obstacle_x))  ))  ))  ))  ,  (<arith_expr> (<numeric_feature> intersect_radius))  ))  ,  (<arith_expr> hypot(  (<arith_expr> p_div(  (<arith_expr> (<number> (<maybe_sign> ) (<digit> 7) . (<digit> 3) (<digit> 1)))  ,  (<arith_expr> hypot(  (<arith_expr> (<number> (<maybe_sign> ) (<digit> 2) . (<digit> 6) (<digit> 0)))  ,  (<arith_expr> (<numeric_feature> intersect_centers_y))  ))  ))  ,  (<arith_expr> (<numeric_feature> intersect_centers_y))  ))  ))   (<comp_op> <=)   (<arith_expr> (<number> (<maybe_sign> -) (<digit> 5) . (<digit> 5) (<digit> 9)))))))  and  (<bool_factor> not  (<bool_factor> (<compare> (<arith_expr> p_div(  (<arith_expr> p_div(  (<arith_expr> (  (<arith_expr> (<number> (<maybe_sign> -) (<digit> 0) . (<digit> 4) (<digit> 0)))   (<math_op> +)   (<arith_expr> (  (<arith_expr> (<numeric_feature> velocity_y))   (<math_op> +)   (<arith_expr> (<number> (<maybe_sign> ) (<digit> 7) . (<digit> 1) (<digit> 8)))  ))  ))  ,  (<arith_expr> hypot(  (<arith_expr> (  (<arith_expr> hypot(  (<arith_expr> (<numeric_feature> obstacle_y))  ,  (<arith_expr> p_div(  (<arith_expr> (<numeric_feature> intersect_centers_y))  ,  (<arith_expr> (<numeric_feature> velocity_y))  ))  ))   (<math_op> *)   (<arith_expr> (  (<arith_expr> p_div(  (<arith_expr> (<numeric_feature> obstacle_x))  ,  (<arith_expr> (<numeric_feature> obstacle_x))  ))   (<math_op> -)   (<arith_expr> (<numeric_feature> obstacle_y))  ))  ))  ,  (<arith_expr> (<number> (<maybe_sign> ) (<digit> 5) . (<digit> 5) (<digit> 4)))  ))  ))  ,  (<arith_expr> (  (<arith_expr> (<numeric_feature> obstacle_x))   (<math_op> -)   (<arith_expr> (  (<arith_expr> p_div(  (<arith_expr> (<number> (<maybe_sign> -) (<digit> 9) . (<digit> 4) (<digit> 1)))  ,  (<arith_expr> p_div(  (<arith_expr> hypot(  (<arith_expr> (<numeric_feature> obstacle_x))  ,  (<arith_expr> (<numeric_feature> intersect_centers_x))  ))  ,  (<arith_expr> (<numeric_feature> obstacle_y))  ))  ))   (<math_op> +)   (<arith_expr> (  (<arith_expr> (<numeric_feature> intersect_centers_x))   (<math_op> +)   (<arith_expr> (<numeric_feature> obstacle_y))  ))  ))  ))  ))   (<comp_op> <=)   (<arith_expr> p_div(  (<arith_expr> (  (<arith_expr> (  (<arith_expr> p_div(  (<arith_expr> (<number> (<maybe_sign> ) (<digit> 5) . (<digit> 0) (<digit> 9)))  ,  (<arith_expr> (  (<arith_expr> (<numeric_feature> obstacle_x))   (<math_op> -)   (<arith_expr> (<numeric_feature> intersect_centers_x))  ))  ))   (<math_op> +)   (<arith_expr> p_div(  (<arith_expr> hypot(  (<arith_expr> (<numeric_feature> obstacle_y))  ,  (<arith_expr> (<numeric_feature> velocity_x))  ))  ,  (<arith_expr> hypot(  (<arith_expr> (<numeric_feature> velocity_x))  ,  (<arith_expr> (<numeric_feature> intersect_centers_x))  ))  ))  ))   (<math_op> -)   (<arith_expr> (  (<arith_expr> hypot(  (<arith_expr> (  (<arith_expr> (<numeric_feature> velocity_x))   (<math_op> +)   (<arith_expr> (<numeric_feature> intersect_centers_x))  ))  ,  (<arith_expr> (<numeric_feature> velocity_x))  ))   (<math_op> +)   (<arith_expr> p_div(  (<arith_expr> (<numeric_feature> velocity_x))  ,  (<arith_expr> hypot(  (<arith_expr> (<numeric_feature> velocity_x))  ,  (<arith_expr> (<numeric_feature> obstacle_y))  ))  ))  ))  ))  ,  (<arith_expr> hypot(  (<arith_expr> p_div(  (<arith_expr> hypot(  (<arith_expr> hypot(  (<arith_expr> (<numeric_feature> intersect_centers_x))  ,  (<arith_expr> (<number> (<maybe_sign> -) (<digit> 1) . (<digit> 6) (<digit> 4)))  ))  ,  (<arith_expr> (<number> (<maybe_sign> ) (<digit> 8) . (<digit> 2) (<digit> 7)))  ))  ,  (<arith_expr> (<number> (<maybe_sign> ) (<digit> 2) . (<digit> 0) (<digit> 1)))  ))  ,  (<arith_expr> hypot(  (<arith_expr> (<numeric_feature> intersect_centers_y))  ,  (<arith_expr> (  (<arith_expr> (  (<arith_expr> (<numeric_feature> obstacle_x))   (<math_op> -)   (<arith_expr> (<numeric_feature> velocity_x))  ))   (<math_op> +)   (<arith_expr> (  (<arith_expr> hypot(  (<arith_expr> (<numeric_feature> obstacle_x))  ,  (<arith_expr> (<numeric_feature> obstacle_x))  ))   (<math_op> *)   (<arith_expr> hypot(  (<arith_expr> (<numeric_feature> obstacle_x))  ,  (<arith_expr> (<numeric_feature> velocity_y))  ))  ))  ))  ))  ))  )))))))  or  (<bool_term> (<bool_term> (<bool_factor> (<compare> (<arith_expr> hypot(  (<arith_expr> hypot(  (<arith_expr> p_div(  (<arith_expr> (  (<arith_expr> (<number> (<maybe_sign> -) (<digit> 0) . (<digit> 1) (<digit> 8)))   (<math_op> -)   (<arith_expr> (  (<arith_expr> (  (<arith_expr> hypot(  (<arith_expr> (<numeric_feature> velocity_y))  ,  (<arith_expr> (<numeric_feature> velocity_y))  ))   (<math_op> -)   (<arith_expr> p_div(  (<arith_expr> (<numeric_feature> obstacle_y))  ,  (<arith_expr> (<numeric_feature> intersect_centers_y))  ))  ))   (<math_op> -)   (<arith_expr> hypot(  (<arith_expr> p_div(  (<arith_expr> (<numeric_feature> obstacle_y))  ,  (<arith_expr> (<numeric_feature> obstacle_x))  ))  ,  (<arith_expr> (<numeric_feature> velocity_y))  ))  ))  ))  ,  (<arith_expr> (<numeric_feature> intersect_centers_x))  ))  ,  (<arith_expr> (  (<arith_expr> (<number> (<maybe_sign> ) (<digit> 4) . (<digit> 2) (<digit> 2)))   (<math_op> +)   (<arith_expr> (<number> (<maybe_sign> -) (<digit> 3) . (<digit> 2) (<digit> 3)))  ))  ))  ,  (<arith_expr> (<number> (<maybe_sign> ) (<digit> 8) . (<digit> 0) (<digit> 4)))  ))   (<comp_op> ==)   (<arith_expr> (  (<arith_expr> (  (<arith_expr> (  (<arith_expr> p_div(  (<arith_expr> hypot(  (<arith_expr> (<numeric_feature> velocity_x))  ,  (<arith_expr> (<number> (<maybe_sign> -) (<digit> 4) . (<digit> 5) (<digit> 3)))  ))  ,  (<arith_expr> p_div(  (<arith_expr> (<numeric_feature> velocity_y))  ,  (<arith_expr> (<numeric_feature> velocity_x))  ))  ))   (<math_op> *)   (<arith_expr> (  (<arith_expr> p_div(  (<arith_expr> (<numeric_feature> velocity_y))  ,  (<arith_expr> p_div(  (<arith_expr> (<number> (<maybe_sign> ) (<digit> 6) . (<digit> 9) (<digit> 4)))  ,  (<arith_expr> (<numeric_feature> velocity_y))  ))  ))   (<math_op> -)   (<arith_expr> p_div(  (<arith_expr> (<numeric_feature> intersect_radius))  ,  (<arith_expr> p_div(  (<arith_expr> hypot(  (<arith_expr> (<numeric_feature> obstacle_x))  ,  (<arith_expr> (<numeric_feature> obstacle_y))  ))  ,  (<arith_expr> (<number> (<maybe_sign> ) (<digit> 4) . (<digit> 7) (<digit> 5)))  ))  ))  ))  ))   (<math_op> +)   (<arith_expr> (  (<arith_expr> p_div(  (<arith_expr> (  (<arith_expr> hypot(  (<arith_expr> (<number> (<maybe_sign> ) (<digit> 8) . (<digit> 3) (<digit> 8)))  ,  (<arith_expr> p_div(  (<arith_expr> (<numeric_feature> velocity_y))  ,  (<arith_expr> (<numeric_feature> intersect_radius))  ))  ))   (<math_op> +)   (<arith_expr> (  (<arith_expr> hypot(  (<arith_expr> (<numeric_feature> velocity_x))  ,  (<arith_expr> (<numeric_feature> velocity_y))  ))   (<math_op> +)   (<arith_expr> (<numeric_feature> obstacle_y))  ))  ))  ,  (<arith_expr> p_div(  (<arith_expr> hypot(  (<arith_expr> (  (<arith_expr> (<numeric_feature> intersect_centers_y))   (<math_op> *)   (<arith_expr> (<numeric_feature> intersect_centers_y))  ))  ,  (<arith_expr> (<numeric_feature> intersect_centers_y))  ))  ,  (<arith_expr> hypot(  (<arith_expr> p_div(  (<arith_expr> (<numeric_feature> intersect_radius))  ,  (<arith_expr> (<numeric_feature> obstacle_y))  ))  ,  (<arith_expr> (<number> (<maybe_sign> -) (<digit> 1) . (<digit> 8) (<digit> 1)))  ))  ))  ))   (<math_op> -)   (<arith_expr> (  (<arith_expr> (  (<arith_expr> hypot(  (<arith_expr> (  (<arith_expr> (<numeric_feature> intersect_centers_y))   (<math_op> -)   (<arith_expr> (<numeric_feature> obstacle_y))  ))  ,  (<arith_expr> (  (<arith_expr> (<numeric_feature> intersect_centers_x))   (<math_op> -)   (<arith_expr> (<numeric_feature> obstacle_x))  ))  ))   (<math_op> -)   (<arith_expr> (<number> (<maybe_sign> ) (<digit> 8) . (<digit> 6) (<digit> 8)))  ))   (<math_op> +)   (<arith_expr> hypot(  (<arith_expr> (<number> (<maybe_sign> ) (<digit> 7) . (<digit> 1) (<digit> 0)))  ,  (<arith_expr> hypot(  (<arith_expr> (  (<arith_expr> (<numeric_feature> obstacle_y))   (<math_op> *)   (<arith_expr> (<numeric_feature> velocity_y))  ))  ,  (<arith_expr> (<number> (<maybe_sign> ) (<digit> 0) . (<digit> 4) (<digit> 5)))  ))  ))  ))  ))  ))   (<math_op> -)   (<arith_expr> p_div(  (<arith_expr> hypot(  (<arith_expr> (<numeric_feature> intersect_radius))  ,  (<arith_expr> (<number> (<maybe_sign> -) (<digit> 1) . (<digit> 0) (<digit> 4)))  ))  ,  (<arith_expr> hypot(  (<arith_expr> p_div(  (<arith_expr> p_div(  (<arith_expr> hypot(  (<arith_expr> p_div(  (<arith_expr> (<numeric_feature> intersect_centers_y))  ,  (<arith_expr> (<numeric_feature> velocity_y))  ))  ,  (<arith_expr> hypot(  (<arith_expr> (<numeric_feature> velocity_x))  ,  (<arith_expr> (<numeric_feature> obstacle_y))  ))  ))  ,  (<arith_expr> hypot(  (<arith_expr> (<numeric_feature> velocity_y))  ,  (<arith_expr> (<numeric_feature> intersect_radius))  ))  ))  ,  (<arith_expr> (<numeric_feature> obstacle_x))  ))  ,  (<arith_expr> (  (<arith_expr> (<numeric_feature> intersect_centers_y))   (<math_op> *)   (<arith_expr> (  (<arith_expr> (  (<arith_expr> (<number> (<maybe_sign> -) (<digit> 2) . (<digit> 5) (<digit> 6)))   (<math_op> -)   (<arith_expr> p_div(  (<arith_expr> (<numeric_feature> intersect_centers_x))  ,  (<arith_expr> (<numeric_feature> intersect_centers_x))  ))  ))   (<math_op> -)   (<arith_expr> (<number> (<maybe_sign> ) (<digit> 5) . (<digit> 0) (<digit> 7)))  ))  ))  ))  ))  )))))  and  (<bool_factor> not  (<bool_factor> (<compare> (<arith_expr> (  (<arith_expr> p_div(  (<arith_expr> (  (<arith_expr> p_div(  (<arith_expr> p_div(  (<arith_expr> (  (<arith_expr> hypot(  (<arith_expr> (<numeric_feature> velocity_y))  ,  (<arith_expr> (<numeric_feature> velocity_x))  ))   (<math_op> -)   (<arith_expr> hypot(  (<arith_expr> (<numeric_feature> intersect_centers_x))  ,  (<arith_expr> (<numeric_feature> intersect_radius))  ))  ))  ,  (<arith_expr> (  (<arith_expr> p_div(  (<arith_expr> (<numeric_feature> intersect_radius))  ,  (<arith_expr> (<numeric_feature> velocity_x))  ))   (<math_op> -)   (<arith_expr> (<numeric_feature> intersect_radius))  ))  ))  ,  (<arith_expr> p_div(  (<arith_expr> hypot(  (<arith_expr> (<numeric_feature> obstacle_y))  ,  (<arith_expr> (<numeric_feature> obstacle_x))  ))  ,  (<arith_expr> (<numeric_feature> obstacle_x))  ))  ))   (<math_op> *)   (<arith_expr> (  (<arith_expr> (<numeric_feature> intersect_radius))   (<math_op> -)   (<arith_expr> hypot(  (<arith_expr> (  (<arith_expr> (<numeric_feature> obstacle_y))   (<math_op> +)   (<arith_expr> p_div(  (<arith_expr> (<numeric_feature> obstacle_y))  ,  (<arith_expr> (<numeric_feature> velocity_x))  ))  ))  ,  (<arith_expr> hypot(  (<arith_expr> p_div(  (<arith_expr> (<numeric_feature> intersect_centers_y))  ,  (<arith_expr> (<numeric_feature> intersect_centers_x))  ))  ,  (<arith_expr> (<number> (<maybe_sign> -) (<digit> 2) . (<digit> 0) (<digit> 5)))  ))  ))  ))  ))  ,  (<arith_expr> (  (<arith_expr> (  (<arith_expr> (<number> (<maybe_sign> -) (<digit> 6) . (<digit> 2) (<digit> 9)))   (<math_op> +)   (<arith_expr> (<numeric_feature> intersect_centers_y))  ))   (<math_op> *)   (<arith_expr> (<numeric_feature> velocity_x))  ))  ))   (<math_op> -)   (<arith_expr> (  (<arith_expr> (  (<arith_expr> (<number> (<maybe_sign> ) (<digit> 1) . (<digit> 0) (<digit> 4)))   (<math_op> *)   (<arith_expr> (<numeric_feature> obstacle_y))  ))   (<math_op> *)   (<arith_expr> (<number> (<maybe_sign> -) (<digit> 2) . (<digit> 4) (<digit> 0)))  ))  ))   (<comp_op> <=)   (<arith_expr> (  (<arith_expr> (<numeric_feature> obstacle_y))   (<math_op> +)   (<arith_expr> (<numeric_feature> intersect_centers_x))  )))))))  ))))  or  (<bool_term> (<bool_factor> (  (<bool_expr> (<bool_term> (<bool_factor> (<compare> (<arith_expr> (  (<arith_expr> hypot(  (<arith_expr> hypot(  (<arith_expr> p_div(  (<arith_expr> (<numeric_feature> obstacle_x))  ,  (<arith_expr> p_div(  (<arith_expr> p_div(  (<arith_expr> (<numeric_feature> velocity_x))  ,  (<arith_expr> hypot(  (<arith_expr> hypot(  (<arith_expr> (<number> (<maybe_sign> -) (<digit> 9) . (<digit> 9) (<digit> 8)))  ,  (<arith_expr> p_div(  (<arith_expr> (<numeric_feature> obstacle_y))  ,  (<arith_expr> (<numeric_feature> velocity_x))  ))  ))  ,  (<arith_expr> (<numeric_feature> obstacle_y))  ))  ))  ,  (<arith_expr> (  (<arith_expr> hypot(  (<arith_expr> p_div(  (<arith_expr> (<numeric_feature> velocity_y))  ,  (<arith_expr> hypot(  (<arith_expr> (<numeric_feature> velocity_x))  ,  (<arith_expr> (<numeric_feature> obstacle_x))  ))  ))  ,  (<arith_expr> (<numeric_feature> velocity_x))  ))   (<math_op> +)   (<arith_expr> p_div(  (<arith_expr> (<number> (<maybe_sign> -) (<digit> 6) . (<digit> 9) (<digit> 9)))  ,  (<arith_expr> hypot(  (<arith_expr> hypot(  (<arith_expr> (<numeric_feature> intersect_radius))  ,  (<arith_expr> (<numeric_feature> obstacle_y))  ))  ,  (<arith_expr> (<numeric_feature> intersect_centers_y))  ))  ))  ))  ))  ))  ,  (<arith_expr> (<numeric_feature> intersect_centers_y))  ))  ,  (<arith_expr> p_div(  (<arith_expr> hypot(  (<arith_expr> p_div(  (<arith_expr> (<number> (<maybe_sign> -) (<digit> 2) . (<digit> 9) (<digit> 8)))  ,  (<arith_expr> (<numeric_feature> velocity_y))  ))  ,  (<arith_expr> p_div(  (<arith_expr> hypot(  (<arith_expr> (<number> (<maybe_sign> -) (<digit> 3) . (<digit> 4) (<digit> 6)))  ,  (<arith_expr> (<number> (<maybe_sign> -) (<digit> 2) . (<digit> 0) (<digit> 4)))  ))  ,  (<arith_expr> hypot(  (<arith_expr> hypot(  (<arith_expr> p_div(  (<arith_expr> p_div(  (<arith_expr> (<numeric_feature> intersect_centers_y))  ,  (<arith_expr> (<numeric_feature> velocity_x))  ))  ,  (<arith_expr> p_div(  (<arith_expr> (<numeric_feature> velocity_x))  ,  (<arith_expr> (<numeric_feature> intersect_centers_x))  ))  ))  ,  (<arith_expr> p_div(  (<arith_expr> hypot(  (<arith_expr> (<numeric_feature> intersect_radius))  ,  (<arith_expr> (<numeric_feature> intersect_centers_y))  ))  ,  (<arith_expr> (  (<arith_expr> (<numeric_feature> obstacle_x))   (<math_op> +)   (<arith_expr> (<numeric_feature> velocity_y))  ))  ))  ))  ,  (<arith_expr> hypot(  (<arith_expr> (<number> (<maybe_sign> ) (<digit> 8) . (<digit> 2) (<digit> 5)))  ,  (<arith_expr> p_div(  (<arith_expr> (<number> (<maybe_sign> -) (<digit> 9) . (<digit> 4) (<digit> 1)))  ,  (<arith_expr> (<number> (<maybe_sign> ) (<digit> 6) . (<digit> 6) (<digit> 9)))  ))  ))  ))  ))  ))  ,  (<arith_expr> (<number> (<maybe_sign> ) (<digit> 0) . (<digit> 7) (<digit> 6)))  ))  ))   (<math_op> *)   (<arith_expr> (<numeric_feature> obstacle_x))  ))   (<comp_op> <=)   (<arith_expr> (<numeric_feature> obstacle_x))))))  ))))  or  (<bool_term> (<bool_term> (<bool_term> (<bool_term> (<bool_factor> (  (<bool_expr> (<bool_term> (<bool_term> (<bool_factor> (  (<bool_expr> (<bool_expr> (<bool_expr> (<bool_term> (<bool_factor> (<compare> (<arith_expr> (  (<arith_expr> (<numeric_feature> velocity_y))   (<math_op> +)   (<arith_expr> (<numeric_feature> obstacle_x))  ))   (<comp_op> !=)   (<arith_expr> hypot(  (<arith_expr> (<numeric_feature> intersect_centers_x))  ,  (<arith_expr> (<numeric_feature> velocity_x))  ))))))  or  (<bool_term> (<bool_term> (<bool_term> (<bool_factor> (<compare> (<arith_expr> (<numeric_feature> obstacle_y))   (<comp_op> <)   (<arith_expr> (<numeric_feature> obstacle_x)))))  and  (<bool_factor> not  (<bool_factor> (<compare> (<arith_expr> (<numeric_feature> intersect_centers_x))   (<comp_op> >=)   (<arith_expr> (<numeric_feature> velocity_x))))))  and  (<bool_factor> (<compare> (<arith_expr> p_div(  (<arith_expr> (  (<arith_expr> (<numeric_feature> intersect_radius))   (<math_op> +)   (<arith_expr> (<numeric_feature> intersect_radius))  ))  ,  (<arith_expr> p_div(  (<arith_expr> (<numeric_feature> obstacle_x))  ,  (<arith_expr> (<numeric_feature> intersect_centers_x))  ))  ))   (<comp_op> >=)   (<arith_expr> (  (<arith_expr> (<number> (<maybe_sign> -) (<digit> 6) . (<digit> 1) (<digit> 3)))   (<math_op> -)   (<arith_expr> (  (<arith_expr> (<numeric_feature> obstacle_y))   (<math_op> *)   (<arith_expr> (<numeric_feature> velocity_x))  ))  ))))))  or  (<bool_term> (<bool_factor> (  (<bool_expr> (<bool_term> (<bool_factor> (<compare> (<arith_expr> (<numeric_feature> velocity_x))   (<comp_op> >)   (<arith_expr> (<numeric_feature> velocity_y))))))  ))))  )))  and  (<bool_factor> (<compare> (<arith_expr> hypot(  (<arith_expr> hypot(  (<arith_expr> (<number> (<maybe_sign> -) (<digit> 8) . (<digit> 0) (<digit> 6)))  ,  (<arith_expr> (<number> (<maybe_sign> -) (<digit> 9) . (<digit> 6) (<digit> 8)))  ))  ,  (<arith_expr> (<number> (<maybe_sign> -) (<digit> 1) . (<digit> 2) (<digit> 7)))  ))   (<comp_op> ==)   (<arith_expr> (<numeric_feature> intersect_centers_x))))))  )))  and  (<bool_factor> not  (<bool_factor> (  (<bool_expr> (<bool_expr> (<bool_term> (<bool_term> (<bool_factor> (  (<bool_expr> (<bool_term> (<bool_factor> not  (<bool_factor> not  (<bool_factor> (<compare> (<arith_expr> (<numeric_feature> velocity_y))   (<comp_op> <=)   (<arith_expr> (<numeric_feature> obstacle_x))))))))  )))  and  (<bool_factor> (<compare> (<arith_expr> (<number> (<maybe_sign> -) (<digit> 9) . (<digit> 7) (<digit> 0)))   (<comp_op> ==)   (<arith_expr> (<numeric_feature> intersect_centers_y))))))  or  (<bool_term> (<bool_factor> (<compare> (<arith_expr> p_div(  (<arith_expr> hypot(  (<arith_expr> hypot(  (<arith_expr> (  (<arith_expr> hypot(  (<arith_expr> p_div(  (<arith_expr> (<number> (<maybe_sign> ) (<digit> 3) . (<digit> 4) (<digit> 1)))  ,  (<arith_expr> (  (<arith_expr> (<numeric_feature> intersect_centers_x))   (<math_op> +)   (<arith_expr> (<numeric_feature> velocity_x))  ))  ))  ,  (<arith_expr> hypot(  (<arith_expr> p_div(  (<arith_expr> (<numeric_feature> velocity_y))  ,  (<arith_expr> (<numeric_feature> intersect_centers_y))  ))  ,  (<arith_expr> (<numeric_feature> velocity_x))  ))  ))   (<math_op> -)   (<arith_expr> (  (<arith_expr> p_div(  (<arith_expr> (  (<arith_expr> (<numeric_feature> intersect_radius))   (<math_op> -)   (<arith_expr> (<numeric_feature> intersect_centers_x))  ))  ,  (<arith_expr> p_div(  (<arith_expr> (<numeric_feature> intersect_centers_y))  ,  (<arith_expr> (<numeric_feature> intersect_centers_y))  ))  ))   (<math_op> *)   (<arith_expr> (<numeric_feature> intersect_centers_y))  ))  ))  ,  (<arith_expr> p_div(  (<arith_expr> hypot(  (<arith_expr> (<number> (<maybe_sign> -) (<digit> 2) . (<digit> 2) (<digit> 2)))  ,  (<arith_expr> (<numeric_feature> intersect_radius))  ))  ,  (<arith_expr> p_div(  (<arith_expr> (  (<arith_expr> hypot(  (<arith_expr> (<numeric_feature> intersect_radius))  ,  (<arith_expr> (<numeric_feature> velocity_x))  ))   (<math_op> *)   (<arith_expr> p_div(  (<arith_expr> (<numeric_feature> obstacle_y))  ,  (<arith_expr> (<numeric_feature> velocity_x))  ))  ))  ,  (<arith_expr> (<numeric_feature> intersect_radius))  ))  ))  ))  ,  (<arith_expr> (<number> (<maybe_sign> ) (<digit> 0) . (<digit> 5) (<digit> 3)))  ))  ,  (<arith_expr> (  (<arith_expr> (  (<arith_expr> hypot(  (<arith_expr> hypot(  (<arith_expr> (<number> (<maybe_sign> -) (<digit> 1) . (<digit> 9) (<digit> 2)))  ,  (<arith_expr> hypot(  (<arith_expr> hypot(  (<arith_expr> (<numeric_feature> velocity_y))  ,  (<arith_expr> (<numeric_feature> velocity_y))  ))  ,  (<arith_expr> hypot(  (<arith_expr> (<numeric_feature> obstacle_y))  ,  (<arith_expr> (<numeric_feature> intersect_centers_y))  ))  ))  ))  ,  (<arith_expr> (<number> (<maybe_sign> -) (<digit> 9) . (<digit> 1) (<digit> 0)))  ))   (<math_op> +)   (<arith_expr> (  (<arith_expr> (  (<arith_expr> (  (<arith_expr> p_div(  (<arith_expr> (<numeric_feature> intersect_centers_x))  ,  (<arith_expr> (<numeric_feature> obstacle_y))  ))   (<math_op> +)   (<arith_expr> (  (<arith_expr> (<numeric_feature> intersect_radius))   (<math_op> -)   (<arith_expr> (<numeric_feature> intersect_centers_y))  ))  ))   (<math_op> *)   (<arith_expr> p_div(  (<arith_expr> hypot(  (<arith_expr> (<numeric_feature> intersect_radius))  ,  (<arith_expr> (<numeric_feature> obstacle_x))  ))  ,  (<arith_expr> hypot(  (<arith_expr> (<numeric_feature> intersect_centers_x))  ,  (<arith_expr> (<numeric_feature> intersect_centers_x))  ))  ))  ))   (<math_op> *)   (<arith_expr> p_div(  (<arith_expr> p_div(  (<arith_expr> p_div(  (<arith_expr> (<numeric_feature> obstacle_x))  ,  (<arith_expr> (<numeric_feature> intersect_centers_x))  ))  ,  (<arith_expr> p_div(  (<arith_expr> (<numeric_feature> intersect_centers_y))  ,  (<arith_expr> (<numeric_feature> velocity_x))  ))  ))  ,  (<arith_expr> p_div(  (<arith_expr> (<numeric_feature> velocity_y))  ,  (<arith_expr> p_div(  (<arith_expr> (<numeric_feature> obstacle_x))  ,  (<arith_expr> (<numeric_feature> intersect_radius))  ))  ))  ))  ))  ))   (<math_op> *)   (<arith_expr> p_div(  (<arith_expr> p_div(  (<arith_expr> (<number> (<maybe_sign> ) (<digit> 9) . (<digit> 4) (<digit> 4)))  ,  (<arith_expr> hypot(  (<arith_expr> (  (<arith_expr> hypot(  (<arith_expr> (<numeric_feature> intersect_centers_x))  ,  (<arith_expr> (<numeric_feature> intersect_radius))  ))   (<math_op> -)   (<arith_expr> p_div(  (<arith_expr> (<numeric_feature> obstacle_x))  ,  (<arith_expr> (<numeric_feature> velocity_x))  ))  ))  ,  (<arith_expr> p_div(  (<arith_expr> (  (<arith_expr> (<numeric_feature> intersect_centers_x))   (<math_op> -)   (<arith_expr> (<numeric_feature> obstacle_x))  ))  ,  (<arith_expr> (<number> (<maybe_sign> ) (<digit> 9) . (<digit> 7) (<digit> 2)))  ))  ))  ))  ,  (<arith_expr> (<numeric_feature> velocity_y))  ))  ))  ))   (<comp_op> <=)   (<arith_expr> (<numeric_feature> intersect_centers_x))))))  ))))  and  (<bool_factor> (<compare> (<arith_expr> (<number> (<maybe_sign> -) (<digit> 9) . (<digit> 7) (<digit> 0)))   (<comp_op> ==)   (<arith_expr> (<numeric_feature> intersect_centers_y)))))  and  (<bool_factor> (<compare> (<arith_expr> (<numeric_feature> intersect_centers_x))   (<comp_op> >)   (<arith_expr> p_div(  (<arith_expr> (<numeric_feature> velocity_y))  ,  (<arith_expr> (<number> (<maybe_sign> -) (<digit> 3) . (<digit> 3) (<digit> 8)))  ))))))  or  (<boolean_feature> direction))  else  (<expr> (<action> 'LINKS'))))  if  (<direction_compound_expr> (<boolean_feature> direction)  and  (<bool_expr> (<bool_expr> (<bool_term> (<bool_term> (<bool_factor> (  (<bool_expr> (<bool_expr> (<bool_expr> (<bool_term> (<bool_term> (<bool_term> (<bool_term> (<bool_factor> (<compare> (<arith_expr> hypot(  (<arith_expr> p_div(  (<arith_expr> (<numeric_feature> intersect_centers_y))  ,  (<arith_expr> hypot(  (<arith_expr> hypot(  (<arith_expr> (<number> (<maybe_sign> -) (<digit> 8) . (<digit> 2) (<digit> 1)))  ,  (<arith_expr> (  (<arith_expr> (<numeric_feature> intersect_centers_y))   (<math_op> *)   (<arith_expr> (<numeric_feature> velocity_x))  ))  ))  ,  (<arith_expr> (<number> (<maybe_sign> ) (<digit> 3) . (<digit> 0) (<digit> 4)))  ))  ))  ,  (<arith_expr> (<number> (<maybe_sign> ) (<digit> 9) . (<digit> 9) (<digit> 7)))  ))   (<comp_op> !=)   (<arith_expr> (<number> (<maybe_sign> -) (<digit> 3) . (<digit> 8) (<digit> 8))))))  and  (<bool_factor> not  (<bool_factor> not  (<bool_factor> (<compare> (<arith_expr> p_div(  (<arith_expr> (<number> (<maybe_sign> -) (<digit> 1) . (<digit> 0) (<digit> 8)))  ,  (<arith_expr> (<number> (<maybe_sign> -) (<digit> 9) . (<digit> 3) (<digit> 7)))  ))   (<comp_op> <=)   (<arith_expr> (<number> (<maybe_sign> ) (<digit> 3) . (<digit> 0) (<digit> 2))))))))  and  (<bool_factor> (<compare> (<arith_expr> (  (<arith_expr> (  (<arith_expr> (  (<arith_expr> p_div(  (<arith_expr> hypot(  (<arith_expr> (<numeric_feature> obstacle_y))  ,  (<arith_expr> p_div(  (<arith_expr> (<number> (<maybe_sign> -) (<digit> 4) . (<digit> 5) (<digit> 6)))  ,  (<arith_expr> (  (<arith_expr> (<numeric_feature> obstacle_y))   (<math_op> -)   (<arith_expr> (<numeric_feature> obstacle_x))  ))  ))  ))  ,  (<arith_expr> (<number> (<maybe_sign> -) (<digit> 1) . (<digit> 0) (<digit> 0)))  ))   (<math_op> *)   (<arith_expr> hypot(  (<arith_expr> hypot(  (<arith_expr> (  (<arith_expr> (<number> (<maybe_sign> ) (<digit> 1) . (<digit> 5) (<digit> 5)))   (<math_op> -)   (<arith_expr> hypot(  (<arith_expr> (<numeric_feature> intersect_radius))  ,  (<arith_expr> (<numeric_feature> intersect_centers_y))  ))  ))  ,  (<arith_expr> (<numeric_feature> velocity_x))  ))  ,  (<arith_expr> (  (<arith_expr> (<number> (<maybe_sign> ) (<digit> 7) . (<digit> 7) (<digit> 4)))   (<math_op> -)   (<arith_expr> p_div(  (<arith_expr> p_div(  (<arith_expr> (<numeric_feature> velocity_x))  ,  (<arith_expr> (<numeric_feature> obstacle_x))  ))  ,  (<arith_expr> p_div(  (<arith_expr> (<numeric_feature> intersect_centers_y))  ,  (<arith_expr> (<numeric_feature> velocity_y))  ))  ))  ))  ))  ))   (<math_op> -)   (<arith_expr> p_div(  (<arith_expr> (<numeric_feature> obstacle_x))  ,  (<arith_expr> p_div(  (<arith_expr> (  (<arith_expr> (  (<arith_expr> p_div(  (<arith_expr> (<numeric_feature> obstacle_x))  ,  (<arith_expr> (<numeric_feature> velocity_y))  ))   (<math_op> +)   (<arith_expr> (<numeric_feature> intersect_centers_y))  ))   (<math_op> +)   (<arith_expr> hypot(  (<arith_expr> hypot(  (<arith_expr> (<numeric_feature> velocity_y))  ,  (<arith_expr> (<numeric_feature> intersect_centers_y))  ))  ,  (<arith_expr> (<number> (<maybe_sign> -) (<digit> 7) . (<digit> 0) (<digit> 2)))  ))  ))  ,  (<arith_expr> (<number> (<maybe_sign> ) (<digit> 0) . (<digit> 8) (<digit> 5)))  ))  ))  ))   (<math_op> -)   (<arith_expr> (<numeric_feature> obstacle_y))  ))   (<comp_op> >=)   (<arith_expr> (  (<arith_expr> hypot(  (<arith_expr> (<numeric_feature> obstacle_x))  ,  (<arith_expr> (<number> (<maybe_sign> -) (<digit> 7) . (<digit> 8) (<digit> 5)))  ))   (<math_op> -)   (<arith_expr> (<number> (<maybe_sign> ) (<digit> 1) . (<digit> 8) (<digit> 0)))  )))))  and  (<bool_factor> not  (<bool_factor> (<compare> (<arith_expr> hypot(  (<arith_expr> p_div(  (<arith_expr> (<number> (<maybe_sign> ) (<digit> 0) . (<digit> 7) (<digit> 0)))  ,  (<arith_expr> p_div(  (<arith_expr> (  (<arith_expr> (  (<arith_expr> (<number> (<maybe_sign> -) (<digit> 8) . (<digit> 0) (<digit> 6)))   (<math_op> +)   (<arith_expr> (  (<arith_expr> (<number> (<maybe_sign> -) (<digit> 8) . (<digit> 0) (<digit> 7)))   (<math_op> -)   (<arith_expr> hypot(  (<arith_expr> (<numeric_feature> velocity_y))  ,  (<arith_expr> (<numeric_feature> intersect_centers_y))  ))  ))  ))   (<math_op> +)   (<arith_expr> (<number> (<maybe_sign> -) (<digit> 8) . (<digit> 2) (<digit> 4)))  ))  ,  (<arith_expr> hypot(  (<arith_expr> (<number> (<maybe_sign> ) (<digit> 2) . (<digit> 0) (<digit> 9)))  ,  (<arith_expr> (  (<arith_expr> (<number> (<maybe_sign> -) (<digit> 2) . (<digit> 3) (<digit> 9)))   (<math_op> -)   (<arith_expr> (<number> (<maybe_sign> ) (<digit> 4) . (<digit> 8) (<digit> 5)))  ))  ))  ))  ))  ,  (<arith_expr> (<numeric_feature> obstacle_y))  ))   (<comp_op> <)   (<arith_expr> (  (<arith_expr> hypot(  (<arith_expr> p_div(  (<arith_expr> hypot(  (<arith_expr> (<numeric_feature> velocity_y))  ,  (<arith_expr> hypot(  (<arith_expr> (<numeric_feature> obstacle_x))  ,  (<arith_expr> hypot(  (<arith_expr> hypot(  (<arith_expr> (<numeric_feature> intersect_centers_x))  ,  (<arith_expr> (<numeric_feature> intersect_centers_x))  ))  ,  (<arith_expr> (<number> (<maybe_sign> ) (<digit> 1) . (<digit> 7) (<digit> 7)))  ))  ))  ))  ,  (<arith_expr> (  (<arith_expr> (<numeric_feature> intersect_radius))   (<math_op> +)   (<arith_expr> p_div(  (<arith_expr> hypot(  (<arith_expr> hypot(  (<arith_expr> (<numeric_feature> intersect_centers_y))  ,  (<arith_expr> (<numeric_feature> obstacle_y))  ))  ,  (<arith_expr> (  (<arith_expr> (<numeric_feature> velocity_y))   (<math_op> *)   (<arith_expr> (<numeric_feature> obstacle_y))  ))  ))  ,  (<arith_expr> hypot(  (<arith_expr> (  (<arith_expr> (<numeric_feature> intersect_centers_x))   (<math_op> +)   (<arith_expr> (<numeric_feature> intersect_centers_y))  ))  ,  (<arith_expr> (<numeric_feature> velocity_x))  ))  ))  ))  ))  ,  (<arith_expr> p_div(  (<arith_expr> hypot(  (<arith_expr> (<number> (<maybe_sign> -) (<digit> 6) . (<digit> 2) (<digit> 7)))  ,  (<arith_expr> (<number> (<maybe_sign> -) (<digit> 0) . (<digit> 9) (<digit> 4)))  ))  ,  (<arith_expr> p_div(  (<arith_expr> (  (<arith_expr> hypot(  (<arith_expr> hypot(  (<arith_expr> (<numeric_feature> intersect_centers_y))  ,  (<arith_expr> (<numeric_feature> obstacle_x))  ))  ,  (<arith_expr> (<numeric_feature> intersect_centers_x))  ))   (<math_op> *)   (<arith_expr> p_div(  (<arith_expr> hypot(  (<arith_expr> (<numeric_feature> obstacle_y))  ,  (<arith_expr> (<numeric_feature> obstacle_y))  ))  ,  (<arith_expr> (<numeric_feature> intersect_centers_x))  ))  ))  ,  (<arith_expr> (<number> (<maybe_sign> ) (<digit> 7) . (<digit> 2) (<digit> 2)))  ))  ))  ))   (<math_op> +)   (<arith_expr> p_div(  (<arith_expr> hypot(  (<arith_expr> (<number> (<maybe_sign> -) (<digit> 8) . (<digit> 9) (<digit> 2)))  ,  (<arith_expr> p_div(  (<arith_expr> p_div(  (<arith_expr> (<numeric_feature> velocity_y))  ,  (<arith_expr> (<number> (<maybe_sign> ) (<digit> 4) . (<digit> 6) (<digit> 2)))  ))  ,  (<arith_expr> (<number> (<maybe_sign> ) (<digit> 1) . (<digit> 0) (<digit> 2)))  ))  ))  ,  (<arith_expr> (<number> (<maybe_sign> -) (<digit> 4) . (<digit> 1) (<digit> 6)))  ))  )))))))  or  (<bool_term> (<bool_term> (<bool_term> (<bool_term> (<bool_factor> not  (<bool_factor> (<compare> (<arith_expr> (  (<arith_expr> (  (<arith_expr> (  (<arith_expr> hypot(  (<arith_expr> (<numeric_feature> intersect_centers_y))  ,  (<arith_expr> hypot(  (<arith_expr> (<numeric_feature> intersect_radius))  ,  (<arith_expr> (<numeric_feature> intersect_centers_x))  ))  ))   (<math_op> +)   (<arith_expr> (<numeric_feature> intersect_radius))  ))   (<math_op> +)   (<arith_expr> (<number> (<maybe_sign> -) (<digit> 7) . (<digit> 2) (<digit> 7)))  ))   (<math_op> -)   (<arith_expr> (  (<arith_expr> (  (<arith_expr> p_div(  (<arith_expr> p_div(  (<arith_expr> (<numeric_feature> obstacle_x))  ,  (<arith_expr> (<numeric_feature> intersect_centers_x))  ))  ,  (<arith_expr> (<number> (<maybe_sign> ) (<digit> 4) . (<digit> 0) (<digit> 7)))  ))   (<math_op> +)   (<arith_expr> (  (<arith_expr> (  (<arith_expr> (<numeric_feature> velocity_y))   (<math_op> +)   (<arith_expr> (<numeric_feature> velocity_y))  ))   (<math_op> +)   (<arith_expr> (  (<arith_expr> (<numeric_feature> intersect_centers_x))   (<math_op> *)   (<arith_expr> (<numeric_feature> intersect_centers_y))  ))  ))  ))   (<math_op> +)   (<arith_expr> p_div(  (<arith_expr> (<numeric_feature> intersect_centers_x))  ,  (<arith_expr> (  (<arith_expr> (<numeric_feature> velocity_y))   (<math_op> -)   (<arith_expr> (  (<arith_expr> (<numeric_feature> intersect_centers_x))   (<math_op> *)   (<arith_expr> (<numeric_feature> obstacle_y))  ))  ))  ))  ))  ))   (<comp_op> <=)   (<arith_expr> hypot(  (<arith_expr> p_div(  (<arith_expr> (<number> (<maybe_sign> ) (<digit> 5) . (<digit> 6) (<digit> 4)))  ,  (<arith_expr> hypot(  (<arith_expr> (  (<arith_expr> (<number> (<maybe_sign> ) (<digit> 5) . (<digit> 9) (<digit> 6)))   (<math_op> -)   (<arith_expr> (<numeric_feature> velocity_x))  ))  ,  (<arith_expr> p_div(  (<arith_expr> p_div(  (<arith_expr> (<numeric_feature> velocity_x))  ,  (<arith_expr> (<numeric_feature> intersect_radius))  ))  ,  (<arith_expr> (<number> (<maybe_sign> -) (<digit> 4) . (<digit> 4) (<digit> 8)))  ))  ))  ))  ,  (<arith_expr> (<number> (<maybe_sign> ) (<digit> 6) . (<digit> 9) (<digit> 4)))  ))))))  and  (<bool_factor> not  (<bool_factor> (<compare> (<arith_expr> (<numeric_feature> obstacle_x))   (<comp_op> <=)   (<arith_expr> (<number> (<maybe_sign> ) (<digit> 1) . (<digit> 9) (<digit> 5)))))))  and  (<bool_factor> not  (<bool_factor> not  (<bool_factor> (<compare> (<arith_expr> (<numeric_feature> velocity_y))   (<comp_op> !=)   (<arith_expr> (<numeric_feature> obstacle_y)))))))  and  (<bool_factor> (  (<bool_expr> (<bool_expr> (<bool_expr> (<bool_expr> (<bool_expr> (<bool_term> (<bool_term> (<bool_term> (<bool_factor> (<compare> (<arith_expr> (<numeric_feature> velocity_x))   (<comp_op> <=)   (<arith_expr> (<numeric_feature> velocity_x)))))  and  (<bool_factor> not  (<bool_factor> (<compare> (<arith_expr> (<numeric_feature> intersect_radius))   (<comp_op> !=)   (<arith_expr> (<numeric_feature> intersect_radius))))))  and  (<bool_factor> (<compare> (<arith_expr> (<numeric_feature> obstacle_y))   (<comp_op> ==)   (<arith_expr> p_div(  (<arith_expr> (<numeric_feature> obstacle_x))  ,  (<arith_expr> hypot(  (<arith_expr> (<numeric_feature> velocity_y))  ,  (<arith_expr> (<numeric_feature> velocity_x))  ))  ))))))  or  (<bool_term> (<bool_term> (<bool_factor> (<compare> (<arith_expr> (<number> (<maybe_sign> ) (<digit> 6) . (<digit> 3) (<digit> 3)))   (<comp_op> !=)   (<arith_expr> hypot(  (<arith_expr> (  (<arith_expr> (<numeric_feature> velocity_x))   (<math_op> -)   (<arith_expr> (<numeric_feature> obstacle_y))  ))  ,  (<arith_expr> (  (<arith_expr> (<numeric_feature> obstacle_y))   (<math_op> +)   (<arith_expr> (<numeric_feature> intersect_centers_y))  ))  )))))  and  (<bool_factor> (  (<bool_expr> (<bool_term> (<bool_factor> (<compare> (<arith_expr> (<numeric_feature> intersect_centers_x))   (<comp_op> <)   (<arith_expr> (<numeric_feature> intersect_centers_x))))))  ))))  or  (<bool_term> (<bool_term> (<bool_factor> (  (<bool_expr> (<bool_term> (<bool_factor> (<compare> (<arith_expr> (<numeric_feature> obstacle_x))   (<comp_op> <=)   (<arith_expr> (<numeric_feature> obstacle_x))))))  )))  and  (<bool_factor> (  (<bool_expr> (<bool_term> (<bool_term> (<bool_factor> (<compare> (<arith_expr> (<numeric_feature> intersect_radius))   (<comp_op> <=)   (<arith_expr> (<numeric_feature> intersect_centers_y)))))  and  (<bool_factor> (<compare> (<arith_expr> (<numeric_feature> obstacle_x))   (<comp_op> <)   (<arith_expr> hypot(  (<arith_expr> (<numeric_feature> velocity_x))  ,  (<arith_expr> (<numeric_feature> obstacle_x))  ))))))  ))))  or  (<bool_term> (<bool_factor> (  (<bool_expr> (<bool_term> (<bool_term> (<bool_factor> (<compare> (<arith_expr> p_div(  (<arith_expr> (<numeric_feature> intersect_centers_x))  ,  (<arith_expr> (<numeric_feature> obstacle_y))  ))   (<comp_op> <=)   (<arith_expr> (<number> (<maybe_sign> -) (<digit> 9) . (<digit> 5) (<digit> 1))))))  and  (<bool_factor> not  (<bool_factor> not  (<bool_factor> (<compare> (<arith_expr> (<numeric_feature> obstacle_y))   (<comp_op> >=)   (<arith_expr> (<numeric_feature> obstacle_x))))))))  ))))  or  (<bool_term> (<bool_term> (<bool_factor> (<compare> (<arith_expr> hypot(  (<arith_expr> (  (<arith_expr> (<number> (<maybe_sign> -) (<digit> 8) . (<digit> 5) (<digit> 1)))   (<math_op> +)   (<arith_expr> (<number> (<maybe_sign> -) (<digit> 9) . (<digit> 4) (<digit> 8)))  ))  ,  (<arith_expr> hypot(  (<arith_expr> (  (<arith_expr> (  (<arith_expr> (  (<arith_expr> (<numeric_feature> obstacle_x))   (<math_op> -)   (<arith_expr> (<numeric_feature> velocity_y))  ))   (<math_op> -)   (<arith_expr> p_div(  (<arith_expr> (<numeric_feature> obstacle_y))  ,  (<arith_expr> (<numeric_feature> intersect_centers_y))  ))  ))   (<math_op> *)   (<arith_expr> (  (<arith_expr> hypot(  (<arith_expr> (<numeric_feature> intersect_centers_y))  ,  (<arith_expr> (<numeric_feature> intersect_radius))  ))   (<math_op> +)   (<arith_expr> hypot(  (<arith_expr> (<numeric_feature> velocity_x))  ,  (<arith_expr> (<numeric_feature> intersect_radius))  ))  ))  ))  ,  (<arith_expr> (<number> (<maybe_sign> ) (<digit> 2) . (<digit> 6) (<digit> 0)))  ))  ))   (<comp_op> >)   (<arith_expr> (<numeric_feature> intersect_centers_y)))))  and  (<bool_factor> (<compare> (<arith_expr> (<numeric_feature> obstacle_y))   (<comp_op> !=)   (<arith_expr> p_div(  (<arith_expr> (  (<arith_expr> p_div(  (<arith_expr> (<numeric_feature> obstacle_x))  ,  (<arith_expr> hypot(  (<arith_expr> hypot(  (<arith_expr> (<numeric_feature> intersect_centers_y))  ,  (<arith_expr> p_div(  (<arith_expr> (<numeric_feature> velocity_x))  ,  (<arith_expr> (<numeric_feature> obstacle_x))  ))  ))  ,  (<arith_expr> hypot(  (<arith_expr> (<numeric_feature> obstacle_x))  ,  (<arith_expr> p_div(  (<arith_expr> (<numeric_feature> velocity_y))  ,  (<arith_expr> (<numeric_feature> intersect_centers_y))  ))  ))  ))  ))   (<math_op> -)   (<arith_expr> (  (<arith_expr> hypot(  (<arith_expr> hypot(  (<arith_expr> (<number> (<maybe_sign> ) (<digit> 9) . (<digit> 7) (<digit> 8)))  ,  (<arith_expr> p_div(  (<arith_expr> (<numeric_feature> intersect_centers_x))  ,  (<arith_expr> (<numeric_feature> intersect_centers_y))  ))  ))  ,  (<arith_expr> hypot(  (<arith_expr> (  (<arith_expr> (<numeric_feature> obstacle_y))   (<math_op> *)   (<arith_expr> (<numeric_feature> velocity_y))  ))  ,  (<arith_expr> p_div(  (<arith_expr> (<numeric_feature> obstacle_y))  ,  (<arith_expr> (<numeric_feature> intersect_centers_y))  ))  ))  ))   (<math_op> *)   (<arith_expr> hypot(  (<arith_expr> p_div(  (<arith_expr> (  (<arith_expr> (<numeric_feature> velocity_y))   (<math_op> -)   (<arith_expr> (<numeric_feature> intersect_centers_x))  ))  ,  (<arith_expr> hypot(  (<arith_expr> (<numeric_feature> intersect_centers_x))  ,  (<arith_expr> (<numeric_feature> intersect_centers_x))  ))  ))  ,  (<arith_expr> hypot(  (<arith_expr> (<numeric_feature> intersect_centers_x))  ,  (<arith_expr> (  (<arith_expr> (<numeric_feature> obstacle_x))   (<math_op> *)   (<arith_expr> (<numeric_feature> velocity_y))  ))  ))  ))  ))  ))  ,  (<arith_expr> (<numeric_feature> intersect_centers_y))  ))))))  ))))  or  (<bool_term> (<bool_factor> not  (<bool_factor> not  (<bool_factor> (  (<bool_expr> (<bool_term> (<bool_factor> not  (<bool_factor> (<compare> (<arith_expr> hypot(  (<arith_expr> hypot(  (<arith_expr> (<numeric_feature> intersect_radius))  ,  (<arith_expr> (<number> (<maybe_sign> ) (<digit> 5) . (<digit> 1) (<digit> 7)))  ))  ,  (<arith_expr> hypot(  (<arith_expr> (  (<arith_expr> (<numeric_feature> velocity_x))   (<math_op> +)   (<arith_expr> hypot(  (<arith_expr> (<numeric_feature> obstacle_y))  ,  (<arith_expr> (<numeric_feature> velocity_y))  ))  ))  ,  (<arith_expr> p_div(  (<arith_expr> (<numeric_feature> velocity_y))  ,  (<arith_expr> (<numeric_feature> intersect_centers_y))  ))  ))  ))   (<comp_op> <=)   (<arith_expr> p_div(  (<arith_expr> (<number> (<maybe_sign> ) (<digit> 0) . (<digit> 8) (<digit> 6)))  ,  (<arith_expr> hypot(  (<arith_expr> hypot(  (<arith_expr> hypot(  (<arith_expr> (<numeric_feature> obstacle_x))  ,  (<arith_expr> (<numeric_feature> intersect_centers_y))  ))  ,  (<arith_expr> (<numeric_feature> velocity_y))  ))  ,  (<arith_expr> p_div(  (<arith_expr> (  (<arith_expr> (<numeric_feature> velocity_y))   (<math_op> *)   (<arith_expr> (<numeric_feature> obstacle_x))  ))  ,  (<arith_expr> (<numeric_feature> obstacle_x))  ))  ))  )))))))  ))))))  )))  and  (<bool_factor> (<compare> (<arith_expr> p_div(  (<arith_expr> (<numeric_feature> velocity_x))  ,  (<arith_expr> (  (<arith_expr> (<numeric_feature> obstacle_y))   (<math_op> -)   (<arith_expr> (<number> (<maybe_sign> -) (<digit> 1) . (<digit> 6) (<digit> 4)))  ))  ))   (<comp_op> !=)   (<arith_expr> (<number> (<maybe_sign> ) (<digit> 6) . (<digit> 7) (<digit> 0)))))))  or  (<bool_term> (<bool_factor> (<compare> (<arith_expr> hypot(  (<arith_expr> (<numeric_feature> intersect_centers_y))  ,  (<arith_expr> hypot(  (<arith_expr> (  (<arith_expr> (  (<arith_expr> p_div(  (<arith_expr> (<numeric_feature> obstacle_x))  ,  (<arith_expr> (<number> (<maybe_sign> -) (<digit> 9) . (<digit> 5) (<digit> 9)))  ))   (<math_op> -)   (<arith_expr> (<number> (<maybe_sign> -) (<digit> 4) . (<digit> 3) (<digit> 0)))  ))   (<math_op> +)   (<arith_expr> (<numeric_feature> velocity_x))  ))  ,  (<arith_expr> (  (<arith_expr> (  (<arith_expr> (<numeric_feature> velocity_x))   (<math_op> *)   (<arith_expr> hypot(  (<arith_expr> (  (<arith_expr> hypot(  (<arith_expr> (<number> (<maybe_sign> ) (<digit> 7) . (<digit> 2) (<digit> 8)))  ,  (<arith_expr> p_div(  (<arith_expr> (  (<arith_expr> (  (<arith_expr> (<number> (<maybe_sign> -) (<digit> 4) . (<digit> 9) (<digit> 5)))   (<math_op> -)   (<arith_expr> (<numeric_feature> intersect_centers_x))  ))   (<math_op> +)   (<arith_expr> (<numeric_feature> obstacle_y))  ))  ,  (<arith_expr> p_div(  (<arith_expr> (<number> (<maybe_sign> -) (<digit> 9) . (<digit> 7) (<digit> 3)))  ,  (<arith_expr> hypot(  (<arith_expr> (<numeric_feature> velocity_y))  ,  (<arith_expr> (<number> (<maybe_sign> -) (<digit> 6) . (<digit> 7) (<digit> 3)))  ))  ))  ))  ))   (<math_op> *)   (<arith_expr> (  (<arith_expr> (<numeric_feature> intersect_centers_y))   (<math_op> +)   (<arith_expr> hypot(  (<arith_expr> hypot(  (<arith_expr> p_div(  (<arith_expr> (<number> (<maybe_sign> -) (<digit> 5) . (<digit> 7) (<digit> 7)))  ,  (<arith_expr> (  (<arith_expr> (  (<arith_expr> p_div(  (<arith_expr> p_div(  (<arith_expr> (<number> (<maybe_sign> -) (<digit> 0) . (<digit> 0) (<digit> 7)))  ,  (<arith_expr> (  (<arith_expr> (<numeric_feature> intersect_centers_y))   (<math_op> *)   (<arith_expr> (<numeric_feature> intersect_centers_y))  ))  ))  ,  (<arith_expr> hypot(  (<arith_expr> (<numeric_feature> intersect_centers_y))  ,  (<arith_expr> (  (<arith_expr> (<numeric_feature> intersect_centers_x))   (<math_op> +)   (<arith_expr> (<numeric_feature> intersect_centers_y))  ))  ))  ))   (<math_op> +)   (<arith_expr> hypot(  (<arith_expr> hypot(  (<arith_expr> (<number> (<maybe_sign> -) (<digit> 0) . (<digit> 8) (<digit> 8)))  ,  (<arith_expr> (<numeric_feature> obstacle_y))  ))  ,  (<arith_expr> hypot(  (<arith_expr> (<number> (<maybe_sign> ) (<digit> 5) . (<digit> 0) (<digit> 0)))  ,  (<arith_expr> (<number> (<maybe_sign> -) (<digit> 5) . (<digit> 9) (<digit> 4)))  ))  ))  ))   (<math_op> +)   (<arith_expr> hypot(  (<arith_expr> hypot(  (<arith_expr> (<number> (<maybe_sign> -) (<digit> 9) . (<digit> 3) (<digit> 9)))  ,  (<arith_expr> (<number> (<maybe_sign> ) (<digit> 4) . (<digit> 1) (<digit> 4)))  ))  ,  (<arith_expr> p_div(  (<arith_expr> p_div(  (<arith_expr> hypot(  (<arith_expr> (<numeric_feature> velocity_x))  ,  (<arith_expr> (<numeric_feature> obstacle_y))  ))  ,  (<arith_expr> (<numeric_feature> obstacle_x))  ))  ,  (<arith_expr> (  (<arith_expr> p_div(  (<arith_expr> (<numeric_feature> obstacle_y))  ,  (<arith_expr> (<numeric_feature> velocity_x))  ))   (<math_op> *)   (<arith_expr> (  (<arith_expr> (<numeric_feature> velocity_x))   (<math_op> -)   (<arith_expr> (<numeric_feature> obstacle_x))  ))  ))  ))  ))  ))  ))  ,  (<arith_expr> (  (<arith_expr> hypot(  (<arith_expr> p_div(  (<arith_expr> (<numeric_feature> intersect_radius))  ,  (<arith_expr> (<numeric_feature> obstacle_y))  ))  ,  (<arith_expr> p_div(  (<arith_expr> hypot(  (<arith_expr> (<numeric_feature> intersect_radius))  ,  (<arith_expr> hypot(  (<arith_expr> (<numeric_feature> obstacle_y))  ,  (<arith_expr> (<numeric_feature> obstacle_y))  ))  ))  ,  (<arith_expr> p_div(  (<arith_expr> (  (<arith_expr> (<numeric_feature> intersect_radius))   (<math_op> +)   (<arith_expr> (<numeric_feature> intersect_centers_y))  ))  ,  (<arith_expr> (<numeric_feature> obstacle_y))  ))  ))  ))   (<math_op> -)   (<arith_expr> (<numeric_feature> obstacle_x))  ))  ))  ,  (<arith_expr> (<number> (<maybe_sign> -) (<digit> 8) . (<digit> 6) (<digit> 5)))  ))  ))  ))  ,  (<arith_expr> hypot(  (<arith_expr> hypot(  (<arith_expr> (  (<arith_expr> p_div(  (<arith_expr> (<number> (<maybe_sign> ) (<digit> 7) . (<digit> 1) (<digit> 4)))  ,  (<arith_expr> hypot(  (<arith_expr> p_div(  (<arith_expr> (<number> (<maybe_sign> ) (<digit> 8) . (<digit> 9) (<digit> 6)))  ,  (<arith_expr> (  (<arith_expr> p_div(  (<arith_expr> (<number> (<maybe_sign> -) (<digit> 3) . (<digit> 7) (<digit> 6)))  ,  (<arith_expr> hypot(  (<arith_expr> (<numeric_feature> intersect_centers_x))  ,  (<arith_expr> p_div(  (<arith_expr> (<numeric_feature> obstacle_y))  ,  (<arith_expr> (<numeric_feature> obstacle_y))  ))  ))  ))   (<math_op> -)   (<arith_expr> (<numeric_feature> velocity_y))  ))  ))  ,  (<arith_expr> (<number> (<maybe_sign> ) (<digit> 8) . (<digit> 2) (<digit> 9)))  ))  ))   (<math_op> -)   (<arith_expr> p_div(  (<arith_expr> (  (<arith_expr> p_div(  (<arith_expr> (<numeric_feature> obstacle_x))  ,  (<arith_expr> (  (<arith_expr> hypot(  (<arith_expr> (<numeric_feature> obstacle_x))  ,  (<arith_expr> p_div(  (<arith_expr> p_div(  (<arith_expr> (<numeric_feature> velocity_x))  ,  (<arith_expr> (<numeric_feature> velocity_x))  ))  ,  (<arith_expr> hypot(  (<arith_expr> (<numeric_feature> obstacle_x))  ,  (<arith_expr> (<numeric_feature> intersect_radius))  ))  ))  ))   (<math_op> -)   (<arith_expr> (<number> (<maybe_sign> -) (<digit> 5) . (<digit> 9) (<digit> 0)))  ))  ))   (<math_op> +)   (<arith_expr> (  (<arith_expr> (<numeric_feature> velocity_x))   (<math_op> *)   (<arith_expr> hypot(  (<arith_expr> hypot(  (<arith_expr> (<numeric_feature> intersect_centers_y))  ,  (<arith_expr> (  (<arith_expr> hypot(  (<arith_expr> (<numeric_feature> intersect_centers_x))  ,  (<arith_expr> (<numeric_feature> obstacle_y))  ))   (<math_op> *)   (<arith_expr> (  (<arith_expr> (<numeric_feature> obstacle_y))   (<math_op> -)   (<arith_expr> (<numeric_feature> intersect_radius))  ))  ))  ))  ,  (<arith_expr> (<numeric_feature> obstacle_y))  ))  ))  ))  ,  (<arith_expr> p_div(  (<arith_expr> (  (<arith_expr> hypot(  (<arith_expr> p_div(  (<arith_expr> (<number> (<maybe_sign> ) (<digit> 0) . (<digit> 1) (<digit> 3)))  ,  (<arith_expr> hypot(  (<arith_expr> (  (<arith_expr> (<numeric_feature> velocity_y))   (<math_op> *)   (<arith_expr> (<numeric_feature> intersect_centers_y))  ))  ,  (<arith_expr> (<number> (<maybe_sign> -) (<digit> 5) . (<digit> 5) (<digit> 0)))  ))  ))  ,  (<arith_expr> (<number> (<maybe_sign> ) (<digit> 4) . (<digit> 0) (<digit> 5)))  ))   (<math_op> +)   (<arith_expr> p_div(  (<arith_expr> (<number> (<maybe_sign> ) (<digit> 6) . (<digit> 0) (<digit> 6)))  ,  (<arith_expr> p_div(  (<arith_expr> p_div(  (<arith_expr> (<numeric_feature> velocity_y))  ,  (<arith_expr> (<numeric_feature> obstacle_y))  ))  ,  (<arith_expr> p_div(  (<arith_expr> (<numeric_feature> velocity_y))  ,  (<arith_expr> p_div(  (<arith_expr> (<numeric_feature> intersect_radius))  ,  (<arith_expr> (<numeric_feature> velocity_y))  ))  ))  ))  ))  ))  ,  (<arith_expr> (  (<arith_expr> (<numeric_feature> intersect_centers_y))   (<math_op> *)   (<arith_expr> (<number> (<maybe_sign> -) (<digit> 8) . (<digit> 3) (<digit> 4)))  ))  ))  ))  ))  ,  (<arith_expr> (  (<arith_expr> p_div(  (<arith_expr> (  (<arith_expr> (  (<arith_expr> (<numeric_feature> obstacle_x))   (<math_op> *)   (<arith_expr> hypot(  (<arith_expr> (  (<arith_expr> (<numeric_feature> intersect_centers_y))   (<math_op> -)   (<arith_expr> hypot(  (<arith_expr> hypot(  (<arith_expr> (<numeric_feature> obstacle_x))  ,  (<arith_expr> (<numeric_feature> obstacle_x))  ))  ,  (<arith_expr> (  (<arith_expr> (<numeric_feature> obstacle_y))   (<math_op> -)   (<arith_expr> (<numeric_feature> velocity_x))  ))  ))  ))  ,  (<arith_expr> (<number> (<maybe_sign> ) (<digit> 7) . (<digit> 8) (<digit> 9)))  ))  ))   (<math_op> +)   (<arith_expr> (<numeric_feature> obstacle_y))  ))  ,  (<arith_expr> p_div(  (<arith_expr> (<numeric_feature> intersect_radius))  ,  (<arith_expr> p_div(  (<arith_expr> (<numeric_feature> velocity_y))  ,  (<arith_expr> (<number> (<maybe_sign> -) (<digit> 5) . (<digit> 3) (<digit> 8)))  ))  ))  ))   (<math_op> +)   (<arith_expr> hypot(  (<arith_expr> hypot(  (<arith_expr> (<numeric_feature> intersect_centers_x))  ,  (<arith_expr> (<number> (<maybe_sign> ) (<digit> 5) . (<digit> 6) (<digit> 3)))  ))  ,  (<arith_expr> hypot(  (<arith_expr> (<number> (<maybe_sign> ) (<digit> 6) . (<digit> 4) (<digit> 8)))  ,  (<arith_expr> hypot(  (<arith_expr> (  (<arith_expr> hypot(  (<arith_expr> (<numeric_feature> obstacle_y))  ,  (<arith_expr> (<numeric_feature> obstacle_y))  ))   (<math_op> +)   (<arith_expr> (<numeric_feature> obstacle_x))  ))  ,  (<arith_expr> (<numeric_feature> intersect_centers_y))  ))  ))  ))  ))  ))  ,  (<arith_expr> (  (<arith_expr> (<numeric_feature> obstacle_y))   (<math_op> -)   (<arith_expr> p_div(  (<arith_expr> (<number> (<maybe_sign> ) (<digit> 9) . (<digit> 1) (<digit> 6)))  ,  (<arith_expr> (<number> (<maybe_sign> -) (<digit> 2) . (<digit> 3) (<digit> 8)))  ))  ))  ))  ))  ))   (<math_op> +)   (<arith_expr> (<numeric_feature> intersect_radius))  ))  ))  ))   (<comp_op> <=)   (<arith_expr> (<number> (<maybe_sign> ) (<digit> 5) . (<digit> 3) (<digit> 6))))))))  else  (<expr> (<if_expr> (<expr> (<if_expr> (<expr> (<if_expr> (<expr> (<action> 'RECHTS'))  if  (<direction_compound_expr> (<boolean_feature> not direction)  and  (<bool_expr> (<bool_expr> (<bool_term> (<bool_factor> not  (<bool_factor> (  (<bool_expr> (<bool_term> (<bool_factor> not  (<bool_factor> (  (<bool_expr> (<bool_term> (<bool_factor> (<compare> (<arith_expr> (<numeric_feature> velocity_x))   (<comp_op> <)   (<arith_expr> (<numeric_feature> velocity_x))))))  )))))  )))))  or  (<bool_term> (<bool_term> (<bool_factor> not  (<bool_factor> not  (<bool_factor> (<compare> (<arith_expr> (<number> (<maybe_sign> -) (<digit> 3) . (<digit> 7) (<digit> 7)))   (<comp_op> <)   (<arith_expr> p_div(  (<arith_expr> hypot(  (<arith_expr> p_div(  (<arith_expr> p_div(  (<arith_expr> (  (<arith_expr> (<numeric_feature> obstacle_y))   (<math_op> +)   (<arith_expr> (<numeric_feature> intersect_radius))  ))  ,  (<arith_expr> (<number> (<maybe_sign> -) (<digit> 7) . (<digit> 9) (<digit> 6)))  ))  ,  (<arith_expr> (<number> (<maybe_sign> -) (<digit> 0) . (<digit> 2) (<digit> 3)))  ))  ,  (<arith_expr> (  (<arith_expr> (<numeric_feature> intersect_centers_y))   (<math_op> +)   (<arith_expr> (  (<arith_expr> (  (<arith_expr> (<numeric_feature> intersect_radius))   (<math_op> *)   (<arith_expr> (<numeric_feature> intersect_radius))  ))   (<math_op> *)   (<arith_expr> (<number> (<maybe_sign> -) (<digit> 3) . (<digit> 0) (<digit> 4)))  ))  ))  ))  ,  (<arith_expr> (<numeric_feature> velocity_y))  )))))))  and  (<bool_factor> (<compare> (<arith_expr> p_div(  (<arith_expr> (<number> (<maybe_sign> ) (<digit> 4) . (<digit> 4) (<digit> 9)))  ,  (<arith_expr> (<numeric_feature> obstacle_y))  ))   (<comp_op> <)   (<arith_expr> (<numeric_feature> velocity_x)))))))  else  (<expr> (<action> 'RECHTS'))))  if  (<direction_compound_expr> (<boolean_feature> direction)  and  (<bool_expr> (<bool_expr> (<bool_expr> (<bool_expr> (<bool_term> (<bool_term> (<bool_factor> (<compare> (<arith_expr> (  (<arith_expr> p_div(  (<arith_expr> hypot(  (<arith_expr> (  (<arith_expr> (<number> (<maybe_sign> -) (<digit> 1) . (<digit> 2) (<digit> 5)))   (<math_op> *)   (<arith_expr> (<number> (<maybe_sign> -) (<digit> 7) . (<digit> 4) (<digit> 8)))  ))  ,  (<arith_expr> p_div(  (<arith_expr> (<numeric_feature> intersect_centers_y))  ,  (<arith_expr> hypot(  (<arith_expr> (<numeric_feature> intersect_centers_x))  ,  (<arith_expr> (<number> (<maybe_sign> -) (<digit> 9) . (<digit> 8) (<digit> 0)))  ))  ))  ))  ,  (<arith_expr> (<numeric_feature> intersect_centers_y))  ))   (<math_op> +)   (<arith_expr> (<numeric_feature> intersect_radius))  ))   (<comp_op> >)   (<arith_expr> hypot(  (<arith_expr> hypot(  (<arith_expr> (<number> (<maybe_sign> ) (<digit> 6) . (<digit> 5) (<digit> 2)))  ,  (<arith_expr> hypot(  (<arith_expr> (<numeric_feature> intersect_centers_x))  ,  (<arith_expr> hypot(  (<arith_expr> hypot(  (<arith_expr> (<number> (<maybe_sign> ) (<digit> 4) . (<digit> 2) (<digit> 2)))  ,  (<arith_expr> (<number> (<maybe_sign> ) (<digit> 4) . (<digit> 6) (<digit> 9)))  ))  ,  (<arith_expr> (<numeric_feature> obstacle_x))  ))  ))  ))  ,  (<arith_expr> hypot(  (<arith_expr> (<number> (<maybe_sign> ) (<digit> 9) . (<digit> 2) (<digit> 6)))  ,  (<arith_expr> (  (<arith_expr> hypot(  (<arith_expr> hypot(  (<arith_expr> (  (<arith_expr> (<numeric_feature> intersect_centers_x))   (<math_op> -)   (<arith_expr> (<numeric_feature> obstacle_y))  ))  ,  (<arith_expr> hypot(  (<arith_expr> (<numeric_feature> obstacle_x))  ,  (<arith_expr> (<numeric_feature> intersect_centers_x))  ))  ))  ,  (<arith_expr> (  (<arith_expr> p_div(  (<arith_expr> (<numeric_feature> obstacle_y))  ,  (<arith_expr> (<numeric_feature> velocity_y))  ))   (<math_op> +)   (<arith_expr> (<numeric_feature> intersect_centers_x))  ))  ))   (<math_op> -)   (<arith_expr> (<numeric_feature> velocity_x))  ))  ))  )))))  and  (<bool_factor> not  (<bool_factor> not  (<bool_factor> (<compare> (<arith_expr> (<number> (<maybe_sign> -) (<digit> 2) . (<digit> 4) (<digit> 1)))   (<comp_op> <)   (<arith_expr> (  (<arith_expr> (<numeric_feature> obstacle_y))   (<math_op> -)   (<arith_expr> hypot(  (<arith_expr> (<number> (<maybe_sign> ) (<digit> 2) . (<digit> 8) (<digit> 5)))  ,  (<arith_expr> p_div(  (<arith_expr> p_div(  (<arith_expr> (<number> (<maybe_sign> -) (<digit> 9) . (<digit> 1) (<digit> 2)))  ,  (<arith_expr> hypot(  (<arith_expr> (<numeric_feature> velocity_y))  ,  (<arith_expr> (<numeric_feature> intersect_centers_x))  ))  ))  ,  (<arith_expr> p_div(  (<arith_expr> (<number> (<maybe_sign> -) (<digit> 2) . (<digit> 8) (<digit> 5)))  ,  (<arith_expr> hypot(  (<arith_expr> (<numeric_feature> obstacle_x))  ,  (<arith_expr> (<numeric_feature> velocity_y))  ))  ))  ))  ))  ))))))))  or  (<bool_term> (<bool_term> (<bool_term> (<bool_factor> not  (<bool_factor> not  (<bool_factor> (<compare> (<arith_expr> p_div(  (<arith_expr> p_div(  (<arith_expr> hypot(  (<arith_expr> (<number> (<maybe_sign> -) (<digit> 0) . (<digit> 4) (<digit> 7)))  ,  (<arith_expr> p_div(  (<arith_expr> (<numeric_feature> obstacle_x))  ,  (<arith_expr> (<numeric_feature> obstacle_y))  ))  ))  ,  (<arith_expr> (  (<arith_expr> hypot(  (<arith_expr> (<numeric_feature> obstacle_x))  ,  (<arith_expr> (<numeric_feature> intersect_radius))  ))   (<math_op> *)   (<arith_expr> hypot(  (<arith_expr> (<numeric_feature> obstacle_y))  ,  (<arith_expr> (<numeric_feature> intersect_radius))  ))  ))  ))  ,  (<arith_expr> p_div(  (<arith_expr> (<number> (<maybe_sign> -) (<digit> 2) . (<digit> 5) (<digit> 2)))  ,  (<arith_expr> p_div(  (<arith_expr> p_div(  (<arith_expr> (<numeric_feature> velocity_x))  ,  (<arith_expr> (<numeric_feature> obstacle_y))  ))  ,  (<arith_expr> (<number> (<maybe_sign> -) (<digit> 0) . (<digit> 2) (<digit> 7)))  ))  ))  ))   (<comp_op> >=)   (<arith_expr> (<number> (<maybe_sign> ) (<digit> 0) . (<digit> 6) (<digit> 4))))))))  and  (<bool_factor> (<compare> (<arith_expr> hypot(  (<arith_expr> (<numeric_feature> velocity_y))  ,  (<arith_expr> (<numeric_feature> intersect_centers_x))  ))   (<comp_op> !=)   (<arith_expr> (  (<arith_expr> p_div(  (<arith_expr> p_div(  (<arith_expr> (<number> (<maybe_sign> -) (<digit> 9) . (<digit> 9) (<digit> 2)))  ,  (<arith_expr> (<numeric_feature> obstacle_y))  ))  ,  (<arith_expr> hypot(  (<arith_expr> hypot(  (<arith_expr> (  (<arith_expr> (<numeric_feature> velocity_y))   (<math_op> -)   (<arith_expr> (<number> (<maybe_sign> -) (<digit> 1) . (<digit> 1) (<digit> 5)))  ))  ,  (<arith_expr> p_div(  (<arith_expr> hypot(  (<arith_expr> (<number> (<maybe_sign> -) (<digit> 0) . (<digit> 4) (<digit> 4)))  ,  (<arith_expr> p_div(  (<arith_expr> (<numeric_feature> obstacle_y))  ,  (<arith_expr> (<numeric_feature> intersect_radius))  ))  ))  ,  (<arith_expr> (  (<arith_expr> (  (<arith_expr> (<numeric_feature> intersect_centers_y))   (<math_op> +)   (<arith_expr> (<numeric_feature> intersect_radius))  ))   (<math_op> +)   (<arith_expr> (<numeric_feature> velocity_x))  ))  ))  ))  ,  (<arith_expr> hypot(  (<arith_expr> (<numeric_feature> intersect_centers_x))  ,  (<arith_expr> (<number> (<maybe_sign> -) (<digit> 6) . (<digit> 7) (<digit> 7)))  ))  ))  ))   (<math_op> *)   (<arith_expr> (<numeric_feature> velocity_x))  )))))  and  (<bool_factor> (<compare> (<arith_expr> (<numeric_feature> obstacle_y))   (<comp_op> <=)   (<arith_expr> (<number> (<maybe_sign> -) (<digit> 8) . (<digit> 0) (<digit> 2)))))))  or  (<bool_term> (<bool_factor> not  (<bool_factor> not  (<bool_factor> (  (<bool_expr> (<bool_term> (<bool_term> (<bool_factor> (  (<bool_expr> (<bool_term> (<bool_factor> (<compare> (<arith_expr> (<numeric_feature> obstacle_x))   (<comp_op> <=)   (<arith_expr> (<numeric_feature> intersect_radius))))))  )))  and  (<bool_factor> (<compare> (<arith_expr> (  (<arith_expr> (<numeric_feature> obstacle_y))   (<math_op> -)   (<arith_expr> p_div(  (<arith_expr> (<number> (<maybe_sign> -) (<digit> 7) . (<digit> 5) (<digit> 3)))  ,  (<arith_expr> (  (<arith_expr> (  (<arith_expr> (<numeric_feature> obstacle_y))   (<math_op> -)   (<arith_expr> (<numeric_feature> velocity_x))  ))   (<math_op> +)   (<arith_expr> (<numeric_feature> intersect_radius))  ))  ))  ))   (<comp_op> <=)   (<arith_expr> (  (<arith_expr> hypot(  (<arith_expr> hypot(  (<arith_expr> (<numeric_feature> velocity_y))  ,  (<arith_expr> (<number> (<maybe_sign> ) (<digit> 4) . (<digit> 5) (<digit> 9)))  ))  ,  (<arith_expr> p_div(  (<arith_expr> (<numeric_feature> intersect_centers_x))  ,  (<arith_expr> (  (<arith_expr> (<numeric_feature> obstacle_y))   (<math_op> +)   (<arith_expr> (<numeric_feature> velocity_x))  ))  ))  ))   (<math_op> +)   (<arith_expr> (<numeric_feature> intersect_radius))  ))))))  ))))))  or  (<bool_term> (<bool_factor> (<compare> (<arith_expr> (<number> (<maybe_sign> ) (<digit> 3) . (<digit> 0) (<digit> 4)))   (<comp_op> <=)   (<arith_expr> p_div(  (<arith_expr> (<number> (<maybe_sign> ) (<digit> 8) . (<digit> 9) (<digit> 9)))  ,  (<arith_expr> hypot(  (<arith_expr> (<number> (<maybe_sign> ) (<digit> 2) . (<digit> 7) (<digit> 6)))  ,  (<arith_expr> (  (<arith_expr> (<number> (<maybe_sign> -) (<digit> 8) . (<digit> 8) (<digit> 5)))   (<math_op> -)   (<arith_expr> hypot(  (<arith_expr> (<number> (<maybe_sign> -) (<digit> 9) . (<digit> 7) (<digit> 8)))  ,  (<arith_expr> hypot(  (<arith_expr> p_div(  (<arith_expr> p_div(  (<arith_expr> p_div(  (<arith_expr> (  (<arith_expr> p_div(  (<arith_expr> (<numeric_feature> intersect_centers_y))  ,  (<arith_expr> (<numeric_feature> velocity_y))  ))   (<math_op> +)   (<arith_expr> (  (<arith_expr> (<numeric_feature> intersect_centers_x))   (<math_op> *)   (<arith_expr> (<numeric_feature> intersect_centers_x))  ))  ))  ,  (<arith_expr> hypot(  (<arith_expr> hypot(  (<arith_expr> (<numeric_feature> obstacle_x))  ,  (<arith_expr> (<numeric_feature> velocity_x))  ))  ,  (<arith_expr> (  (<arith_expr> (<numeric_feature> intersect_centers_x))   (<math_op> *)   (<arith_expr> (<numeric_feature> obstacle_y))  ))  ))  ))  ,  (<arith_expr> (  (<arith_expr> (  (<arith_expr> (<numeric_feature> intersect_centers_x))   (<math_op> -)   (<arith_expr> (<number> (<maybe_sign> ) (<digit> 0) . (<digit> 1) (<digit> 5)))  ))   (<math_op> +)   (<arith_expr> p_div(  (<arith_expr> p_div(  (<arith_expr> (<numeric_feature> obstacle_y))  ,  (<arith_expr> (<numeric_feature> intersect_radius))  ))  ,  (<arith_expr> (<numeric_feature> intersect_centers_y))  ))  ))  ))  ,  (<arith_expr> (<number> (<maybe_sign> ) (<digit> 8) . (<digit> 8) (<digit> 3)))  ))  ,  (<arith_expr> p_div(  (<arith_expr> (<numeric_feature> intersect_centers_y))  ,  (<arith_expr> p_div(  (<arith_expr> (<number> (<maybe_sign> -) (<digit> 6) . (<digit> 1) (<digit> 5)))  ,  (<arith_expr> hypot(  (<arith_expr> p_div(  (<arith_expr> (<numeric_feature> obstacle_x))  ,  (<arith_expr> (<numeric_feature> velocity_y))  ))  ,  (<arith_expr> p_div(  (<arith_expr> (  (<arith_expr> (<numeric_feature> obstacle_y))   (<math_op> +)   (<arith_expr> (<numeric_feature> obstacle_x))  ))  ,  (<arith_expr> hypot(  (<arith_expr> (<numeric_feature> obstacle_y))  ,  (<arith_expr> (<numeric_feature> obstacle_y))  ))  ))  ))  ))  ))  ))  ))  ))  ))  )))))))  else  (<expr> (<action> 'RECHTS'))))  if  (<direction_compound_expr> (<bool_expr> (<bool_expr> (<bool_expr> (<bool_term> (<bool_factor> (  (<bool_expr> (<bool_expr> (<bool_term> (<bool_term> (<bool_factor> not  (<bool_factor> (<compare> (<arith_expr> hypot(  (<arith_expr> (<number> (<maybe_sign> ) (<digit> 3) . (<digit> 1) (<digit> 7)))  ,  (<arith_expr> hypot(  (<arith_expr> p_div(  (<arith_expr> (<number> (<maybe_sign> ) (<digit> 7) . (<digit> 3) (<digit> 1)))  ,  (<arith_expr> hypot(  (<arith_expr> (<number> (<maybe_sign> ) (<digit> 2) . (<digit> 6) (<digit> 0)))  ,  (<arith_expr> (<numeric_feature> intersect_centers_y))  ))  ))  ,  (<arith_expr> (<numeric_feature> intersect_centers_y))  ))  ))   (<comp_op> <=)   (<arith_expr> (<number> (<maybe_sign> -) (<digit> 5) . (<digit> 5) (<digit> 9)))))))  and  (<bool_factor> not  (<bool_factor> (<compare> (<arith_expr> p_div(  (<arith_expr> p_div(  (<arith_expr> (  (<arith_expr> (<number> (<maybe_sign> -) (<digit> 0) . (<digit> 4) (<digit> 0)))   (<math_op> +)   (<arith_expr> (  (<arith_expr> (<numeric_feature> velocity_y))   (<math_op> +)   (<arith_expr> (<number> (<maybe_sign> ) (<digit> 7) . (<digit> 1) (<digit> 8)))  ))  ))  ,  (<arith_expr> hypot(  (<arith_expr> (  (<arith_expr> hypot(  (<arith_expr> (<numeric_feature> obstacle_y))  ,  (<arith_expr> p_div(  (<arith_expr> (<numeric_feature> intersect_centers_y))  ,  (<arith_expr> (<numeric_feature> velocity_x))  ))  ))   (<math_op> *)   (<arith_expr> (  (<arith_expr> p_div(  (<arith_expr> (<numeric_feature> obstacle_x))  ,  (<arith_expr> (<numeric_feature> obstacle_x))  ))   (<math_op> -)   (<arith_expr> (<numeric_feature> obstacle_y))  ))  ))  ,  (<arith_expr> (<number> (<maybe_sign> ) (<digit> 5) . (<digit> 5) (<digit> 4)))  ))  ))  ,  (<arith_expr> (  (<arith_expr> (<numeric_feature> obstacle_x))   (<math_op> -)   (<arith_expr> (  (<arith_expr> p_div(  (<arith_expr> (<number> (<maybe_sign> -) (<digit> 6) . (<digit> 7) (<digit> 6)))  ,  (<arith_expr> p_div(  (<arith_expr> hypot(  (<arith_expr> (<numeric_feature> intersect_centers_x))  ,  (<arith_expr> (<numeric_feature> intersect_centers_x))  ))  ,  (<arith_expr> (<numeric_feature> intersect_radius))  ))  ))   (<math_op> +)   (<arith_expr> (  (<arith_expr> (<numeric_feature> intersect_centers_x))   (<math_op> +)   (<arith_expr> (<numeric_feature> obstacle_y))  ))  ))  ))  ))   (<comp_op> <=)   (<arith_expr> p_div(  (<arith_expr> (<number> (<maybe_sign> ) (<digit> 4) . (<digit> 8) (<digit> 6)))  ,  (<arith_expr> hypot(  (<arith_expr> p_div(  (<arith_expr> hypot(  (<arith_expr> p_div(  (<arith_expr> (<numeric_feature> intersect_radius))  ,  (<arith_expr> (<numeric_feature> velocity_x))  ))  ,  (<arith_expr> (<number> (<maybe_sign> ) (<digit> 8) . (<digit> 2) (<digit> 2)))  ))  ,  (<arith_expr> (  (<arith_expr> p_div(  (<arith_expr> (<numeric_feature> velocity_y))  ,  (<arith_expr> (<numeric_feature> obstacle_y))  ))   (<math_op> -)   (<arith_expr> (<number> (<maybe_sign> -) (<digit> 0) . (<digit> 3) (<digit> 4)))  ))  ))  ,  (<arith_expr> hypot(  (<arith_expr> (<numeric_feature> intersect_centers_y))  ,  (<arith_expr> (  (<arith_expr> (  (<arith_expr> (<numeric_feature> obstacle_x))   (<math_op> -)   (<arith_expr> (<numeric_feature> velocity_x))  ))   (<math_op> +)   (<arith_expr> (  (<arith_expr> hypot(  (<arith_expr> (<numeric_feature> obstacle_x))  ,  (<arith_expr> (<numeric_feature> obstacle_x))  ))   (<math_op> *)   (<arith_expr> hypot(  (<arith_expr> (<numeric_feature> obstacle_x))  ,  (<arith_expr> (<numeric_feature> velocity_y))  ))  ))  ))  ))  ))  )))))))  or  (<bool_term> (<bool_term> (<bool_factor> (<compare> (<arith_expr> hypot(  (<arith_expr> hypot(  (<arith_expr> p_div(  (<arith_expr> (  (<arith_expr> (<number> (<maybe_sign> -) (<digit> 0) . (<digit> 1) (<digit> 8)))   (<math_op> -)   (<arith_expr> (  (<arith_expr> (  (<arith_expr> hypot(  (<arith_expr> (<numeric_feature> velocity_y))  ,  (<arith_expr> (<numeric_feature> velocity_y))  ))   (<math_op> -)   (<arith_expr> p_div(  (<arith_expr> (<numeric_feature> obstacle_y))  ,  (<arith_expr> (<numeric_feature> intersect_centers_y))  ))  ))   (<math_op> -)   (<arith_expr> hypot(  (<arith_expr> p_div(  (<arith_expr> (<numeric_feature> obstacle_y))  ,  (<arith_expr> (<numeric_feature> obstacle_x))  ))  ,  (<arith_expr> (<numeric_feature> velocity_y))  ))  ))  ))  ,  (<arith_expr> (<numeric_feature> intersect_centers_x))  ))  ,  (<arith_expr> (  (<arith_expr> (<number> (<maybe_sign> ) (<digit> 4) . (<digit> 2) (<digit> 2)))   (<math_op> +)   (<arith_expr> (<number> (<maybe_sign> -) (<digit> 3) . (<digit> 2) (<digit> 3)))  ))  ))  ,  (<arith_expr> (<number> (<maybe_sign> ) (<digit> 8) . (<digit> 0) (<digit> 4)))  ))   (<comp_op> ==)   (<arith_expr> (  (<arith_expr> (  (<arith_expr> (  (<arith_expr> p_div(  (<arith_expr> hypot(  (<arith_expr> (<numeric_feature> velocity_x))  ,  (<arith_expr> (<number> (<maybe_sign> -) (<digit> 4) . (<digit> 5) (<digit> 3)))  ))  ,  (<arith_expr> p_div(  (<arith_expr> (<numeric_feature> velocity_y))  ,  (<arith_expr> (<numeric_feature> velocity_x))  ))  ))   (<math_op> *)   (<arith_expr> (  (<arith_expr> p_div(  (<arith_expr> (<numeric_feature> velocity_y))  ,  (<arith_expr> p_div(  (<arith_expr> (<number> (<maybe_sign> -) (<digit> 0) . (<digit> 8) (<digit> 1)))  ,  (<arith_expr> (<numeric_feature> velocity_y))  ))  ))   (<math_op> -)   (<arith_expr> p_div(  (<arith_expr> (<numeric_feature> intersect_radius))  ,  (<arith_expr> p_div(  (<arith_expr> hypot(  (<arith_expr> (<numeric_feature> obstacle_x))  ,  (<arith_expr> (<numeric_feature> obstacle_y))  ))  ,  (<arith_expr> (<number> (<maybe_sign> ) (<digit> 4) . (<digit> 7) (<digit> 5)))  ))  ))  ))  ))   (<math_op> +)   (<arith_expr> (  (<arith_expr> p_div(  (<arith_expr> (  (<arith_expr> hypot(  (<arith_expr> (<number> (<maybe_sign> ) (<digit> 8) . (<digit> 3) (<digit> 8)))  ,  (<arith_expr> p_div(  (<arith_expr> (<numeric_feature> velocity_y))  ,  (<arith_expr> (<numeric_feature> intersect_radius))  ))  ))   (<math_op> +)   (<arith_expr> (  (<arith_expr> (<numeric_feature> velocity_y))   (<math_op> +)   (<arith_expr> (<numeric_feature> obstacle_y))  ))  ))  ,  (<arith_expr> p_div(  (<arith_expr> hypot(  (<arith_expr> (  (<arith_expr> (<numeric_feature> intersect_centers_y))   (<math_op> *)   (<arith_expr> (<numeric_feature> intersect_centers_y))  ))  ,  (<arith_expr> (<numeric_feature> intersect_centers_y))  ))  ,  (<arith_expr> hypot(  (<arith_expr> p_div(  (<arith_expr> (<numeric_feature> intersect_radius))  ,  (<arith_expr> (<numeric_feature> intersect_centers_y))  ))  ,  (<arith_expr> (<number> (<maybe_sign> -) (<digit> 1) . (<digit> 8) (<digit> 1)))  ))  ))  ))   (<math_op> -)   (<arith_expr> (  (<arith_expr> (  (<arith_expr> hypot(  (<arith_expr> (  (<arith_expr> (<numeric_feature> intersect_centers_y))   (<math_op> -)   (<arith_expr> (<numeric_feature> obstacle_y))  ))  ,  (<arith_expr> (  (<arith_expr> (<numeric_feature> intersect_centers_x))   (<math_op> -)   (<arith_expr> (<numeric_feature> obstacle_x))  ))  ))   (<math_op> -)   (<arith_expr> (<number> (<maybe_sign> ) (<digit> 8) . (<digit> 6) (<digit> 8)))  ))   (<math_op> +)   (<arith_expr> hypot(  (<arith_expr> (<number> (<maybe_sign> ) (<digit> 7) . (<digit> 1) (<digit> 0)))  ,  (<arith_expr> hypot(  (<arith_expr> (  (<arith_expr> (<numeric_feature> obstacle_y))   (<math_op> *)   (<arith_expr> (<numeric_feature> velocity_y))  ))  ,  (<arith_expr> (<number> (<maybe_sign> ) (<digit> 0) . (<digit> 4) (<digit> 5)))  ))  ))  ))  ))  ))   (<math_op> +)   (<arith_expr> p_div(  (<arith_expr> hypot(  (<arith_expr> (<numeric_feature> intersect_radius))  ,  (<arith_expr> (<number> (<maybe_sign> -) (<digit> 1) . (<digit> 0) (<digit> 4)))  ))  ,  (<arith_expr> hypot(  (<arith_expr> (<numeric_feature> velocity_x))  ,  (<arith_expr> (  (<arith_expr> (<numeric_feature> intersect_centers_y))   (<math_op> *)   (<arith_expr> (  (<arith_expr> (  (<arith_expr> (<number> (<maybe_sign> -) (<digit> 2) . (<digit> 5) (<digit> 6)))   (<math_op> -)   (<arith_expr> p_div(  (<arith_expr> (<numeric_feature> intersect_centers_x))  ,  (<arith_expr> (<numeric_feature> intersect_centers_x))  ))  ))   (<math_op> -)   (<arith_expr> (<number> (<maybe_sign> ) (<digit> 5) . (<digit> 0) (<digit> 7)))  ))  ))  ))  ))  )))))  and  (<bool_factor> not  (<bool_factor> (<compare> (<arith_expr> (  (<arith_expr> p_div(  (<arith_expr> (  (<arith_expr> p_div(  (<arith_expr> p_div(  (<arith_expr> (  (<arith_expr> hypot(  (<arith_expr> (<numeric_feature> velocity_y))  ,  (<arith_expr> (<numeric_feature> velocity_x))  ))   (<math_op> -)   (<arith_expr> hypot(  (<arith_expr> (<numeric_feature> intersect_centers_x))  ,  (<arith_expr> (<numeric_feature> intersect_radius))  ))  ))  ,  (<arith_expr> (  (<arith_expr> p_div(  (<arith_expr> (<numeric_feature> intersect_radius))  ,  (<arith_expr> (<numeric_feature> velocity_x))  ))   (<math_op> -)   (<arith_expr> (<numeric_feature> intersect_radius))  ))  ))  ,  (<arith_expr> p_div(  (<arith_expr> hypot(  (<arith_expr> (<numeric_feature> obstacle_y))  ,  (<arith_expr> (<numeric_feature> obstacle_x))  ))  ,  (<arith_expr> (<numeric_feature> obstacle_x))  ))  ))   (<math_op> *)   (<arith_expr> (  (<arith_expr> (<numeric_feature> intersect_radius))   (<math_op> -)   (<arith_expr> hypot(  (<arith_expr> (  (<arith_expr> (<numeric_feature> obstacle_y))   (<math_op> +)   (<arith_expr> p_div(  (<arith_expr> (<numeric_feature> obstacle_y))  ,  (<arith_expr> (<numeric_feature> velocity_x))  ))  ))  ,  (<arith_expr> hypot(  (<arith_expr> p_div(  (<arith_expr> (<numeric_feature> intersect_centers_x))  ,  (<arith_expr> (<numeric_feature> intersect_centers_x))  ))  ,  (<arith_expr> (<number> (<maybe_sign> -) (<digit> 2) . (<digit> 0) (<digit> 5)))  ))  ))  ))  ))  ,  (<arith_expr> (  (<arith_expr> (  (<arith_expr> (<number> (<maybe_sign> -) (<digit> 6) . (<digit> 2) (<digit> 9)))   (<math_op> +)   (<arith_expr> (<numeric_feature> intersect_centers_y))  ))   (<math_op> *)   (<arith_expr> hypot(  (<arith_expr> (  (<arith_expr> p_div(  (<arith_expr> (  (<arith_expr> (<numeric_feature> obstacle_y))   (<math_op> *)   (<arith_expr> (<numeric_feature> velocity_y))  ))  ,  (<arith_expr> (<number> (<maybe_sign> ) (<digit> 6) . (<digit> 1) (<digit> 0)))  ))   (<math_op> -)   (<arith_expr> (<number> (<maybe_sign> -) (<digit> 7) . (<digit> 1) (<digit> 0)))  ))  ,  (<arith_expr> (  (<arith_expr> hypot(  (<arith_expr> (<numeric_feature> obstacle_x))  ,  (<arith_expr> (<number> (<maybe_sign> -) (<digit> 7) . (<digit> 7) (<digit> 6)))  ))   (<math_op> +)   (<arith_expr> (  (<arith_expr> p_div(  (<arith_expr> (<numeric_feature> intersect_centers_y))  ,  (<arith_expr> (<numeric_feature> intersect_centers_x))  ))   (<math_op> +)   (<arith_expr> p_div(  (<arith_expr> (<numeric_feature> intersect_centers_x))  ,  (<arith_expr> (<numeric_feature> obstacle_y))  ))  ))  ))  ))  ))  ))   (<math_op> -)   (<arith_expr> (  (<arith_expr> (  (<arith_expr> (<number> (<maybe_sign> ) (<digit> 1) . (<digit> 0) (<digit> 4)))   (<math_op> *)   (<arith_expr> (<numeric_feature> obstacle_y))  ))   (<math_op> *)   (<arith_expr> (<number> (<maybe_sign> -) (<digit> 2) . (<digit> 4) (<digit> 0)))  ))  ))   (<comp_op> <=)   (<arith_expr> (  (<arith_expr> (<numeric_feature> obstacle_y))   (<math_op> +)   (<arith_expr> (<numeric_feature> intersect_centers_x))  )))))))  ))))  or  (<bool_term> (<bool_factor> (  (<bool_expr> (<bool_term> (<bool_factor> (<compare> (<arith_expr> (  (<arith_expr> hypot(  (<arith_expr> hypot(  (<arith_expr> p_div(  (<arith_expr> (<numeric_feature> obstacle_x))  ,  (<arith_expr> p_div(  (<arith_expr> p_div(  (<arith_expr> (<numeric_feature> velocity_x))  ,  (<arith_expr> hypot(  (<arith_expr> hypot(  (<arith_expr> (<number> (<maybe_sign> -) (<digit> 9) . (<digit> 9) (<digit> 8)))  ,  (<arith_expr> p_div(  (<arith_expr> (<numeric_feature> obstacle_y))  ,  (<arith_expr> (<numeric_feature> velocity_x))  ))  ))  ,  (<arith_expr> (<numeric_feature> obstacle_y))  ))  ))  ,  (<arith_expr> (  (<arith_expr> hypot(  (<arith_expr> p_div(  (<arith_expr> (<numeric_feature> velocity_y))  ,  (<arith_expr> hypot(  (<arith_expr> (<numeric_feature> velocity_x))  ,  (<arith_expr> (<numeric_feature> obstacle_x))  ))  ))  ,  (<arith_expr> (<numeric_feature> velocity_x))  ))   (<math_op> +)   (<arith_expr> p_div(  (<arith_expr> (<number> (<maybe_sign> -) (<digit> 6) . (<digit> 9) (<digit> 9)))  ,  (<arith_expr> hypot(  (<arith_expr> hypot(  (<arith_expr> (<numeric_feature> intersect_radius))  ,  (<arith_expr> (<numeric_feature> obstacle_y))  ))  ,  (<arith_expr> (<numeric_feature> intersect_centers_y))  ))  ))  ))  ))  ))  ,  (<arith_expr> (<numeric_feature> intersect_centers_y))  ))  ,  (<arith_expr> p_div(  (<arith_expr> hypot(  (<arith_expr> p_div(  (<arith_expr> (<number> (<maybe_sign> -) (<digit> 2) . (<digit> 9) (<digit> 8)))  ,  (<arith_expr> (<numeric_feature> velocity_y))  ))  ,  (<arith_expr> p_div(  (<arith_expr> hypot(  (<arith_expr> (<number> (<maybe_sign> -) (<digit> 3) . (<digit> 4) (<digit> 6)))  ,  (<arith_expr> (<number> (<maybe_sign> -) (<digit> 2) . (<digit> 0) (<digit> 4)))  ))  ,  (<arith_expr> hypot(  (<arith_expr> hypot(  (<arith_expr> p_div(  (<arith_expr> p_div(  (<arith_expr> (<numeric_feature> intersect_centers_y))  ,  (<arith_expr> (<numeric_feature> velocity_x))  ))  ,  (<arith_expr> p_div(  (<arith_expr> (<numeric_feature> velocity_x))  ,  (<arith_expr> (<numeric_feature> intersect_centers_x))  ))  ))  ,  (<arith_expr> p_div(  (<arith_expr> hypot(  (<arith_expr> (<numeric_feature> intersect_radius))  ,  (<arith_expr> (<numeric_feature> intersect_centers_y))  ))  ,  (<arith_expr> (  (<arith_expr> (<numeric_feature> obstacle_x))   (<math_op> +)   (<arith_expr> (<numeric_feature> intersect_centers_x))  ))  ))  ))  ,  (<arith_expr> hypot(  (<arith_expr> (<number> (<maybe_sign> ) (<digit> 8) . (<digit> 2) (<digit> 5)))  ,  (<arith_expr> p_div(  (<arith_expr> (<number> (<maybe_sign> -) (<digit> 9) . (<digit> 4) (<digit> 1)))  ,  (<arith_expr> (<number> (<maybe_sign> ) (<digit> 6) . (<digit> 6) (<digit> 9)))  ))  ))  ))  ))  ))  ,  (<arith_expr> (<number> (<maybe_sign> ) (<digit> 0) . (<digit> 7) (<digit> 6)))  ))  ))   (<math_op> *)   (<arith_expr> (<numeric_feature> obstacle_x))  ))   (<comp_op> <=)   (<arith_expr> (<numeric_feature> obstacle_x))))))  ))))  or  (<bool_term> (<bool_term> (<bool_term> (<bool_term> (<bool_factor> (  (<bool_expr> (<bool_term> (<bool_term> (<bool_factor> (  (<bool_expr> (<bool_expr> (<bool_expr> (<bool_term> (<bool_factor> (<compare> (<arith_expr> (  (<arith_expr> (<numeric_feature> velocity_y))   (<math_op> +)   (<arith_expr> (<numeric_feature> obstacle_x))  ))   (<comp_op> !=)   (<arith_expr> hypot(  (<arith_expr> (<numeric_feature> intersect_centers_x))  ,  (<arith_expr> (<numeric_feature> velocity_x))  ))))))  or  (<bool_term> (<bool_term> (<bool_term> (<bool_factor> (<compare> (<arith_expr> (<numeric_feature> obstacle_y))   (<comp_op> <)   (<arith_expr> (<numeric_feature> obstacle_x)))))  and  (<bool_factor> not  (<bool_factor> (<compare> (<arith_expr> (<numeric_feature> intersect_centers_x))   (<comp_op> >=)   (<arith_expr> (<numeric_feature> velocity_x))))))  and  (<bool_factor> (<compare> (<arith_expr> p_div(  (<arith_expr> (  (<arith_expr> (<numeric_feature> intersect_radius))   (<math_op> +)   (<arith_expr> (<numeric_feature> intersect_radius))  ))  ,  (<arith_expr> p_div(  (<arith_expr> (<numeric_feature> obstacle_x))  ,  (<arith_expr> (<numeric_feature> intersect_centers_x))  ))  ))   (<comp_op> >=)   (<arith_expr> (  (<arith_expr> (<number> (<maybe_sign> -) (<digit> 6) . (<digit> 1) (<digit> 3)))   (<math_op> -)   (<arith_expr> (  (<arith_expr> (<numeric_feature> obstacle_y))   (<math_op> *)   (<arith_expr> (<numeric_feature> velocity_x))  ))  ))))))  or  (<bool_term> (<bool_factor> (  (<bool_expr> (<bool_term> (<bool_factor> (<compare> (<arith_expr> (<numeric_feature> velocity_x))   (<comp_op> >)   (<arith_expr> (<numeric_feature> velocity_y))))))  ))))  )))  and  (<bool_factor> (<compare> (<arith_expr> hypot(  (<arith_expr> hypot(  (<arith_expr> (<number> (<maybe_sign> -) (<digit> 5) . (<digit> 1) (<digit> 0)))  ,  (<arith_expr> (<number> (<maybe_sign> -) (<digit> 9) . (<digit> 6) (<digit> 8)))  ))  ,  (<arith_expr> (<number> (<maybe_sign> -) (<digit> 4) . (<digit> 4) (<digit> 7)))  ))   (<comp_op> ==)   (<arith_expr> (<numeric_feature> intersect_centers_x))))))  )))  and  (<bool_factor> not  (<bool_factor> (  (<bool_expr> (<bool_expr> (<bool_term> (<bool_term> (<bool_factor> (  (<bool_expr> (<bool_term> (<bool_factor> not  (<bool_factor> not  (<bool_factor> (<compare> (<arith_expr> (<numeric_feature> velocity_y))   (<comp_op> <=)   (<arith_expr> (<numeric_feature> obstacle_x))))))))  )))  and  (<bool_factor> (<compare> (<arith_expr> (<numeric_feature> velocity_x))   (<comp_op> >)   (<arith_expr> hypot(  (<arith_expr> p_div(  (<arith_expr> p_div(  (<arith_expr> (  (<arith_expr> (<number> (<maybe_sign> -) (<digit> 5) . (<digit> 3) (<digit> 0)))   (<math_op> *)   (<arith_expr> (<number> (<maybe_sign> -) (<digit> 2) . (<digit> 3) (<digit> 6)))  ))  ,  (<arith_expr> (<numeric_feature> obstacle_y))  ))  ,  (<arith_expr> (<numeric_feature> intersect_centers_x))  ))  ,  (<arith_expr> (  (<arith_expr> hypot(  (<arith_expr> (<number> (<maybe_sign> -) (<digit> 9) . (<digit> 7) (<digit> 9)))  ,  (<arith_expr> p_div(  (<arith_expr> (  (<arith_expr> (  (<arith_expr> (<numeric_feature> obstacle_y))   (<math_op> -)   (<arith_expr> (<numeric_feature> obstacle_y))  ))   (<math_op> -)   (<arith_expr> p_div(  (<arith_expr> (<numeric_feature> velocity_x))  ,  (<arith_expr> (<numeric_feature> intersect_centers_x))  ))  ))  ,  (<arith_expr> (  (<arith_expr> p_div(  (<arith_expr> (<numeric_feature> intersect_centers_x))  ,  (<arith_expr> (<numeric_feature> intersect_centers_x))  ))   (<math_op> -)   (<arith_expr> p_div(  (<arith_expr> (<numeric_feature> obstacle_x))  ,  (<arith_expr> (<numeric_feature> intersect_radius))  ))  ))  ))  ))   (<math_op> -)   (<arith_expr> (  (<arith_expr> p_div(  (<arith_expr> p_div(  (<arith_expr> (  (<arith_expr> (<numeric_feature> intersect_centers_x))   (<math_op> *)   (<arith_expr> (<numeric_feature> velocity_y))  ))  ,  (<arith_expr> (<number> (<maybe_sign> ) (<digit> 7) . (<digit> 1) (<digit> 1)))  ))  ,  (<arith_expr> p_div(  (<arith_expr> (  (<arith_expr> (<numeric_feature> velocity_y))   (<math_op> -)   (<arith_expr> (<numeric_feature> obstacle_x))  ))  ,  (<arith_expr> (<number> (<maybe_sign> -) (<digit> 0) . (<digit> 8) (<digit> 2)))  ))  ))   (<math_op> +)   (<arith_expr> (<numeric_feature> intersect_centers_y))  ))  ))  ))))))  or  (<bool_term> (<bool_factor> (<compare> (<arith_expr> p_div(  (<arith_expr> hypot(  (<arith_expr> hypot(  (<arith_expr> (  (<arith_expr> hypot(  (<arith_expr> p_div(  (<arith_expr> (<number> (<maybe_sign> ) (<digit> 3) . (<digit> 4) (<digit> 1)))  ,  (<arith_expr> (  (<arith_expr> (<numeric_feature> intersect_centers_x))   (<math_op> +)   (<arith_expr> (<numeric_feature> velocity_x))  ))  ))  ,  (<arith_expr> hypot(  (<arith_expr> p_div(  (<arith_expr> (<numeric_feature> intersect_centers_y))  ,  (<arith_expr> (<numeric_feature> intersect_centers_y))  ))  ,  (<arith_expr> (<numeric_feature> velocity_x))  ))  ))   (<math_op> -)   (<arith_expr> (  (<arith_expr> p_div(  (<arith_expr> (  (<arith_expr> (<numeric_feature> intersect_radius))   (<math_op> -)   (<arith_expr> (<numeric_feature> intersect_centers_x))  ))  ,  (<arith_expr> p_div(  (<arith_expr> (<numeric_feature> intersect_centers_y))  ,  (<arith_expr> (<numeric_feature> intersect_centers_y))  ))  ))   (<math_op> *)   (<arith_expr> (<numeric_feature> intersect_centers_y))  ))  ))  ,  (<arith_expr> p_div(  (<arith_expr> hypot(  (<arith_expr> (<number> (<maybe_sign> -) (<digit> 2) . (<digit> 2) (<digit> 2)))  ,  (<arith_expr> (<numeric_feature> intersect_radius))  ))  ,  (<arith_expr> p_div(  (<arith_expr> (  (<arith_expr> hypot(  (<arith_expr> (<numeric_feature> intersect_radius))  ,  (<arith_expr> (<numeric_feature> velocity_x))  ))   (<math_op> *)   (<arith_expr> p_div(  (<arith_expr> (<numeric_feature> obstacle_y))  ,  (<arith_expr> (<numeric_feature> velocity_x))  ))  ))  ,  (<arith_expr> (<numeric_feature> intersect_radius))  ))  ))  ))  ,  (<arith_expr> (<number> (<maybe_sign> ) (<digit> 0) . (<digit> 5) (<digit> 3)))  ))  ,  (<arith_expr> (  (<arith_expr> (  (<arith_expr> hypot(  (<arith_expr> hypot(  (<arith_expr> (<number> (<maybe_sign> -) (<digit> 1) . (<digit> 9) (<digit> 6)))  ,  (<arith_expr> hypot(  (<arith_expr> hypot(  (<arith_expr> (<numeric_feature> velocity_y))  ,  (<arith_expr> (<numeric_feature> velocity_y))  ))  ,  (<arith_expr> hypot(  (<arith_expr> (<numeric_feature> obstacle_y))  ,  (<arith_expr> (<numeric_feature> intersect_centers_y))  ))  ))  ))  ,  (<arith_expr> (<number> (<maybe_sign> -) (<digit> 9) . (<digit> 1) (<digit> 0)))  ))   (<math_op> +)   (<arith_expr> (  (<arith_expr> (  (<arith_expr> (  (<arith_expr> p_div(  (<arith_expr> (<numeric_feature> intersect_centers_x))  ,  (<arith_expr> (<numeric_feature> obstacle_y))  ))   (<math_op> +)   (<arith_expr> (  (<arith_expr> (<numeric_feature> intersect_radius))   (<math_op> -)   (<arith_expr> (<numeric_feature> intersect_centers_y))  ))  ))   (<math_op> *)   (<arith_expr> p_div(  (<arith_expr> hypot(  (<arith_expr> (<numeric_feature> intersect_radius))  ,  (<arith_expr> (<numeric_feature> obstacle_x))  ))  ,  (<arith_expr> hypot(  (<arith_expr> (<numeric_feature> intersect_centers_x))  ,  (<arith_expr> (<numeric_feature> intersect_centers_x))  ))  ))  ))   (<math_op> *)   (<arith_expr> p_div(  (<arith_expr> p_div(  (<arith_expr> p_div(  (<arith_expr> (<numeric_feature> obstacle_x))  ,  (<arith_expr> (<numeric_feature> intersect_centers_x))  ))  ,  (<arith_expr> p_div(  (<arith_expr> (<numeric_feature> intersect_centers_y))  ,  (<arith_expr> (<numeric_feature> velocity_x))  ))  ))  ,  (<arith_expr> p_div(  (<arith_expr> (<numeric_feature> velocity_y))  ,  (<arith_expr> p_div(  (<arith_expr> (<numeric_feature> obstacle_x))  ,  (<arith_expr> (<numeric_feature> intersect_radius))  ))  ))  ))  ))  ))   (<math_op> *)   (<arith_expr> p_div(  (<arith_expr> p_div(  (<arith_expr> (<number> (<maybe_sign> ) (<digit> 9) . (<digit> 4) (<digit> 0)))  ,  (<arith_expr> hypot(  (<arith_expr> (  (<arith_expr> hypot(  (<arith_expr> (<numeric_feature> intersect_centers_x))  ,  (<arith_expr> (<numeric_feature> intersect_radius))  ))   (<math_op> -)   (<arith_expr> p_div(  (<arith_expr> (<numeric_feature> obstacle_x))  ,  (<arith_expr> (<numeric_feature> velocity_x))  ))  ))  ,  (<arith_expr> p_div(  (<arith_expr> (  (<arith_expr> (<numeric_feature> intersect_centers_y))   (<math_op> -)   (<arith_expr> (<numeric_feature> obstacle_x))  ))  ,  (<arith_expr> (<number> (<maybe_sign> ) (<digit> 9) . (<digit> 7) (<digit> 2)))  ))  ))  ))  ,  (<arith_expr> (<numeric_feature> velocity_y))  ))  ))  ))   (<comp_op> <=)   (<arith_expr> (<numeric_feature> intersect_centers_x))))))  ))))  and  (<bool_factor> (<compare> (<arith_expr> (<number> (<maybe_sign> -) (<digit> 9) . (<digit> 7) (<digit> 0)))   (<comp_op> ==)   (<arith_expr> (<numeric_feature> intersect_centers_y)))))  and  (<bool_factor> (  (<bool_expr> (<bool_expr> (<bool_term> (<bool_factor> (<compare> (<arith_expr> (  (<arith_expr> hypot(  (<arith_expr> hypot(  (<arith_expr> p_div(  (<arith_expr> (<numeric_feature> obstacle_x))  ,  (<arith_expr> p_div(  (<arith_expr> p_div(  (<arith_expr> (<numeric_feature> velocity_x))  ,  (<arith_expr> hypot(  (<arith_expr> hypot(  (<arith_expr> (<number> (<maybe_sign> -) (<digit> 9) . (<digit> 9) (<digit> 8)))  ,  (<arith_expr> p_div(  (<arith_expr> (<numeric_feature> obstacle_y))  ,  (<arith_expr> (<numeric_feature> velocity_x))  ))  ))  ,  (<arith_expr> (<numeric_feature> obstacle_y))  ))  ))  ,  (<arith_expr> (  (<arith_expr> hypot(  (<arith_expr> p_div(  (<arith_expr> (<numeric_feature> velocity_y))  ,  (<arith_expr> hypot(  (<arith_expr> (<numeric_feature> velocity_x))  ,  (<arith_expr> (<numeric_feature> obstacle_x))  ))  ))  ,  (<arith_expr> (<numeric_feature> velocity_x))  ))   (<math_op> +)   (<arith_expr> p_div(  (<arith_expr> (<number> (<maybe_sign> -) (<digit> 6) . (<digit> 9) (<digit> 9)))  ,  (<arith_expr> hypot(  (<arith_expr> hypot(  (<arith_expr> (<numeric_feature> intersect_radius))  ,  (<arith_expr> (<numeric_feature> obstacle_y))  ))  ,  (<arith_expr> (<numeric_feature> intersect_centers_y))  ))  ))  ))  ))  ))  ,  (<arith_expr> (<numeric_feature> intersect_centers_y))  ))  ,  (<arith_expr> p_div(  (<arith_expr> hypot(  (<arith_expr> p_div(  (<arith_expr> (<number> (<maybe_sign> -) (<digit> 2) . (<digit> 9) (<digit> 8)))  ,  (<arith_expr> (<numeric_feature> velocity_y))  ))  ,  (<arith_expr> p_div(  (<arith_expr> hypot(  (<arith_expr> (<number> (<maybe_sign> -) (<digit> 3) . (<digit> 4) (<digit> 6)))  ,  (<arith_expr> (<number> (<maybe_sign> -) (<digit> 2) . (<digit> 0) (<digit> 4)))  ))  ,  (<arith_expr> hypot(  (<arith_expr> hypot(  (<arith_expr> p_div(  (<arith_expr> p_div(  (<arith_expr> (<numeric_feature> intersect_centers_y))  ,  (<arith_expr> (<numeric_feature> velocity_x))  ))  ,  (<arith_expr> p_div(  (<arith_expr> (<numeric_feature> velocity_x))  ,  (<arith_expr> (<numeric_feature> intersect_centers_x))  ))  ))  ,  (<arith_expr> p_div(  (<arith_expr> hypot(  (<arith_expr> (<numeric_feature> intersect_radius))  ,  (<arith_expr> (<numeric_feature> intersect_centers_y))  ))  ,  (<arith_expr> (  (<arith_expr> (<numeric_feature> obstacle_x))   (<math_op> +)   (<arith_expr> (<numeric_feature> intersect_centers_x))  ))  ))  ))  ,  (<arith_expr> hypot(  (<arith_expr> (<number> (<maybe_sign> ) (<digit> 8) . (<digit> 2) (<digit> 5)))  ,  (<arith_expr> p_div(  (<arith_expr> (<number> (<maybe_sign> -) (<digit> 9) . (<digit> 4) (<digit> 1)))  ,  (<arith_expr> (<number> (<maybe_sign> ) (<digit> 6) . (<digit> 6) (<digit> 9)))  ))  ))  ))  ))  ))  ,  (<arith_expr> (<number> (<maybe_sign> ) (<digit> 0) . (<digit> 7) (<digit> 6)))  ))  ))   (<math_op> *)   (<arith_expr> (<numeric_feature> obstacle_x))  ))   (<comp_op> <=)   (<arith_expr> (<numeric_feature> obstacle_x))))))  or  (<bool_term> (<bool_factor> not  (<bool_factor> not  (<bool_factor> (  (<bool_expr> (<bool_term> (<bool_factor> not  (<bool_factor> (<compare> (<arith_expr> hypot(  (<arith_expr> hypot(  (<arith_expr> (<numeric_feature> intersect_radius))  ,  (<arith_expr> (<number> (<maybe_sign> ) (<digit> 5) . (<digit> 1) (<digit> 7)))  ))  ,  (<arith_expr> hypot(  (<arith_expr> (  (<arith_expr> (<number> (<maybe_sign> -) (<digit> 2) . (<digit> 4) (<digit> 3)))   (<math_op> +)   (<arith_expr> hypot(  (<arith_expr> (<numeric_feature> obstacle_y))  ,  (<arith_expr> (<numeric_feature> velocity_y))  ))  ))  ,  (<arith_expr> p_div(  (<arith_expr> (<numeric_feature> velocity_y))  ,  (<arith_expr> (<numeric_feature> intersect_centers_y))  ))  ))  ))   (<comp_op> <=)   (<arith_expr> p_div(  (<arith_expr> (<number> (<maybe_sign> ) (<digit> 0) . (<digit> 0) (<digit> 6)))  ,  (<arith_expr> hypot(  (<arith_expr> hypot(  (<arith_expr> hypot(  (<arith_expr> (<numeric_feature> obstacle_x))  ,  (<arith_expr> (<numeric_feature> intersect_centers_y))  ))  ,  (<arith_expr> (<numeric_feature> velocity_y))  ))  ,  (<arith_expr> p_div(  (<arith_expr> (  (<arith_expr> (<numeric_feature> velocity_y))   (<math_op> *)   (<arith_expr> (<numeric_feature> obstacle_x))  ))  ,  (<arith_expr> (<numeric_feature> obstacle_x))  ))  ))  )))))))  ))))))  ))))  or  (<boolean_feature> direction))  else  (<expr> (<if_expr> (<expr> (<action> 'LINKS'))  if  (<direction_compound_expr> (<bool_expr> (<bool_term> (<bool_factor> not  (<bool_factor> (<compare> (<arith_expr> hypot(  (<arith_expr> (<number> (<maybe_sign> ) (<digit> 9) . (<digit> 8) (<digit> 6)))  ,  (<arith_expr> (<number> (<maybe_sign> ) (<digit> 0) . (<digit> 4) (<digit> 3)))  ))   (<comp_op> >=)   (<arith_expr> hypot(  (<arith_expr> (<number> (<maybe_sign> -) (<digit> 5) . (<digit> 8) (<digit> 8)))  ,  (<arith_expr> p_div(  (<arith_expr> (<number> (<maybe_sign> -) (<digit> 4) . (<digit> 1) (<digit> 1)))  ,  (<arith_expr> p_div(  (<arith_expr> (<number> (<maybe_sign> ) (<digit> 7) . (<digit> 5) (<digit> 1)))  ,  (<arith_expr> (<number> (<maybe_sign> -) (<digit> 2) . (<digit> 8) (<digit> 9)))  ))  ))  )))))))  and  (<boolean_feature> not direction))  else  (<expr> (<action> 'LINKS'))))))))

Fitness:
7.8998231394373954